{"mappings":"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,mB;I,c;I,S;I,oB;I,Q;I,sB;I,mB;I,O;I,gB;I,U;I,4B;I,gC;A;A,O,c,C,S,kC;I,Y;I,K;Q,O,oB,O;I;A;A,O,c,C,S,c;I,Y;I,K;Q,O,Y,O;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,a,O;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,0B,O;I;A;A,O,c,C,S,c;I,Y;I,K;Q,O,Y,O;I;A;A,O,c,C,S,8B;I,Y;I,K;Q,O,4B,O;I;A;A,O,c,C,S,S;I,Y;I,K;Q,O,O,O;I;A;A,O,c,C,S,a;I,Y;I,K;Q,O,W,O;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,qB,O;I;A;A,O,c,C,S,a;I,Y;I,K;Q,O,W,O;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,iB,O;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,qB,O;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,mB,O;I;A;A,O,c,C,S,qC;I,Y;I,K;Q,O,mC,O;I;A;A,O,c,C,S,6B;I,Y;I,K;Q,O,qB,O;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,a,O;I;A;A,O,c,C,S,yB;I,Y;I,K;Q,O,uB,O;I;A;A,O,c,C,S,8B;I,Y;I,K;Q,O,4B,O;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,sB,O;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,wB,O;I;A;A,O,c,C,S,2B;I,Y;I,K;Q,O,yB,O;I;A;A,O,c,C,S,Y;I,Y;I,K;Q,O,U,O;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,kB,O;I;A;A,O,c,C,S,M;I,Y;I,K;Q,O,I,O;I;A;A,O,c,C,S,a;I,Y;I,K;Q,O,W,O;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,e,O;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,a,O;I;A;A,O,c,C,S,S;I,Y;I,K;Q,O,O,O;I;A;A,O,c,C,S,U;I,Y;I,K;Q,O,Q,O;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,mB,O;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,mB,O;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,c,O;I;A;A,O,c,C,S,W;I,Y;I,K;Q,O,S,O;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,oB,O;I;A;A,O,c,C,S,U;I,Y;I,K;Q,O,Q,O;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,sB,O;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,mB,O;I;A;A,O,c,C,S,S;I,Y;I,K;Q,O,O,O;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,gB,O;I;A;A,O,c,C,S,6B;I,Y;I,K;Q,O,2B,O;I;A;A,Q,K,G,K;A,O,c,C,S,kB;I,Y;I,K;Q,O,gB,O;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,kB,O;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,sB,O;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,sB,O;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,c,O;I;A;A,O,c,C,S,2B;I,Y;I,K;Q,O,yB,O;I;A;A,O,c,C,S,W;I,Y;I,K;Q,O,S,O;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,e,O;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,c,O;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,c,O;I;A;A,O,c,C,S,c;I,Y;I,K;Q,O,Y,O;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,a,O;I;A;A,O,c,C,S,Y;I,Y;I,K;Q,O,U,O;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,c,O;I;A;A,O,c,C,S,Y;I,Y;I,K;Q,O,U,O;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,a,O;I;A;AE7HA,IAAAA,oBAAAC,QAAA;AACA,IAAAC,eAAAD,QAAA;AACA,IAAAE,iBAAAF,QAAA;AAGA,IAAAG,cAAAH,QAAA;AACA,IAAAI,SAAAJ,QAAA;AAAAK,OAAAC,IAAA,CAAAF,QAAAG,OAAA,CAAA,SAAAC,GAAA;IAAA,IAAAA,QAAA,aAAAA,QAAA,cAAA;IAAA,IAAAH,OAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,cAAAJ,MAAA;IAAA,IAAAA,OAAAK,WAAAA,OAAA,CAAAL,IAAA,KAAAJ,MAAA,CAAAI,IAAA,EAAA;IAAAH,OAAAS,cAAA,CAAAD,SAAAL,KAAAH;QAAAU,YAAAA;QAAAC,KAAA;YAAA,OAAAZ,MAAA,CAAAI,IAAA;QAAA;IAAA;AAAA;AAGA,IAAAS,qCAAAjB,QAAA;AAEA,IAAAkB,uBAAAlB,QAAA;AAEA,IAAAm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,OAAOA,OAAOA,KAAKC,MAAM,CAC9DF,MAAMG,IAAI,CAACF,KAAKG,QAAQ;IAE1BJ,MAAMG,IAAI,CAACF;IAEX,IAAID,MAAMK,MAAM,GAAGZ,MAAMY,MAAM,EAAE,OAAO;IACxC,IAAI,CAACb,gBAAgBQ,MAAMK,MAAM,GAAGZ,MAAMY,MAAM,EAAE,OAAO;IAEzD,IAAK,IAAIC,IAAI,GAAGC,IAAIP,MAAMK,MAAM,GAAG,GAAGC,IAAIb,MAAMY,MAAM,EAAEC,KAAKC,IAAK;QAChE,MAAMN,OAAOD,KAAK,CAACO,EAAE;QACrB,IAAIC;QACJ,IAAI,AAAA,CAAA,GAAAC,OAAAA,YAAY,AAAZA,EAAaR,OACfO,QAAQP,KAAKS,IAAI;aACZ,IAAI,AAAA,CAAA,GAAAC,OAAAA,eAAe,AAAfA,EAAgBV,OACzBO,QAAQP,KAAKO,KAAK;aACb,IAAI,AAAA,CAAA,GAAAI,OAAAA,gBAAgB,AAAhBA,EAAiBX,OAC1BO,QAAQ;aAER,OAAO;QAGT,IAAIf,KAAK,CAACa,EAAE,KAAKE,OAAO,OAAO;IACjC;IAEA,OAAO;AACT;;;A;A,O,c,C,S,c;I,O;A;A,Q,U,G;A,Q,mB,G;A,Q,qB,G;A,Q,iB,G;A,Q,c,G;A,Q,qB,G;A,Q,yB,G;A,Q,sB,G;A,Q,mB,G;A,Q,iB,G;A,Q,e,G;A,Q,Q,G;A,Q,kB,G;A,Q,gB,G;A,Q,O,G;A,Q,a,G;A,Q,gB,G;A,Q,gB,G;A,Q,8B,G;A,Q,uB,G;A,Q,gB,G;A,Q,gB,G;A,Q,a,G;A,Q,O,G;A,Q,uB,G;A,Q,W,G;A,Q,kB,G;A,Q,iB,G;A,Q,iB,G;A,Q,a,G;A,Q,oB,G;A,Q,sB,G;A,Q,e,G;A,Q,qB,G;A,Q,a,G;A,Q,uB,G;A,Q,mB,G;A,Q,mB,G;A,Q,gB,G;A,Q,a,G;A,Q,c,G;A,Q,6B,G;A,Q,0B,G;A,Q,iB,G;A,Q,kB,G;A,Q,e,G;A,Q,sB,G;A,Q,mB,G;A,Q,kB,G;A,Q,iB,G;A,Q,mB,G;A,Q,W,G;A,Q,W,G;A,Q,kB,G;A,Q,c,G;A,Q,kB,G;A,Q,gB,G;A,Q,qB,G;A,Q,U,G;A,Q,iB,G;A,Q,mB,G;A,Q,iB,G;A,Q,qB,G;A,Q,Y,G;A,Q,gB,G;A,Q,kB,G;A,Q,gB,G;A,Q,kB,G;A,Q,gB,G;A,Q,sB,G;A,Q,sB,G;A,Q,mB,G;A,Q,0B,G;A,Q,wB,G;A,Q,wB,G;A,Q,0B,G;A,Q,iB,G;A,Q,Y,G;A,Q,qB,G;A,Q,mB,G;A,Q,M,G;A,Q,M,G;A,Q,oB,G;A,Q,iB,G;A,Q,e,G;A,Q,U,G;A,Q,K,G;A,Q,gB,G;A,Q,gB,G;A,Q,c,G;A,Q,e,G;A,Q,U,G;A,Q,qB,G;A,Q,oB,G;A,Q,gB,G;A,Q,wB,G;A,Q,mB,G;A,Q,uB,G;A,Q,Y,G;A,Q,a,G;A,Q,W,G;A,Q,Q,G;A,Q,iB,G;A,Q,mB,G;A,Q,wB,G;A,Q,kB,G;A,Q,0B,G;A,Q,2B,G;A,Q,iB,G;A,Q,mB,G;A,Q,mB,G;A,Q,sB,G;A,Q,kB,G;A,Q,yB,G;A,Q,sB,G;A,Q,4B,G;A,Q,K,G;A,Q,c,G;A,Q,mB,G;A,Q,oB,G;A,Q,Y,G;A,Q,oB,G;A,Q,wB,G;A,Q,a,G;A,Q,e,G;A,Q,qB,G;A,Q,mB,G;A,Q,mB,G;A,Q,oB,G;A,Q,oB,G;A,Q,gB,G;A,Q,S,G;A,Q,M,G;A,Q,kB,G;A,Q,S,G;A,Q,mB,G;A,Q,M,G;A,Q,kB,G;A,Q,c,G;A,Q,Q,G;A,Q,e,G;A,Q,qB,G;A,Q,mB,G;A,Q,kB,G;A,Q,iB,G;A,Q,e,G;A,Q,M,G;A,Q,a,G;A,Q,2B,G;A,Q,wB,G;A,Q,e,G;A,Q,6B,G;A,Q,sB,G;A,Q,gB,G;A,Q,kB,G;A,Q,c,G;A,Q,c,G;A,Q,e,G;A,Q,gB,G;A,Q,sB,G;A,Q,wB,G;A,Q,mB,G;A,Q,wB,G;A,Q,oB,G;A,Q,0B,G;A,Q,Y,G;A,Q,wB,G;A,Q,2B,G;A,Q,0B,G;A,Q,yB,G;A,Q,S,G;A,Q,a,G;A,Q,sB,G;A,Q,+B,G;A,Q,yB,G;A,Q,a,G;A,Q,S,G;A,Q,a,G;A,Q,S,G;A,Q,U,G;A,Q,S,G;A,Q,yB,G;A,Q,kB,G;A,Q,e,G;A,Q,c,G;A,Q,a,G;A,Q,c,G;A,Q,iB,G;A,Q,U,G;A,Q,oB,G;A,Q,e,G;A,Q,gB,G;A,Q,c,G;A,Q,W,G;A,Q,a,G;A,Q,e,G;A,Q,6B,G;A,Q,sB,G;A,Q,O,G;A,Q,Y,G;A,Q,iB,G;A,Q,sB,G;A,Q,c,G;A,Q,a,G;A,Q,gB,G;A,Q,Y,G;A,Q,iB,G;A,Q,kB,G;A,Q,4B,G;A,Q,mB,G;A,Q,iC,G;A,Q,mB,G;A,Q,mB,G;A,Q,iB,G;A,Q,c,G;A,Q,mB,G;A,Q,c,G;A,Q,oB,G;A,Q,+B,G;A,Q,2B,G;A,Q,gB,G;A,Q,2B,G;A,Q,c,G;A,Q,kB,G;A,Q,qB,G;A,Q,a,G;A,Q,2B,G;A,Q,iB,G;A,Q,wB,G;A,Q,oB,G;A,Q,oB,G;A,Q,e,G;A,Q,c,G;A,Q,mB,G;A,Q,e,G;A,Q,qB,G;A,Q,oB,G;A,Q,8B,G;A,Q,gB,G;A,Q,qB,G;A,Q,e,G;A,Q,iB,G;A,Q,iB,G;A,Q,gB,G;A,Q,qB,G;A,Q,qB,G;A,Q,qB,G;A,Q,iB,G;A,Q,Y,G;A,Q,uB,G;A,Q,iB,G;A,Q,iB,G;A,Q,Y,G;A,Q,a,G;A,Q,Q,G;A,Q,wB,G;A,Q,kB,G;A,Q,iB,G;A,Q,e,G;A,Q,e,G;A,Q,gB,G;A,Q,iB,G;A,Q,4B,G;A,Q,8B,G;A,Q,iB,G;A,Q,a,G;A,Q,iB,G;A,Q,oB,G;A,Q,a,G;A,Q,kB,G;A,Q,e,G;A,Q,0B,G;A,Q,iB,G;A,Q,iB,G;A,Q,gB,G;A,Q,gB,G;A,Q,oB,G;A,Q,gB,G;A,Q,gB,G;A,Q,c,G;A,Q,iB,G;A,Q,qB,G;A,Q,W,G;A,Q,gB,G;A,Q,oB,G;A,Q,e,G;A,Q,0B,G;A,Q,4B,G;A,Q,Y,G;A,Q,sB,G;A,Q,iB,G;A,Q,W,G;A,Q,qB,G;A,Q,kB,G;A,Q,mB,G;A,Q,uB,G;A,Q,qB,G;A,Q,oB,G;A,Q,U,G;A,Q,oB,G;A,Q,O,G;A,Q,gB,G;A,Q,e,G;A,Q,iB,G;AE7CA,IAAA9C,gBAAAzD,QAAA;AAEA,IAAA6E,sBAAA7E,QAAA;AAUO,SAAS4G,kBACdZ,IAA+B,EAC/Ba,IAAqC;IAErC,IAAI,CAACb,MAAM,OAAO;IAElB,IAAIA,KAAKc,IAAI,KAAK,mBAAmB,OAAO;IAE5C,OAAOD,QAAQ,QAAQ,AAAA,CAAA,GAAAE,cAAAA,OAAY,AAAZA,EAAaf,MAAMa;AAC5C;AACO,SAASG,uBACdhB,IAA+B,EAC/Ba,IAA0C;IAE1C,IAAI,CAACb,MAAM,OAAO;IAElB,IAAIA,KAAKc,IAAI,KAAK,wBAAw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,Q,e,G;A,Q,e,G;A,Q,W,G;A,Q,kB,G;A,Q,oB,G;A,Q,a,G;A,Q,qB,G;A,Q,iB,G;A,Q,iB,G;A,Q,c,G;A,Q,Y,G;A,Q,2B,G;A,Q,wB,G;A,Q,e,G;A,Q,gB,G;A,Q,a,G;A,Q,oB,G;A,Q,iB,G;A,Q,gB,G;A,Q,e,G;A,Q,iB,G;A,Q,S,G;A,Q,S,G;A,Q,gB,G;A,Q,Y,G;A,Q,gB,G;A,Q,c,G;A,Q,mB,G;A,Q,e,G;A,Q,iB,G;A,Q,e,G;A,Q,mB,G;A,Q,c,G;A,Q,gB,G;A,Q,c,G;A,Q,gB,G;A,Q,c,G;A,Q,oB,G;A,Q,oB,G;A,Q,wB,G;A,Q,sB,G;A,Q,sB,G;A,Q,wB,G;A,Q,e,G;A,Q,mB,G;A,Q,I,G;A,Q,c,G;A,Q,c,G;A,Q,Y,G;A,Q,mB,G;A,Q,kB,G;A,Q,sB,G;A,Q,iB,G;A,Q,qB,G;A,Q,U,G;A,Q,W,G;A,Q,M,G;A,Q,e,G;A,Q,iB,G;A,Q,sB,G;A,Q,gB,G;A,Q,wB,G;A,Q,e,G;A,Q,iB,G;A,Q,iB,G;A,Q,oB,G;A,Q,gB,G;A,Q,uB,G;A,Q,oB,G;A,Q,0B,G;A,Q,Y,G,Q,Y,G;A,Q,iB,G,Q,iB,G;A,Q,kB,G,Q,kB,G;A,Q,U,G,Q,U,G;A,Q,kB,G,Q,kB,G;A,Q,sB,G,Q,sB,G;A,Q,W,G,Q,W,G;A,Q,a,G,Q,a,G;A,Q,mB,G,Q,mB,G;A,Q,iB,G,Q,iB,G;A,Q,iB,G,Q,iB,G;A,Q,kB,G,Q,kB,G;A,Q,kB,G,Q,kB,G;A,Q,c,G,Q,c,G;A,Q,O,G,Q,O,G;A,Q,gB,G;A,Q,iB,G;A,Q,gB,G;A,Q,Y,G;A,Q,mB,G;A,Q,gB,G;A,Q,a,G;A,Q,I,G;A,Q,W,G;A,Q,yB,G;A,Q,sB,G;A,Q,a,G;A,Q,2B,G;A,Q,oB,G;A,Q,c,G;A,Q,gB,G;A,Q,Y,G;A,Q,a,G;A,Q,c,G;A,Q,oB,G;A,Q,sB,G;A,Q,iB,G;A,Q,sB,G;A,Q,kB,G;A,Q,wB,G;A,Q,U,G;A,Q,sB,G;A,Q,yB,G;A,Q,wB,G;A,Q,uB,G;A,Q,oB,G;A,Q,6B,G;A,Q,uB,G;A,Q,W,G;A,Q,W,G;A,Q,O,G;A,Q,uB,G;A,Q,gB,G;A,Q,a,G;A,Q,Y,G;A,Q,W,G;A,Q,Y,G;A,Q,e,G;A,Q,kB,G;A,Q,a,G;A,Q,c,G;A,Q,W,G;A,Q,a,G;A,Q,2B,G;A,Q,oB,G;A,Q,K,G;A,Q,U,G;A,Q,e,G;A,Q,oB,G;A,Q,wB,G;A,Q,e,G;A,Q,e,G;A,Q,c,G;A,Q,kB,G;A,Q,c,G;A,Q,c,G;A,Q,Y,G;A,Q,Y,G,Q,Y,G;A,Q,W,G,Q,W,G;A,Q,c,G,Q,c,G;A,Q,e,G,Q,e,G;A,Q,gB,G,Q,gB,G;A,Q,0B,G,Q,0B,G;A,Q,iB,G,Q,iB,G;A,Q,+B,G,Q,+B,G;A,Q,iB,G,Q,iB,G;A,Q,iB,G,Q,iB,G;A,Q,e,G,Q,e,G;A,Q,iB,G,Q,iB,G;A,Q,Y,G,Q,Y,G;A,Q,kB,G,Q,kB,G;A,Q,6B,G,Q,6B,G;A,Q,yB,G,Q,yB,G;A,Q,c,G,Q,c,G;A,Q,yB,G,Q,yB,G;A,Q,Y,G,Q,Y,G;A,Q,gB,G,Q,gB,G;A,Q,mB,G,Q,mB,G;A,Q,W,G,Q,W,G;A,Q,yB,G,Q,yB,G;A,Q,e,G,Q,e,G;A,Q,sB,G,Q,sB,G;A,Q,kB,G,Q,kB,G;A,Q,kB,G,Q,kB,G;A,Q,a,G,Q,a,G;A,Q,Y,G,Q,Y,G;A,Q,iB,G,Q,iB,G;A,Q,a,G,Q,a,G;A,Q,mB,G,Q,mB,G;A,Q,kB,G,Q,kB,G;A,Q,4B,G,Q,4B,G;A,Q,c,G,Q,c,G;A,Q,mB,G,Q,mB,G;A,Q,a,G,Q,a,G;A,Q,e,G,Q,e,G;A,Q,e,G,Q,e,G;A,Q,c,G,Q,c,G;A,Q,mB,G,Q,mB,G;A,Q,mB,G,Q,mB,G;A,Q,mB,G,Q,mB,G;A,Q,e,G,Q,e,G;A,Q,U,G,Q,U,G;A,Q,qB,G,Q,qB,G;A,Q,e,G,Q,e,G;A,Q,e,G,Q,e,G;A,Q,U,G,Q,U,G;A,Q,W,G,Q,W,G;A,Q,sB,G,Q,sB,G;A,Q,gB,G,Q,gB,G;A,Q,e,G,Q,e,G;A,Q,a,G,Q,a,G;A,Q,c,G,Q,c,G;A,Q,e,G,Q,e,G;A,Q,0B,G,Q,0B,G;A,Q,4B,G,Q,4B,G;A,Q,e,G,Q,e,G;A,Q,W,G,Q,W,G;A,Q,e,G,Q,e,G;A,Q,kB,G,Q,kB,G;A,Q,W,G,Q,W,G;A,Q,gB,G,Q,gB,G;A,Q,a,G,Q,a,G;A,Q,e,G;A,Q,mB,G;A,Q,S,G;A,Q,c,G;A,Q,kB,G;A,Q,a,G;A,Q,wB,G;A,Q,0B,G;A,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,GAAQ,EACRG,KAAsC;IAEtC,IAAI,CAACA,CAAAA,SAAK,QAALA,MAAOJ,QAAQ,AAARA,GAAU;IACtB,IAAII,MAAMnT,QAAQ,IAAIgT,OAAO,MAAM;IAEnCG,MAAMJ,QAAQ,CAACntB,MAAMxF,KAAK4yB;AAC5B;AAEO,SAASK,cACdztB,IAA+B,EAC/BxF,GAAW,EACX4yB,GAA+B;IAE/B,IAAIA,OAAO,MAAM;IACjB,MAAMD,WAAWO,OAAAA,uBAAuB,CAACN,IAAItsB,IAAI,CAAC;IAClD,IAAI,CAACqsB,UAAU;IACfA,SAASntB,MAAMxF,KAAK4yB;AACtB;;;A;A,O,c,C,S,c;I,O;A;A,O,c,C,S,c;I,Y;I,K;Q,O,O,U;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,mB,kB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,2B;I,Y;I,K;Q,O,O,uB;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,c,Y;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,c,kB;I;A;A,O,c,C,S,8B;I,Y;I,K;Q,O,c,0B;I;A;A,Q,K,G,K;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;AE3CA,IAAAO,oBAAA3zB,QAAA;AACAA,QAAAA;AACAA,QAAAA;AACAA,QAAAA;AACAA,QAAAA;AACAA,QAAAA;AACAA,QAAAA;AACA,IAAA4zB,SAAA5zB,QAAA;AASA,IAAA6zB,gBAAA7zB,QAAA;AAKA,IAAA8zB,qBAAA9zB,QAAA;AAGEK,OAAOC,IAAI,CAACyzB,mBAAAA,kBAAkB,EAC9BxzB,OAAO,CAACyzB,CAAAA;IACRC,OAAAA,kBAAkB,CAACD,gBAAgB,GACjCC,OAAAA,kBAAkB,CAACF,mBAAAA,kBAAkB,CAACC,gBAAgB,CAAC;AAC3D;AAGAE,kBAAiBC,OAAAA,YAAY;AAC7BD,kBAAiBE,OAAAA,UAAU;AAC3BF,kBAAiBD,OAAAA,kBAAkB;AACnCC,kBAAiBZ,OAAAA,WAAW;AAC5B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E,SAAS9E,QAAS;YAC3B,IAAI4E,aAAaE,OAAO,OAAO;QACjC;IACF;IAEA,OAAO;AACT;;;A;A,O,c,C,S,c;I,O;A;A,Q,O,G;AErCA,IAAAj6B,SAAAJ,QAAA;AAKe,SAASk6B,kBACtBI,eAAuB,EACvBF,UAAkB;IAElB,IAAIE,oBAAoBF,YAAY,OAAO;IAE3C,MAAM7E,UACJjB,OAAAA,kBAAkB,CAACgG,gBAAgB;IACrC,IAAI/E,SACF,KAAK,MAAM8E,SAAS9E,QAAS;QAC3B,IAAI6E,eAAeC,OAAO,OAAO;IACnC;IAGF,OAAO;AACT;;;A;A,O,c,C,S,c;I,O;A;A,Q,O,G;AEpBA,IAAA3F,6BAAA10B,QAAA;AAUe,SAAS22B,kBACtBlwB,IAAY,EACZ8zB,WAAoB,IAAI;IAExB,IAAI,OAAO9zB,SAAS,UAAU,OAAO;IAErC,IAAI8zB,UAAU;QAEZ,IAAI,AAAA,CAAA,GAAAvD,2BAAAA,SAAS,AAATA,EAAUvwB,SAAS,AAAA,CAAA,GAAA+zB,2BAAAA,oBAAoB,AAApBA,EAAqB/zB,MAAM,OAChD,OAAO;IAEX;IAEA,OAAO,AAAA,CAAA,GAAAg0B,2BAAAA,gBAAgB,AAAhBA,EAAiBh0B;AAC1B;;;A;A,O,c,C,S,c;I,O;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,Y,gB;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,Y,gB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,Y,iB;I;A;A,O,c,C,S,a;I,Y;I,K;Q,O,S,S;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,S,c;I;A;A,O,c,C,S,gC;I,Y;I,K;Q,O,S,4B;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,S,wB;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,S,oB;I;A;AExBA,IAAAi0B,cAAA16B,QAAA;AAKA,IAAA26B,WAAA36B,QAAA;;;A;A,O,c,C,S,c;I,O;A;A,Q,gB,G;A,Q,gB,G;A,Q,iB,G;AEMA,IAAI46B,+BAA+B;AAEnC,IAAIC,0BAA0B;AAE9B,MAAMC,0BAA0B,IAAIC,OAClC,MAAMH,+BAA+B;AAEvC,MAAMI,qBAAqB,IAAID,OAC7B,MAAMH,+BAA+B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,Q,kC,G;A,Q,2B,G;A,Q,oB,G;A,Q,oB,G;A,Q,iB,G;A,Q,W,G;A,Q,2B,G;A,Q,e,G;A,Q,sB,G;A,Q,qB,G;A,Q,qB,G;A,Q,iB,G;A,Q,wB,G;A,Q,0B,G;A,Q,mB,G;A,Q,yB,G;A,Q,iB,G;A,Q,2B,G;A,Q,uB,G;A,Q,uB,G;A,Q,oB,G;A,Q,iB,G;A,Q,kB,G;A,Q,iC,G;A,Q,8B,G;A,Q,qB,G;A,Q,sB,G;A,Q,mB,G;A,Q,0B,G;A,Q,uB,G;A,Q,sB,G;A,Q,qB,G;A,Q,uB,G;A,Q,e,G;A,Q,e,G;A,Q,sB,G;A,Q,kB,G;A,Q,sB,G;A,Q,oB,G;A,Q,yB,G;A,Q,c,G;A,Q,qB,G;A,Q,uB,G;A,Q,qB,G;A,Q,yB,G;A,Q,gB,G;A,Q,oB,G;A,Q,sB,G;A,Q,oB,G;A,Q,sB,G;A,Q,oB,G;A,Q,0B,G;A,Q,0B,G;A,Q,uB,G;A,Q,8B,G;A,Q,4B,G;A,Q,4B,G;A,Q,8B,G;A,Q,qB,G;A,Q,gB,G;A,Q,yB,G;A,Q,uB,G;A,Q,U,G;A,Q,U,G;A,Q,wB,G;A,Q,qB,G;A,Q,mB,G;A,Q,c,G;A,Q,S,G;A,Q,oB,G;A,Q,oB,G;A,Q,kB,G;A,Q,mB,G;A,Q,c,G;A,Q,yB,G;A,Q,wB,G;A,Q,oB,G;A,Q,4B,G;A,Q,uB,G;A,Q,2B,G;A,Q,gB,G;A,Q,iB,G;A,Q,e,G;A,Q,Y,G;A,Q,qB,G;A,Q,uB,G;A,Q,4B,G;A,Q,sB,G;A,Q,8B,G;A,Q,+B,G;A,Q,qB,G;A,Q,uB,G;A,Q,uB,G;A,Q,0B,G;A,Q,sB,G;A,Q,6B,G;A,Q,0B,G;A,Q,gC,G;A,Q,S,G;A,Q,kB,G;A,Q,uB,G;A,Q,wB,G;A,Q,gB,G;A,Q,wB,G;A,Q,4B,G;A,Q,iB,G;A,Q,mB,G;A,Q,yB,G;A,Q,uB,G;A,Q,uB,G;A,Q,wB,G;A,Q,wB,G;A,Q,oB,G;A,Q,a,G;A,Q,U,G;A,Q,sB,G;A,Q,a,G;A,Q,uB,G;A,Q,U,G;A,Q,sB,G;A,Q,kB,G;A,Q,Y,G;A,Q,mB,G;A,Q,yB,G;A,Q,uB,G;A,Q,sB,G;A,Q,qB,G;A,Q,mB,G;A,Q,U,G;A,Q,iB,G;A,Q,+B,G;A,Q,4B,G;A,Q,mB,G;A,Q,iC,G;A,Q,0B,G;A,Q,oB,G;A,Q,sB,G;A,Q,kB,G;A,Q,kB,G;A,Q,mB,G;A,Q,oB,G;A,Q,0B,G;A,Q,4B,G;A,Q,uB,G;A,Q,4B,G;A,Q,wB,G;A,Q,8B,G;A,Q,gB,G;A,Q,4B,G;A,Q,+B,G;A,Q,8B,G;A,Q,6B,G;A,Q,a,G;A,Q,iB,G;A,Q,0B,G;A,Q,mC,G;A,Q,6B,G;A,Q,iB,G;A,Q,a,G;A,Q,iB,G;A,Q,a,G;A,Q,c,G;A,Q,a,G;A,Q,6B,G;A,Q,sB,G;A,Q,mB,G;A,Q,kB,G;A,Q,iB,G;A,Q,kB,G;A,Q,qB,G;A,Q,c,G;A,Q,wB,G;A,Q,mB,G;A,Q,oB,G;A,Q,kB,G;A,Q,e,G;A,Q,iB,G;A,Q,mB,G;A,Q,iC,G;A,Q,0B,G;A,Q,W,G;A,Q,gB,G;A,Q,qB,G;A,Q,0B,G;A,Q,kB,G;A,Q,iB,G;A,Q,oB,G;A,Q,gB,G;A,Q,qB,G;A,Q,sB,G;A,Q,gC,G;A,Q,uB,G;A,Q,qC,G;A,Q,uB,G;A,Q,uB,G;A,Q,qB,G;A,Q,kB,G;A,Q,uB,G;A,Q,kB,G;A,Q,wB,G;A,Q,mC,G;A,Q,+B,G;A,Q,oB,G;A,Q,+B,G;A,Q,kB,G;A,Q,sB,G;A,Q,yB,G;A,Q,iB,G;A,Q,+B,G;A,Q,qB,G;A,Q,4B,G;A,Q,wB,G;A,Q,wB,G;A,Q,mB,G;A,Q,kB,G;A,Q,uB,G;A,Q,mB,G;A,Q,yB,G;A,Q,wB,G;A,Q,kC,G;A,Q,oB,G;A,Q,yB,G;A,Q,mB,G;A,Q,qB,G;A,Q,qB,G;A,Q,oB,G;A,Q,yB,G;A,Q,yB,G;A,Q,yB,G;A,Q,qB,G;A,Q,gB,G;A,Q,2B,G;A,Q,qB,G;A,Q,qB,G;A,Q,gB,G;A,Q,iB,G;A,Q,Y,G;A,Q,4B,G;A,Q,sB,G;A,Q,qB,G;A,Q,mB,G;A,Q,mB,G;A,Q,oB,G;A,Q,qB,G;A,Q,gC,G;A,Q,kC,G;A,Q,qB,G;A,Q,iB,G;A,Q,qB,G;A,Q,wB,G;A,Q,iB,G;A,Q,sB,G;A,Q,mB,G;A,Q,8B,G;A,Q,qB,G;A,Q,qB,G;A,Q,oB,G;A,Q,oB,G;A,Q,wB,G;A,Q,oB,G;A,Q,oB,G;A,Q,kB,G;A,Q,qB,G;A,Q,yB,G;A,Q,e,G;A,Q,oB,G;A,Q,wB,G;A,Q,mB,G;A,Q,8B,G;A,Q,gC,G;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;I,O;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,2B;I,Y;I,K;Q,O,O,uB;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,gC;I,Y;I,K;Q,O,O,4B;I;A;A,O,c,C,S,yB;I,Y;I,K;Q,O,O,qB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,yB;I,Y;I,K;Q,O,O,qB;I;A;A,O,c,C,S,a;I,Y;I,K;Q,O,O,S;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,yB;I,Y;I,K;Q,O,O,qB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,+B;I,Y;I,K;Q,O,O,2B;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,O,wB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,a;I,Y;I,K;Q,O,O,S;I;A;A,O,c,C,S,a;I,Y;I,K;Q,O,O,S;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,O,wB;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,O,wB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,Q;I,Y;I,K;Q,O,O,I;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,yB;I,Y;I,K;Q,O,O,qB;I;A;A,O,c,C,S,c;I,Y;I,K;Q,O,O,U;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,U;I,Y;I,K;Q,O,O,M;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,O,wB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,2B;I,Y;I,K;Q,O,O,uB;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,8B;I,Y;I,K;Q,O,O,0B;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,c;I,Y;I,K;Q,O,O,U;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,W;I,Y;I,K;Q,O,O,O;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,Q;I,Y;I,K;Q,O,O,I;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,6B;I,Y;I,K;Q,O,O,yB;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,+B;I,Y;I,K;Q,O,O,2B;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,O,wB;I;A;A,O,c,C,S,c;I,Y;I,K;Q,O,O,U;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,6B;I,Y;I,K;Q,O,O,yB;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,O,wB;I;A;A,O,c,C,S,2B;I,Y;I,K;Q,O,O,uB;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,iC;I,Y;I,K;Q,O,O,6B;I;A;A,O,c,C,S,2B;I,Y;I,K;Q,O,O,uB;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,W;I,Y;I,K;Q,O,O,O;I;A;A,O,c,C,S,2B;I,Y;I,K;Q,O,O,uB;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,+B;I,Y;I,K;Q,O,O,2B;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,S;I,Y;I,K;Q,O,O,K;I;A;A,O,c,C,S,c;I,Y;I,K;Q,O,O,U;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,8B;I,Y;I,K;Q,O,O,0B;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,mC;I,Y;I,K;Q,O,O,+B;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,iC;I,Y;I,K;Q,O,O,6B;I;A;A,O,c,C,S,6B;I,Y;I,K;Q,O,O,yB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,6B;I,Y;I,K;Q,O,O,yB;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,6B;I,Y;I,K;Q,O,O,yB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,qB;I,Y;I,K;Q,O,O,iB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,gC;I,Y;I,K;Q,O,O,4B;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,c;I,Y;I,K;Q,O,O,U;I;A;A,O,c,C,S,yB;I,Y;I,K;Q,O,O,qB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,c;I,Y;I,K;Q,O,O,U;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,0B;I,Y;I,K;Q,O,O,sB;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,8B;I,Y;I,K;Q,O,O,0B;I;A;A,O,c,C,S,gC;I,Y;I,K;Q,O,O,4B;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,e;I,Y;I,K;Q,O,O,W;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,O,wB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,gB;I,Y;I,K;Q,O,O,Y;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,a;I,Y;I,K;Q,O,O,S;I;A;A,O,c,C,S,kB;I,Y;I,K;Q,O,O,c;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,iB;I,Y;I,K;Q,O,O,a;I;A;A,O,c,C,S,4B;I,Y;I,K;Q,O,O,wB;I;A;A,O,c,C,S,8B;I,Y;I,K;Q,O,O,0B;I;A;A,O,c,C,S,wB;I,Y;I,K;Q,O,O,oB;I;A;A,O,c,C,S,mB;I,Y;I,K;Q,O,O,e;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,oB;I,Y;I,K;Q,O,O,gB;I;A;A,O,c,C,S,yB;I,Y;I,K;Q,O,O,qB;I;A;A,O,c,C,S,uB;I,Y;I,K;Q,O,O,mB;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c,C,S,Y;I,Y;I,K;Q,O,O,Q;I;A;A,O,c,C,S,sB;I,Y;I,K;Q,O,O,kB;I;A;A,O,c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B,AAAvBA,EAAwBp/B,OAAO4a;IAC/B,CAAA,GAAAskB,wBAAAA,OAAsB,AAAtBA,EAAuBl/B,OAAO4a;IAC9B,CAAA,GAAAmkB,sBAAAA,OAAoB,AAApBA,EAAqB/+B,OAAO4a;IAE5B,OAAO5a;AACT;;;A;A,O,c,C,S,c;I,O;A;A,Q,O,G;AEjBA,IAAA8+B,WAAA36C,QAAA;AAGe,SAASi7C,wBACtBp/B,KAAa,EACb4a,MAAc;IAEd,CAAA,GAAAokB,SAAAA,OAAO,AAAPA,EAAQ,oBAAoBh/B,OAAO4a;AACrC;;;A;A,O,c,C,S,c;I,O;A;A,Q,O,G;AERA,IAAAr2B,SAAAJ,QAAA;AAMe,SAASk7C,eAAiCl1C,IAAO;IAC9D85B,OAAAA,YAAY,CAACv/B,OAAO,CAACC,CAAAA;QACnBwF,IAAI,CAACxF,IAAI,GAAG;IACd;IAEA,OAAOwF;AACT;;;A;A,O,c,C,S,c;I,O;A;A,Q,W,G,Q,uB,G,Q,e,G,Q,gB,G,Q,Y,G,Q,mB,G,Q,kB,G,Q,gB,G,Q,oB,G,Q,e,G,Q,kB,G,Q,c,G,Q,a,G,Q,c,G,Q,a,G,Q,a,G,Q,iB,G,Q,kB,G,Q,qB,G,Q,uB,G,Q,mB,G,Q,Y,G,Q,U,G,Q,U,G,Q,a,G,Q,S,G,Q,+B,G,Q,e,G,Q,c,G,Q,oB,G,Q,S,G,Q,mB,G,Q,U,G,Q,c,G,Q,mB,G,Q,qB,G,Q,wB,G,Q,gB,G,Q,uB,G,Q,uB,G,Q,gB,G,Q,c,G,Q,iB,G,Q,iB,G,Q,yB,G,Q,W,G,Q,W,G,Q,iB,G,Q,Y,G,Q,c,G,K;AERA,IAAA5F,SAAAJ,QAAA;AAEO,MAAMm7C,qBAAkBt6C,QAAAs6C,kBAAA,GAAGlnB,OAAAA,kBAAkB,CAAC,eAAe;AAC7D,MAAMmnB,mBAAgBv6C,QAAAu6C,gBAAA,GAAGnnB,OAAAA,kBAAkB,CAAC,aAAa;AACzD,MAAMonB,eAAYx6C,QAAAw6C,YAAA,GAAGpnB,OAAAA,kBAAkB,CAAC,SAAS;AACjD,MAAMqnB,iBAAcz6C,QAAAy6C,cAAA,GAAGrnB,OAAAA,kBAAkB,CAAC,WAAW;AACrD,MAAMsnB,oBAAiB16C,QAAA06C,iBAAA,GAAGtnB,OAAAA,kBAAkB,CAAC,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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-1dd629a3568aa71f.js","src/js/app.js","node_modules/@babel/types/lib/index.js","node_modules/@babel/types/src/index.ts","node_modules/@babel/types/lib/validators/react/isReactComponent.js","node_modules/@babel/types/src/validators/react/isReactComponent.ts","node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","node_modules/@babel/types/src/validators/buildMatchMemberExpression.ts","node_modules/@babel/types/lib/validators/matchesPattern.js","node_modules/@babel/types/src/validators/matchesPattern.ts","node_modules/@babel/types/lib/validators/generated/index.js","node_modules/@babel/types/src/validators/generated/index.ts","node_modules/@babel/types/lib/utils/shallowEqual.js","node_modules/@babel/types/src/utils/shallowEqual.ts","node_modules/@babel/types/lib/utils/deprecationWarning.js","node_modules/@babel/types/src/utils/deprecationWarning.ts","node_modules/@babel/types/lib/validators/react/isCompatTag.js","node_modules/@babel/types/src/validators/react/isCompatTag.ts","node_modules/@babel/types/lib/builders/react/buildChildren.js","node_modules/@babel/types/src/builders/react/buildChildren.ts","node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js","node_modules/@babel/types/src/utils/react/cleanJSXElementLiteralChild.ts","node_modules/@babel/types/lib/builders/generated/index.js","node_modules/@babel/types/src/builders/generated/index.ts","node_modules/@babel/types/lib/builders/validateNode.js","node_modules/@babel/types/src/builders/validateNode.ts","node_modules/@babel/types/lib/validators/validate.js","node_modules/@babel/types/src/validators/validate.ts","node_modules/@babel/types/lib/definitions/index.js","node_modules/@babel/types/src/definitions/index.ts","node_modules/to-fast-properties/index.js","node_modules/@babel/types/lib/definitions/core.js","node_modules/@babel/types/src/definitions/core.ts","node_modules/@babel/types/lib/validators/is.js","node_modules/@babel/types/src/validators/is.ts","node_modules/@babel/types/lib/validators/isType.js","node_modules/@babel/types/src/validators/isType.ts","node_modules/@babel/types/lib/validators/isPlaceholderType.js","node_modules/@babel/types/src/validators/isPlaceholderType.ts","node_modules/@babel/types/lib/validators/isValidIdentifier.js","node_modules/@babel/types/src/validators/isValidIdentifier.ts","node_modules/@babel/helper-validator-identifier/lib/index.js","node_modules/@babel/helper-validator-identifier/src/index.ts","node_modules/@babel/helper-validator-identifier/lib/identifier.js","node_modules/@babel/helper-validator-identifier/src/identifier.ts","node_modules/@babel/helper-validator-identifier/lib/keyword.js","node_modules/@babel/helper-validator-identifier/src/keyword.ts","node_modules/@babel/helper-string-parser/lib/index.js","node_modules/@babel/helper-string-parser/src/index.ts","node_modules/@babel/types/lib/constants/index.js","node_modules/@babel/types/src/constants/index.ts","node_modules/@babel/types/lib/definitions/utils.js","node_modules/@babel/types/src/definitions/utils.ts","node_modules/@babel/types/lib/definitions/flow.js","node_modules/@babel/types/src/definitions/flow.ts","node_modules/@babel/types/lib/definitions/jsx.js","node_modules/@babel/types/src/definitions/jsx.ts","node_modules/@babel/types/lib/definitions/misc.js","node_modules/@babel/types/src/definitions/misc.ts","node_modules/@babel/types/lib/definitions/placeholders.js","node_modules/@babel/types/src/definitions/placeholders.ts","node_modules/@babel/types/lib/definitions/experimental.js","node_modules/@babel/types/src/definitions/experimental.ts","node_modules/@babel/types/lib/definitions/typescript.js","node_modules/@babel/types/src/definitions/typescript.ts","node_modules/@babel/types/lib/definitions/deprecated-aliases.js","node_modules/@babel/types/src/definitions/deprecated-aliases.ts","node_modules/@babel/types/lib/asserts/assertNode.js","node_modules/@babel/types/src/asserts/assertNode.ts","node_modules/@babel/types/lib/validators/isNode.js","node_modules/@babel/types/src/validators/isNode.ts","node_modules/@babel/types/lib/asserts/generated/index.js","node_modules/@babel/types/src/asserts/generated/index.ts","node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js","node_modules/@babel/types/src/builders/flow/createTypeAnnotationBasedOnTypeof.ts","node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js","node_modules/@babel/types/src/builders/flow/createFlowUnionType.ts","node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","node_modules/@babel/types/src/modifications/flow/removeTypeDuplicates.ts","node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js","node_modules/@babel/types/src/builders/typescript/createTSUnionType.ts","node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","node_modules/@babel/types/src/modifications/typescript/removeTypeDuplicates.ts","node_modules/@babel/types/lib/builders/generated/uppercase.js","node_modules/@babel/types/src/builders/generated/uppercase.js","node_modules/@babel/types/lib/builders/productions.js","node_modules/@babel/types/src/builders/productions.ts","node_modules/@babel/types/lib/clone/cloneNode.js","node_modules/@babel/types/src/clone/cloneNode.ts","node_modules/@babel/types/lib/clone/clone.js","node_modules/@babel/types/src/clone/clone.ts","node_modules/@babel/types/lib/clone/cloneDeep.js","node_modules/@babel/types/src/clone/cloneDeep.ts","node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js","node_modules/@babel/types/src/clone/cloneDeepWithoutLoc.ts","node_modules/@babel/types/lib/clone/cloneWithoutLoc.js","node_modules/@babel/types/src/clone/cloneWithoutLoc.ts","node_modules/@babel/types/lib/comments/addComment.js","node_modules/@babel/types/src/comments/addComment.ts","node_modules/@babel/types/lib/comments/addComments.js","node_modules/@babel/types/src/comments/addComments.ts","node_modules/@babel/types/lib/comments/inheritInnerComments.js","node_modules/@babel/types/src/comments/inheritInnerComments.ts","node_modules/@babel/types/lib/utils/inherit.js","node_modules/@babel/types/src/utils/inherit.ts","node_modules/@babel/types/lib/comments/inheritLeadingComments.js","node_modules/@babel/types/src/comments/inheritLeadingComments.ts","node_modules/@babel/types/lib/comments/inheritsComments.js","node_modules/@babel/types/src/comments/inheritsComments.ts","node_modules/@babel/types/lib/comments/inheritTrailingComments.js","node_modules/@babel/types/src/comments/inheritTrailingComments.ts","node_modules/@babel/types/lib/comments/removeComments.js","node_modules/@babel/types/src/comments/removeComments.ts","node_modules/@babel/types/lib/constants/generated/index.js","node_modules/@babel/types/src/constants/generated/index.ts","node_modules/@babel/types/lib/converters/ensureBlock.js","node_modules/@babel/types/src/converters/ensureBlock.ts","node_modules/@babel/types/lib/converters/toBlock.js","node_modules/@babel/types/src/converters/toBlock.ts","node_modules/@babel/types/lib/converters/toBindingIdentifierName.js","node_modules/@babel/types/src/converters/toBindingIdentifierName.ts","node_modules/@babel/types/lib/converters/toIdentifier.js","node_modules/@babel/types/src/converters/toIdentifier.ts","node_modules/@babel/types/lib/converters/toComputedKey.js","node_modules/@babel/types/src/converters/toComputedKey.ts","node_modules/@babel/types/lib/converters/toExpression.js","node_modules/@babel/types/src/converters/toExpression.ts","node_modules/@babel/types/lib/converters/toKeyAlias.js","node_modules/@babel/types/src/converters/toKeyAlias.ts","node_modules/@babel/types/lib/modifications/removePropertiesDeep.js","node_modules/@babel/types/src/modifications/removePropertiesDeep.ts","node_modules/@babel/types/lib/traverse/traverseFast.js","node_modules/@babel/types/src/traverse/traverseFast.ts","node_modules/@babel/types/lib/modifications/removeProperties.js","node_modules/@babel/types/src/modifications/removeProperties.ts","node_modules/@babel/types/lib/converters/toStatement.js","node_modules/@babel/types/src/converters/toStatement.ts","node_modules/@babel/types/lib/converters/valueToNode.js","node_modules/@babel/types/src/converters/valueToNode.ts","node_modules/@babel/types/lib/modifications/appendToMemberExpression.js","node_modules/@babel/types/src/modifications/appendToMemberExpression.ts","node_modules/@babel/types/lib/modifications/inherits.js","node_modules/@babel/types/src/modifications/inherits.ts","node_modules/@babel/types/lib/modifications/prependToMemberExpression.js","node_modules/@babel/types/src/modifications/prependToMemberExpression.ts","node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js","node_modules/@babel/types/src/retrievers/getBindingIdentifiers.ts","node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js","node_modules/@babel/types/src/retrievers/getOuterBindingIdentifiers.ts","node_modules/@babel/types/lib/traverse/traverse.js","node_modules/@babel/types/src/traverse/traverse.ts","node_modules/@babel/types/lib/validators/isBinding.js","node_modules/@babel/types/src/validators/isBinding.ts","node_modules/@babel/types/lib/validators/isBlockScoped.js","node_modules/@babel/types/src/validators/isBlockScoped.ts","node_modules/@babel/types/lib/validators/isLet.js","node_modules/@babel/types/src/validators/isLet.ts","node_modules/@babel/types/lib/validators/isImmutable.js","node_modules/@babel/types/src/validators/isImmutable.ts","node_modules/@babel/types/lib/validators/isNodesEquivalent.js","node_modules/@babel/types/src/validators/isNodesEquivalent.ts","node_modules/@babel/types/lib/validators/isReferenced.js","node_modules/@babel/types/src/validators/isReferenced.ts","node_modules/@babel/types/lib/validators/isScope.js","node_modules/@babel/types/src/validators/isScope.ts","node_modules/@babel/types/lib/validators/isSpecifierDefault.js","node_modules/@babel/types/src/validators/isSpecifierDefault.ts","node_modules/@babel/types/lib/validators/isValidES3Identifier.js","node_modules/@babel/types/src/validators/isValidES3Identifier.ts","node_modules/@babel/types/lib/validators/isVar.js","node_modules/@babel/types/src/validators/isVar.ts","node_modules/@babel/types/lib/converters/toSequenceExpression.js","node_modules/@babel/types/src/converters/toSequenceExpression.ts","node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js","node_modules/@babel/types/src/converters/gatherSequenceExpressions.ts","src/js/quill.js","node_modules/quill/quill.js","node_modules/src/quill.ts","node_modules/quill/core.js","node_modules/src/core.ts","node_modules/quill/core/quill.js","node_modules/src/core/quill.ts","node_modules/lodash-es/lodash.js","node_modules/lodash-es/cloneDeep.js","node_modules/lodash-es/_baseClone.js","node_modules/lodash-es/_Stack.js","node_modules/lodash-es/_ListCache.js","node_modules/lodash-es/_listCacheClear.js","node_modules/lodash-es/_listCacheDelete.js","node_modules/lodash-es/_assocIndexOf.js","node_modules/lodash-es/eq.js","node_modules/lodash-es/_listCacheGet.js","node_modules/lodash-es/_listCacheHas.js","node_modules/lodash-es/_listCacheSet.js","node_modules/lodash-es/_stackClear.js","node_modules/lodash-es/_stackDelete.js","node_modules/lodash-es/_stackGet.js","node_modules/lodash-es/_stackHas.js","node_modules/lodash-es/_stackSet.js","node_modules/lodash-es/_Map.js","node_modules/lodash-es/_getNative.js","node_modules/lodash-es/_baseIsNative.js","node_modules/lodash-es/isFunction.js","node_modules/lodash-es/_baseGetTag.js","node_modules/lodash-es/_Symbol.js","node_modules/lodash-es/_root.js","node_modules/lodash-es/_freeGlobal.js","node_modules/lodash-es/_getRawTag.js","node_modules/lodash-es/_objectToString.js","node_modules/lodash-es/isObject.js","node_modules/lodash-es/_isMasked.js","node_modules/lodash-es/_coreJsData.js","node_modules/lodash-es/_toSource.js","node_modules/lodash-es/_getValue.js","node_modules/lodash-es/_MapCache.js","node_modules/lodash-es/_mapCacheClear.js","node_modules/lodash-es/_Hash.js","node_modules/lodash-es/_hashClear.js","node_modules/lodash-es/_nativeCreate.js","node_modules/lodash-es/_hashDelete.js","node_modules/lodash-es/_hashGet.js","node_modules/lodash-es/_hashHas.js","node_modules/lodash-es/_hashSet.js","node_modules/lodash-es/_mapCacheDelete.js","node_modules/lodash-es/_getMapData.js","node_modules/lodash-es/_isKeyable.js","node_modules/lodash-es/_mapCacheGet.js","node_modules/lodash-es/_mapCacheHas.js","node_modules/lodash-es/_mapCacheSet.js","node_modules/lodash-es/_arrayEach.js","node_modules/lodash-es/_assignValue.js","node_modules/lodash-es/_baseAssignValue.js","node_modules/lodash-es/_defineProperty.js","node_modules/lodash-es/_baseAssign.js","node_modules/lodash-es/_copyObject.js","node_modules/lodash-es/keys.js","node_modules/lodash-es/_arrayLikeKeys.js","node_modules/lodash-es/_baseTimes.js","node_modules/lodash-es/isArguments.js","node_modules/lodash-es/_baseIsArguments.js","node_modules/lodash-es/isObjectLike.js","node_modules/lodash-es/isArray.js","node_modules/lodash-es/isBuffer.js","node_modules/lodash-es/stubFalse.js","node_modules/lodash-es/_isIndex.js","node_modules/lodash-es/isTypedArray.js","node_modules/lodash-es/_baseIsTypedArray.js","node_modules/lodash-es/isLength.js","node_modules/lodash-es/_baseUnary.js","node_modules/lodash-es/_nodeUtil.js","node_modules/lodash-es/_baseKeys.js","node_modules/lodash-es/_isPrototype.js","node_modules/lodash-es/_nativeKeys.js","node_modules/lodash-es/_overArg.js","node_modules/lodash-es/isArrayLike.js","node_modules/lodash-es/_baseAssignIn.js","node_modules/lodash-es/keysIn.js","node_modules/lodash-es/_baseKeysIn.js","node_modules/lodash-es/_nativeKeysIn.js","node_modules/lodash-es/_cloneBuffer.js","node_modules/lodash-es/_copyArray.js","node_modules/lodash-es/_copySymbols.js","node_modules/lodash-es/_getSymbols.js","node_modules/lodash-es/_arrayFilter.js","node_modules/lodash-es/stubArray.js","node_modules/lodash-es/_copySymbolsIn.js","node_modules/lodash-es/_getSymbolsIn.js","node_modules/lodash-es/_arrayPush.js","node_modules/lodash-es/_getPrototype.js","node_modules/lodash-es/_getAllKeys.js","node_modules/lodash-es/_baseGetAllKeys.js","node_modules/lodash-es/_getAllKeysIn.js","node_modules/lodash-es/_getTag.js","node_modules/lodash-es/_DataView.js","node_modules/lodash-es/_Promise.js","node_modules/lodash-es/_Set.js","node_modules/lodash-es/_WeakMap.js","node_modules/lodash-es/_initCloneArray.js","node_modules/lodash-es/_initCloneByTag.js","node_modules/lodash-es/_cloneArrayBuffer.js","node_modules/lodash-es/_Uint8Array.js","node_modules/lodash-es/_cloneDataView.js","node_modules/lodash-es/_cloneRegExp.js","node_modules/lodash-es/_cloneSymbol.js","node_modules/lodash-es/_cloneTypedArray.js","node_modules/lodash-es/_initCloneObject.js","node_modules/lodash-es/_baseCreate.js","node_modules/lodash-es/isMap.js","node_modules/lodash-es/_baseIsMap.js","node_modules/lodash-es/isSet.js","node_modules/lodash-es/_baseIsSet.js","node_modules/lodash-es/constant.js","node_modules/lodash-es/identity.js","node_modules/lodash-es/isArrayLikeObject.js","node_modules/lodash-es/isEqual.js","node_modules/lodash-es/_baseIsEqual.js","node_modules/lodash-es/_baseIsEqualDeep.js","node_modules/lodash-es/_equalArrays.js","node_modules/lodash-es/_SetCache.js","node_modules/lodash-es/_setCacheAdd.js","node_modules/lodash-es/_setCacheHas.js","node_modules/lodash-es/_arraySome.js","node_modules/lodash-es/_cacheHas.js","node_modules/lodash-es/_equalByTag.js","node_modules/lodash-es/_mapToArray.js","node_modules/lodash-es/_setToArray.js","node_modules/lodash-es/_equalObjects.js","node_modules/lodash-es/isPlainObject.js","node_modules/lodash-es/merge.js","node_modules/lodash-es/_baseMerge.js","node_modules/lodash-es/_assignMergeValue.js","node_modules/lodash-es/_baseFor.js","node_modules/lodash-es/_createBaseFor.js","node_modules/lodash-es/_baseMergeDeep.js","node_modules/lodash-es/_safeGet.js","node_modules/lodash-es/toPlainObject.js","node_modules/lodash-es/_createAssigner.js","node_modules/lodash-es/_baseRest.js","node_modules/lodash-es/_overRest.js","node_modules/lodash-es/_apply.js","node_modules/lodash-es/_setToString.js","node_modules/lodash-es/_baseSetToString.js","node_modules/lodash-es/_shortOut.js","node_modules/lodash-es/_isIterateeCall.js","node_modules/parchment/dist/parchment.js","node_modules/parchment/src/scope.ts","node_modules/parchment/src/attributor/attributor.ts","node_modules/parchment/src/error.ts","node_modules/parchment/src/registry.ts","node_modules/parchment/src/attributor/class.ts","node_modules/parchment/src/attributor/style.ts","node_modules/parchment/src/attributor/store.ts","node_modules/parchment/src/blot/abstract/shadow.ts","node_modules/parchment/src/blot/abstract/leaf.ts","node_modules/parchment/src/collection/linked-list.ts","node_modules/parchment/src/blot/abstract/parent.ts","node_modules/parchment/src/blot/inline.ts","node_modules/parchment/src/blot/block.ts","node_modules/parchment/src/blot/abstract/container.ts","node_modules/parchment/src/blot/embed.ts","node_modules/parchment/src/blot/scroll.ts","node_modules/parchment/src/blot/text.ts","node_modules/quill-delta/dist/Delta.js","node_modules/quill-delta/src/Delta.ts","node_modules/fast-diff/diff.js","node_modules/lodash.clonedeep/index.js","node_modules/lodash.isequal/index.js","node_modules/quill-delta/dist/AttributeMap.js","node_modules/quill-delta/src/AttributeMap.ts","node_modules/quill-delta/dist/Op.js","node_modules/quill-delta/src/Op.ts","node_modules/quill-delta/dist/OpIterator.js","node_modules/quill-delta/src/OpIterator.ts","node_modules/quill/core/editor.js","node_modules/src/core/editor.ts","node_modules/quill/blots/block.js","node_modules/src/blots/block.ts","node_modules/quill/blots/break.js","node_modules/src/blots/break.ts","node_modules/quill/blots/inline.js","node_modules/src/blots/inline.ts","node_modules/quill/blots/text.js","node_modules/src/blots/text.ts","node_modules/quill/blots/cursor.js","node_modules/src/blots/cursor.ts","node_modules/quill/core/selection.js","node_modules/src/core/selection.ts","node_modules/quill/core/emitter.js","node_modules/src/core/emitter.ts","node_modules/eventemitter3/index.js","node_modules/quill/core/instances.js","node_modules/src/core/instances.ts","node_modules/quill/core/logger.js","node_modules/src/core/logger.ts","node_modules/quill/core/module.js","node_modules/src/core/module.ts","node_modules/quill/core/composition.js","node_modules/src/core/composition.ts","node_modules/quill/blots/embed.js","node_modules/src/blots/embed.ts","node_modules/quill/core/theme.js","node_modules/src/core/theme.ts","node_modules/quill/core/utils/scrollRectIntoView.js","node_modules/src/core/utils/scrollRectIntoView.ts","node_modules/quill/core/utils/createRegistryWithFormats.js","node_modules/src/core/utils/createRegistryWithFormats.ts","node_modules/quill/blots/container.js","node_modules/src/blots/container.ts","node_modules/quill/blots/scroll.js","node_modules/src/blots/scroll.ts","node_modules/quill/modules/clipboard.js","node_modules/src/modules/clipboard.ts","node_modules/quill/formats/align.js","node_modules/src/formats/align.ts","node_modules/quill/formats/background.js","node_modules/src/formats/background.ts","node_modules/quill/formats/color.js","node_modules/src/formats/color.ts","node_modules/quill/formats/code.js","node_modules/src/formats/code.ts","node_modules/quill/formats/direction.js","node_modules/src/formats/direction.ts","node_modules/quill/formats/font.js","node_modules/src/formats/font.ts","node_modules/quill/formats/size.js","node_modules/src/formats/size.ts","node_modules/quill/modules/keyboard.js","node_modules/src/modules/keyboard.ts","node_modules/quill/modules/normalizeExternalHTML/index.js","node_modules/src/modules/normalizeExternalHTML/index.ts","node_modules/quill/modules/normalizeExternalHTML/normalizers/googleDocs.js","node_modules/src/modules/normalizeExternalHTML/normalizers/googleDocs.ts","node_modules/quill/modules/normalizeExternalHTML/normalizers/msWord.js","node_modules/src/modules/normalizeExternalHTML/normalizers/msWord.ts","node_modules/quill/modules/history.js","node_modules/src/modules/history.ts","node_modules/quill/modules/uploader.js","node_modules/src/modules/uploader.ts","node_modules/quill/modules/input.js","node_modules/src/modules/input.ts","node_modules/quill/modules/uiNode.js","node_modules/src/modules/uiNode.ts","node_modules/quill/formats/indent.js","node_modules/src/formats/indent.ts","node_modules/quill/formats/blockquote.js","node_modules/src/formats/blockquote.ts","node_modules/quill/formats/header.js","node_modules/src/formats/header.ts","node_modules/quill/formats/list.js","node_modules/src/formats/list.ts","node_modules/quill/formats/bold.js","node_modules/src/formats/bold.ts","node_modules/quill/formats/italic.js","node_modules/src/formats/italic.ts","node_modules/quill/formats/link.js","node_modules/src/formats/link.ts","node_modules/quill/formats/script.js","node_modules/src/formats/script.ts","node_modules/quill/formats/strike.js","node_modules/src/formats/strike.ts","node_modules/quill/formats/underline.js","node_modules/src/formats/underline.ts","node_modules/quill/formats/formula.js","node_modules/src/formats/formula.ts","node_modules/quill/formats/image.js","node_modules/src/formats/image.ts","node_modules/quill/formats/video.js","node_modules/src/formats/video.ts","node_modules/quill/modules/syntax.js","node_modules/src/modules/syntax.ts","node_modules/quill/modules/table.js","node_modules/src/modules/table.ts","node_modules/quill/formats/table.js","node_modules/src/formats/table.ts","node_modules/quill/modules/toolbar.js","node_modules/src/modules/toolbar.ts","node_modules/quill/ui/icons.js","node_modules/src/ui/icons.ts","node_modules/quill/ui/picker.js","node_modules/src/ui/picker.ts","node_modules/quill/ui/color-picker.js","node_modules/src/ui/color-picker.ts","node_modules/quill/ui/icon-picker.js","node_modules/src/ui/icon-picker.ts","node_modules/quill/ui/tooltip.js","node_modules/src/ui/tooltip.ts","node_modules/quill/themes/bubble.js","node_modules/src/themes/bubble.ts","node_modules/quill/themes/base.js","node_modules/src/themes/base.ts","node_modules/quill/themes/snow.js","node_modules/src/themes/snow.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"d7fe96c059a40e7a\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","// ** STYLE IMPORTS ** //\r\nimport 'normalize.css';\r\nimport '../styles/main.scss';\r\nimport '../styles/reset.css';\r\n\r\n// ** MODULE IMPORTS ** //\r\nimport helper from './helper';\r\nimport backend from './backend';\r\nimport view from './view';\r\nimport './quill';\r\nimport { assertArrowFunctionExpression, updateExpression } from '@babel/types';\r\n\r\n// ** DRIVER CODE ** //\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  // Get announcements when page is loaded.\r\n  (async () => {\r\n    const posts = await backend.getPosts();\r\n    const user = backend.getCurrentUser();\r\n    view.buildPosts(posts, user);\r\n  })();\r\n\r\n  // Control selecting and opening modals\r\n  const newPostButton = document.getElementById('new-post-button');\r\n  newPostButton.addEventListener('click', () => {\r\n    // Select modal based on user auth status\r\n    const modal = backend.getCurrentUser()\r\n      ? document.getElementById('post-modal')\r\n      : document.getElementById('login-modal');\r\n\r\n    // Show selected modal\r\n    view.openModal(modal);\r\n  });\r\n\r\n  // Handle login form submission\r\n  const loginForm = document.getElementById('login-form');\r\n  const formError = document.getElementById('form-error');\r\n  loginForm.addEventListener('submit', async (event) => {\r\n    event.preventDefault();\r\n    const elements = event.target.elements;\r\n\r\n    const auth = await backend.authUser(\r\n      elements.user.value,\r\n      elements.pwd.value\r\n    );\r\n\r\n    // Return error if user auth fails\r\n    if (!auth) {\r\n      view.showError(formError, 'Invalid username or password');\r\n      return;\r\n    }\r\n\r\n    // If user auth successful process user login\r\n    view.showError(formError, '');\r\n    view.closeModal(document.getElementById('login-modal'));\r\n    loginForm.reset();\r\n    const posts = await backend.getPosts();\r\n    const user = backend.getCurrentUser();\r\n    view.buildPosts(posts, user);\r\n  });\r\n\r\n  // Handle new post submission\r\n  const form = document.getElementById('post-form');\r\n  form.addEventListener('submit', async (event) => {\r\n    event.preventDefault();\r\n    const elements = event.target.elements;\r\n    const user = backend.getCurrentUser();\r\n\r\n    // Build post from submitted data\r\n    const post = helper.buildPost(\r\n      elements.title.value,\r\n      elements.body.value,\r\n      user.name,\r\n      user.id\r\n    );\r\n\r\n    // Push post to backend\r\n    await backend.pushPost(post);\r\n\r\n    // Handle UI after successful post\r\n    view.closeModal(document.getElementById('post-modal'));\r\n    const posts = await backend.getPosts();\r\n    view.buildPosts(posts, user);\r\n    form.reset();\r\n  });\r\n\r\n  //  Set modal close buttons\r\n  const modalClosers = document.querySelectorAll('.modal-close');\r\n  modalClosers.forEach((button) => {\r\n    button.addEventListener('click', (event) => {\r\n      const modal = event.target.parentElement.parentElement;\r\n\r\n      const form = event.target.parentElement.nextElementSibling;\r\n\r\n      view.closeModal(modal);\r\n      form.reset();\r\n    });\r\n  });\r\n\r\n  // Set action of deletion modal buttons\r\n  const deletionButtons = document.querySelectorAll('.deletion-button');\r\n  deletionButtons.forEach((button) => {\r\n    const dialog = button.parentElement.parentElement;\r\n    if (button.id === 'yes') {\r\n      button.addEventListener('click', async () => {\r\n        await backend.deletePost(dialog.dataset.post_id);\r\n        const upatedPosts = await backend.getPosts();\r\n        const user = backend.getCurrentUser();\r\n        view.buildPosts(upatedPosts, user);\r\n        view.closeModal(dialog);\r\n      });\r\n    }\r\n    if (button.id === 'no') {\r\n      button.addEventListener('click', () => {\r\n        view.closeModal(dialog);\r\n      });\r\n    }\r\n  });\r\n\r\n  // Handle user log out\r\n  const logout = document.getElementById('logout');\r\n  logout.addEventListener('click', async () => {\r\n    backend.logoutUser();\r\n    const posts = await backend.getPosts();\r\n    view.buildPosts(posts, null);\r\n  });\r\n});\r\n",null,"import isReactComponent from \"./validators/react/isReactComponent.ts\";\nimport isCompatTag from \"./validators/react/isCompatTag.ts\";\nimport buildChildren from \"./builders/react/buildChildren.ts\";\n\n// asserts\nexport { default as assertNode } from \"./asserts/assertNode.ts\";\nexport * from \"./asserts/generated/index.ts\";\n\n// builders\nexport { default as createTypeAnnotationBasedOnTypeof } from \"./builders/flow/createTypeAnnotationBasedOnTypeof.ts\";\n/** @deprecated use createFlowUnionType instead */\nexport { default as createUnionTypeAnnotation } from \"./builders/flow/createFlowUnionType.ts\";\nexport { default as createFlowUnionType } from \"./builders/flow/createFlowUnionType.ts\";\nexport { default as createTSUnionType } from \"./builders/typescript/createTSUnionType.ts\";\nexport * from \"./builders/generated/index.ts\";\nexport * from \"./builders/generated/uppercase.js\";\nexport * from \"./builders/productions.ts\";\n\n// clone\nexport { default as cloneNode } from \"./clone/cloneNode.ts\";\nexport { default as clone } from \"./clone/clone.ts\";\nexport { default as cloneDeep } from \"./clone/cloneDeep.ts\";\nexport { default as cloneDeepWithoutLoc } from \"./clone/cloneDeepWithoutLoc.ts\";\nexport { default as cloneWithoutLoc } from \"./clone/cloneWithoutLoc.ts\";\n\n// comments\nexport { default as addComment } from \"./comments/addComment.ts\";\nexport { default as addComments } from \"./comments/addComments.ts\";\nexport { default as inheritInnerComments } from \"./comments/inheritInnerComments.ts\";\nexport { default as inheritLeadingComments } from \"./comments/inheritLeadingComments.ts\";\nexport { default as inheritsComments } from \"./comments/inheritsComments.ts\";\nexport { default as inheritTrailingComments } from \"./comments/inheritTrailingComments.ts\";\nexport { default as removeComments } from \"./comments/removeComments.ts\";\n\n// constants\nexport * from \"./constants/generated/index.ts\";\nexport * from \"./constants/index.ts\";\n\n// converters\nexport { default as ensureBlock } from \"./converters/ensureBlock.ts\";\nexport { default as toBindingIdentifierName } from \"./converters/toBindingIdentifierName.ts\";\nexport { default as toBlock } from \"./converters/toBlock.ts\";\nexport { default as toComputedKey } from \"./converters/toComputedKey.ts\";\nexport { default as toExpression } from \"./converters/toExpression.ts\";\nexport { default as toIdentifier } from \"./converters/toIdentifier.ts\";\nexport { default as toKeyAlias } from \"./converters/toKeyAlias.ts\";\nexport { default as toStatement } from \"./converters/toStatement.ts\";\nexport { default as valueToNode } from \"./converters/valueToNode.ts\";\n\n// definitions\nexport * from \"./definitions/index.ts\";\n\n// modifications\nexport { default as appendToMemberExpression } from \"./modifications/appendToMemberExpression.ts\";\nexport { default as inherits } from \"./modifications/inherits.ts\";\nexport { default as prependToMemberExpression } from \"./modifications/prependToMemberExpression.ts\";\nexport {\n  default as removeProperties,\n  type Options as RemovePropertiesOptions,\n} from \"./modifications/removeProperties.ts\";\nexport { default as removePropertiesDeep } from \"./modifications/removePropertiesDeep.ts\";\nexport { default as removeTypeDuplicates } from \"./modifications/flow/removeTypeDuplicates.ts\";\n\n// retrievers\nexport { default as getBindingIdentifiers } from \"./retrievers/getBindingIdentifiers.ts\";\nexport { default as getOuterBindingIdentifiers } from \"./retrievers/getOuterBindingIdentifiers.ts\";\n\n// traverse\nexport { default as traverse } from \"./traverse/traverse.ts\";\nexport * from \"./traverse/traverse.ts\";\nexport { default as traverseFast } from \"./traverse/traverseFast.ts\";\n\n// utils\nexport { default as shallowEqual } from \"./utils/shallowEqual.ts\";\n\n// validators\nexport { default as is } from \"./validators/is.ts\";\nexport { default as isBinding } from \"./validators/isBinding.ts\";\nexport { default as isBlockScoped } from \"./validators/isBlockScoped.ts\";\nexport { default as isImmutable } from \"./validators/isImmutable.ts\";\nexport { default as isLet } from \"./validators/isLet.ts\";\nexport { default as isNode } from \"./validators/isNode.ts\";\nexport { default as isNodesEquivalent } from \"./validators/isNodesEquivalent.ts\";\nexport { default as isPlaceholderType } from \"./validators/isPlaceholderType.ts\";\nexport { default as isReferenced } from \"./validators/isReferenced.ts\";\nexport { default as isScope } from \"./validators/isScope.ts\";\nexport { default as isSpecifierDefault } from \"./validators/isSpecifierDefault.ts\";\nexport { default as isType } from \"./validators/isType.ts\";\nexport { default as isValidES3Identifier } from \"./validators/isValidES3Identifier.ts\";\nexport { default as isValidIdentifier } from \"./validators/isValidIdentifier.ts\";\nexport { default as isVar } from \"./validators/isVar.ts\";\nexport { default as matchesPattern } from \"./validators/matchesPattern.ts\";\nexport { default as validate } from \"./validators/validate.ts\";\nexport { default as buildMatchMemberExpression } from \"./validators/buildMatchMemberExpression.ts\";\nexport * from \"./validators/generated/index.ts\";\n\n// react\nexport const react = {\n  isReactComponent,\n  isCompatTag,\n  buildChildren,\n};\n\nexport type * from \"./ast-types/generated/index.ts\";\n\n// this is used by @babel/traverse to warn about deprecated visitors\nexport { default as __internal__deprecationWarning } from \"./utils/deprecationWarning.ts\";\n\nif (!process.env.BABEL_8_BREAKING && !USE_ESM && !IS_STANDALONE) {\n  // eslint-disable-next-line no-restricted-globals\n  exports.toSequenceExpression =\n    // eslint-disable-next-line no-restricted-globals\n    require(\"./converters/toSequenceExpression.js\").default;\n}\n",null,"import buildMatchMemberExpression from \"../buildMatchMemberExpression.ts\";\n\nconst isReactComponent = buildMatchMemberExpression(\"React.Component\");\n\nexport default isReactComponent;\n",null,"import matchesPattern from \"./matchesPattern.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Build a function that when called will return whether or not the\n * input `node` `MemberExpression` matches the input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function buildMatchMemberExpression(\n  match: string,\n  allowPartial?: boolean,\n) {\n  const parts = match.split(\".\");\n\n  return (member: t.Node) => matchesPattern(member, parts, allowPartial);\n}\n",null,"import {\n  isIdentifier,\n  isMemberExpression,\n  isStringLiteral,\n  isThisExpression,\n} from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Determines whether or not the input node `member` matches the\n * input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function matchesPattern(\n  member: t.Node | null | undefined,\n  match: string | string[],\n  allowPartial?: boolean,\n): boolean {\n  // not a member expression\n  if (!isMemberExpression(member)) return false;\n\n  const parts = Array.isArray(match) ? match : match.split(\".\");\n  const nodes = [];\n\n  let node;\n  for (node = member; isMemberExpression(node); node = node.object) {\n    nodes.push(node.property);\n  }\n  nodes.push(node);\n\n  if (nodes.length < parts.length) return false;\n  if (!allowPartial && nodes.length > parts.length) return false;\n\n  for (let i = 0, j = nodes.length - 1; i < parts.length; i++, j--) {\n    const node = nodes[j];\n    let value;\n    if (isIdentifier(node)) {\n      value = node.name;\n    } else if (isStringLiteral(node)) {\n      value = node.value;\n    } else if (isThisExpression(node)) {\n      value = \"this\";\n    } else {\n      return false;\n    }\n\n    if (parts[i] !== value) return false;\n  }\n\n  return true;\n}\n",null,"/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\n/* eslint-disable no-fallthrough */\n\nimport shallowEqual from \"../../utils/shallowEqual.ts\";\nimport type * as t from \"../../index.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\n\ntype Opts<Obj> = Partial<{\n  [Prop in keyof Obj]: Obj[Prop] extends t.Node\n    ? t.Node\n    : Obj[Prop] extends t.Node[]\n      ? t.Node[]\n      : Obj[Prop];\n}>;\n\nexport function isArrayExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayExpression> | null,\n): node is t.ArrayExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAssignmentExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AssignmentExpression> | null,\n): node is t.AssignmentExpression {\n  if (!node) return false;\n\n  if (node.type !== \"AssignmentExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBinaryExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BinaryExpression> | null,\n): node is t.BinaryExpression {\n  if (!node) return false;\n\n  if (node.type !== \"BinaryExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterpreterDirective(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterpreterDirective> | null,\n): node is t.InterpreterDirective {\n  if (!node) return false;\n\n  if (node.type !== \"InterpreterDirective\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDirective(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Directive> | null,\n): node is t.Directive {\n  if (!node) return false;\n\n  if (node.type !== \"Directive\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDirectiveLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DirectiveLiteral> | null,\n): node is t.DirectiveLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"DirectiveLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlockStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BlockStatement> | null,\n): node is t.BlockStatement {\n  if (!node) return false;\n\n  if (node.type !== \"BlockStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBreakStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BreakStatement> | null,\n): node is t.BreakStatement {\n  if (!node) return false;\n\n  if (node.type !== \"BreakStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCallExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CallExpression> | null,\n): node is t.CallExpression {\n  if (!node) return false;\n\n  if (node.type !== \"CallExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCatchClause(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CatchClause> | null,\n): node is t.CatchClause {\n  if (!node) return false;\n\n  if (node.type !== \"CatchClause\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isConditionalExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ConditionalExpression> | null,\n): node is t.ConditionalExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ConditionalExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isContinueStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ContinueStatement> | null,\n): node is t.ContinueStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ContinueStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDebuggerStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DebuggerStatement> | null,\n): node is t.DebuggerStatement {\n  if (!node) return false;\n\n  if (node.type !== \"DebuggerStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDoWhileStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DoWhileStatement> | null,\n): node is t.DoWhileStatement {\n  if (!node) return false;\n\n  if (node.type !== \"DoWhileStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEmptyStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EmptyStatement> | null,\n): node is t.EmptyStatement {\n  if (!node) return false;\n\n  if (node.type !== \"EmptyStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpressionStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExpressionStatement> | null,\n): node is t.ExpressionStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ExpressionStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFile(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.File> | null,\n): node is t.File {\n  if (!node) return false;\n\n  if (node.type !== \"File\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForInStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForInStatement> | null,\n): node is t.ForInStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForInStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForStatement> | null,\n): node is t.ForStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionDeclaration> | null,\n): node is t.FunctionDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionExpression> | null,\n): node is t.FunctionExpression {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Identifier> | null,\n): node is t.Identifier {\n  if (!node) return false;\n\n  if (node.type !== \"Identifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIfStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IfStatement> | null,\n): node is t.IfStatement {\n  if (!node) return false;\n\n  if (node.type !== \"IfStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLabeledStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LabeledStatement> | null,\n): node is t.LabeledStatement {\n  if (!node) return false;\n\n  if (node.type !== \"LabeledStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringLiteral> | null,\n): node is t.StringLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"StringLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumericLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumericLiteral> | null,\n): node is t.NumericLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"NumericLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullLiteral> | null,\n): node is t.NullLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"NullLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanLiteral> | null,\n): node is t.BooleanLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRegExpLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RegExpLiteral> | null,\n): node is t.RegExpLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"RegExpLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLogicalExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LogicalExpression> | null,\n): node is t.LogicalExpression {\n  if (!node) return false;\n\n  if (node.type !== \"LogicalExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MemberExpression> | null,\n): node is t.MemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"MemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNewExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NewExpression> | null,\n): node is t.NewExpression {\n  if (!node) return false;\n\n  if (node.type !== \"NewExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isProgram(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Program> | null,\n): node is t.Program {\n  if (!node) return false;\n\n  if (node.type !== \"Program\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectExpression> | null,\n): node is t.ObjectExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectMethod> | null,\n): node is t.ObjectMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectProperty> | null,\n): node is t.ObjectProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRestElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RestElement> | null,\n): node is t.RestElement {\n  if (!node) return false;\n\n  if (node.type !== \"RestElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isReturnStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ReturnStatement> | null,\n): node is t.ReturnStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ReturnStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSequenceExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SequenceExpression> | null,\n): node is t.SequenceExpression {\n  if (!node) return false;\n\n  if (node.type !== \"SequenceExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isParenthesizedExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ParenthesizedExpression> | null,\n): node is t.ParenthesizedExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ParenthesizedExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSwitchCase(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SwitchCase> | null,\n): node is t.SwitchCase {\n  if (!node) return false;\n\n  if (node.type !== \"SwitchCase\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSwitchStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SwitchStatement> | null,\n): node is t.SwitchStatement {\n  if (!node) return false;\n\n  if (node.type !== \"SwitchStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThisExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThisExpression> | null,\n): node is t.ThisExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ThisExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThrowStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThrowStatement> | null,\n): node is t.ThrowStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ThrowStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTryStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TryStatement> | null,\n): node is t.TryStatement {\n  if (!node) return false;\n\n  if (node.type !== \"TryStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnaryExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnaryExpression> | null,\n): node is t.UnaryExpression {\n  if (!node) return false;\n\n  if (node.type !== \"UnaryExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUpdateExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UpdateExpression> | null,\n): node is t.UpdateExpression {\n  if (!node) return false;\n\n  if (node.type !== \"UpdateExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariableDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VariableDeclaration> | null,\n): node is t.VariableDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"VariableDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariableDeclarator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VariableDeclarator> | null,\n): node is t.VariableDeclarator {\n  if (!node) return false;\n\n  if (node.type !== \"VariableDeclarator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWhileStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.WhileStatement> | null,\n): node is t.WhileStatement {\n  if (!node) return false;\n\n  if (node.type !== \"WhileStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWithStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.WithStatement> | null,\n): node is t.WithStatement {\n  if (!node) return false;\n\n  if (node.type !== \"WithStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAssignmentPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AssignmentPattern> | null,\n): node is t.AssignmentPattern {\n  if (!node) return false;\n\n  if (node.type !== \"AssignmentPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrayPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayPattern> | null,\n): node is t.ArrayPattern {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrowFunctionExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrowFunctionExpression> | null,\n): node is t.ArrowFunctionExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ArrowFunctionExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassBody> | null,\n): node is t.ClassBody {\n  if (!node) return false;\n\n  if (node.type !== \"ClassBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassExpression> | null,\n): node is t.ClassExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ClassExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassDeclaration> | null,\n): node is t.ClassDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ClassDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportAllDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportAllDeclaration> | null,\n): node is t.ExportAllDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportAllDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDefaultDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDefaultDeclaration> | null,\n): node is t.ExportDefaultDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportDefaultDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportNamedDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportNamedDeclaration> | null,\n): node is t.ExportNamedDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportNamedDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportSpecifier> | null,\n): node is t.ExportSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForOfStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForOfStatement> | null,\n): node is t.ForOfStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForOfStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportDeclaration> | null,\n): node is t.ImportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ImportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportDefaultSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportDefaultSpecifier> | null,\n): node is t.ImportDefaultSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportDefaultSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportNamespaceSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportNamespaceSpecifier> | null,\n): node is t.ImportNamespaceSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportNamespaceSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportSpecifier> | null,\n): node is t.ImportSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportExpression> | null,\n): node is t.ImportExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ImportExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMetaProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MetaProperty> | null,\n): node is t.MetaProperty {\n  if (!node) return false;\n\n  if (node.type !== \"MetaProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassMethod> | null,\n): node is t.ClassMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ClassMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectPattern> | null,\n): node is t.ObjectPattern {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSpreadElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SpreadElement> | null,\n): node is t.SpreadElement {\n  if (!node) return false;\n\n  if (node.type !== \"SpreadElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSuper(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Super> | null,\n): node is t.Super {\n  if (!node) return false;\n\n  if (node.type !== \"Super\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTaggedTemplateExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TaggedTemplateExpression> | null,\n): node is t.TaggedTemplateExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TaggedTemplateExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTemplateElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TemplateElement> | null,\n): node is t.TemplateElement {\n  if (!node) return false;\n\n  if (node.type !== \"TemplateElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTemplateLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TemplateLiteral> | null,\n): node is t.TemplateLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"TemplateLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isYieldExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.YieldExpression> | null,\n): node is t.YieldExpression {\n  if (!node) return false;\n\n  if (node.type !== \"YieldExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAwaitExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AwaitExpression> | null,\n): node is t.AwaitExpression {\n  if (!node) return false;\n\n  if (node.type !== \"AwaitExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImport(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Import> | null,\n): node is t.Import {\n  if (!node) return false;\n\n  if (node.type !== \"Import\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBigIntLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BigIntLiteral> | null,\n): node is t.BigIntLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"BigIntLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportNamespaceSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportNamespaceSpecifier> | null,\n): node is t.ExportNamespaceSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportNamespaceSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalMemberExpression> | null,\n): node is t.OptionalMemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalMemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalCallExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalCallExpression> | null,\n): node is t.OptionalCallExpression {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalCallExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassProperty> | null,\n): node is t.ClassProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassAccessorProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassAccessorProperty> | null,\n): node is t.ClassAccessorProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassAccessorProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassPrivateProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassPrivateProperty> | null,\n): node is t.ClassPrivateProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassPrivateProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassPrivateMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassPrivateMethod> | null,\n): node is t.ClassPrivateMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ClassPrivateMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPrivateName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PrivateName> | null,\n): node is t.PrivateName {\n  if (!node) return false;\n\n  if (node.type !== \"PrivateName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStaticBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StaticBlock> | null,\n): node is t.StaticBlock {\n  if (!node) return false;\n\n  if (node.type !== \"StaticBlock\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAnyTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AnyTypeAnnotation> | null,\n): node is t.AnyTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"AnyTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrayTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayTypeAnnotation> | null,\n): node is t.ArrayTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanTypeAnnotation> | null,\n): node is t.BooleanTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanLiteralTypeAnnotation> | null,\n): node is t.BooleanLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullLiteralTypeAnnotation> | null,\n): node is t.NullLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NullLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassImplements(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassImplements> | null,\n): node is t.ClassImplements {\n  if (!node) return false;\n\n  if (node.type !== \"ClassImplements\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareClass(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareClass> | null,\n): node is t.DeclareClass {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareClass\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareFunction> | null,\n): node is t.DeclareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareInterface(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareInterface> | null,\n): node is t.DeclareInterface {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareInterface\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareModule(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareModule> | null,\n): node is t.DeclareModule {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareModule\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareModuleExports(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareModuleExports> | null,\n): node is t.DeclareModuleExports {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareModuleExports\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareTypeAlias(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareTypeAlias> | null,\n): node is t.DeclareTypeAlias {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareTypeAlias\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareOpaqueType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareOpaqueType> | null,\n): node is t.DeclareOpaqueType {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareOpaqueType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareVariable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareVariable> | null,\n): node is t.DeclareVariable {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareVariable\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareExportDeclaration> | null,\n): node is t.DeclareExportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareExportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareExportAllDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareExportAllDeclaration> | null,\n): node is t.DeclareExportAllDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareExportAllDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclaredPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclaredPredicate> | null,\n): node is t.DeclaredPredicate {\n  if (!node) return false;\n\n  if (node.type !== \"DeclaredPredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExistsTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExistsTypeAnnotation> | null,\n): node is t.ExistsTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ExistsTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionTypeAnnotation> | null,\n): node is t.FunctionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionTypeParam(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionTypeParam> | null,\n): node is t.FunctionTypeParam {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionTypeParam\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isGenericTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.GenericTypeAnnotation> | null,\n): node is t.GenericTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"GenericTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInferredPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InferredPredicate> | null,\n): node is t.InferredPredicate {\n  if (!node) return false;\n\n  if (node.type !== \"InferredPredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceExtends(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceExtends> | null,\n): node is t.InterfaceExtends {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceExtends\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceDeclaration> | null,\n): node is t.InterfaceDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceTypeAnnotation> | null,\n): node is t.InterfaceTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIntersectionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IntersectionTypeAnnotation> | null,\n): node is t.IntersectionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"IntersectionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMixedTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MixedTypeAnnotation> | null,\n): node is t.MixedTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"MixedTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEmptyTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EmptyTypeAnnotation> | null,\n): node is t.EmptyTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"EmptyTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullableTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullableTypeAnnotation> | null,\n): node is t.NullableTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NullableTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumberLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberLiteralTypeAnnotation> | null,\n): node is t.NumberLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NumberLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumberTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberTypeAnnotation> | null,\n): node is t.NumberTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NumberTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeAnnotation> | null,\n): node is t.ObjectTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeInternalSlot(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeInternalSlot> | null,\n): node is t.ObjectTypeInternalSlot {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeInternalSlot\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeCallProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeCallProperty> | null,\n): node is t.ObjectTypeCallProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeCallProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeIndexer(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeIndexer> | null,\n): node is t.ObjectTypeIndexer {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeIndexer\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeProperty> | null,\n): node is t.ObjectTypeProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeSpreadProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeSpreadProperty> | null,\n): node is t.ObjectTypeSpreadProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeSpreadProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOpaqueType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OpaqueType> | null,\n): node is t.OpaqueType {\n  if (!node) return false;\n\n  if (node.type !== \"OpaqueType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isQualifiedTypeIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.QualifiedTypeIdentifier> | null,\n): node is t.QualifiedTypeIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"QualifiedTypeIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringLiteralTypeAnnotation> | null,\n): node is t.StringLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"StringLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringTypeAnnotation> | null,\n): node is t.StringTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"StringTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSymbolTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SymbolTypeAnnotation> | null,\n): node is t.SymbolTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"SymbolTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThisTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThisTypeAnnotation> | null,\n): node is t.ThisTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ThisTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTupleTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TupleTypeAnnotation> | null,\n): node is t.TupleTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TupleTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeofTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeofTypeAnnotation> | null,\n): node is t.TypeofTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeofTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeAlias(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeAlias> | null,\n): node is t.TypeAlias {\n  if (!node) return false;\n\n  if (node.type !== \"TypeAlias\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeAnnotation> | null,\n): node is t.TypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeCastExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeCastExpression> | null,\n): node is t.TypeCastExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TypeCastExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameter(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameter> | null,\n): node is t.TypeParameter {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameter\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameterDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameterDeclaration> | null,\n): node is t.TypeParameterDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameterDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameterInstantiation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameterInstantiation> | null,\n): node is t.TypeParameterInstantiation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameterInstantiation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnionTypeAnnotation> | null,\n): node is t.UnionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"UnionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariance(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Variance> | null,\n): node is t.Variance {\n  if (!node) return false;\n\n  if (node.type !== \"Variance\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVoidTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VoidTypeAnnotation> | null,\n): node is t.VoidTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"VoidTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumDeclaration> | null,\n): node is t.EnumDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"EnumDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBooleanBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBooleanBody> | null,\n): node is t.EnumBooleanBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumBooleanBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumNumberBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumNumberBody> | null,\n): node is t.EnumNumberBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumNumberBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumStringBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumStringBody> | null,\n): node is t.EnumStringBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumStringBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumSymbolBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumSymbolBody> | null,\n): node is t.EnumSymbolBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumSymbolBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBooleanMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBooleanMember> | null,\n): node is t.EnumBooleanMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumBooleanMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumNumberMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumNumberMember> | null,\n): node is t.EnumNumberMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumNumberMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumStringMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumStringMember> | null,\n): node is t.EnumStringMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumStringMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumDefaultedMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumDefaultedMember> | null,\n): node is t.EnumDefaultedMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumDefaultedMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IndexedAccessType> | null,\n): node is t.IndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"IndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalIndexedAccessType> | null,\n): node is t.OptionalIndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalIndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXAttribute> | null,\n): node is t.JSXAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"JSXAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXClosingElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXClosingElement> | null,\n): node is t.JSXClosingElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXClosingElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXElement> | null,\n): node is t.JSXElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXEmptyExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXEmptyExpression> | null,\n): node is t.JSXEmptyExpression {\n  if (!node) return false;\n\n  if (node.type !== \"JSXEmptyExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXExpressionContainer(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXExpressionContainer> | null,\n): node is t.JSXExpressionContainer {\n  if (!node) return false;\n\n  if (node.type !== \"JSXExpressionContainer\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXSpreadChild(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXSpreadChild> | null,\n): node is t.JSXSpreadChild {\n  if (!node) return false;\n\n  if (node.type !== \"JSXSpreadChild\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXIdentifier> | null,\n): node is t.JSXIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"JSXIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXMemberExpression> | null,\n): node is t.JSXMemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"JSXMemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXNamespacedName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXNamespacedName> | null,\n): node is t.JSXNamespacedName {\n  if (!node) return false;\n\n  if (node.type !== \"JSXNamespacedName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXOpeningElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXOpeningElement> | null,\n): node is t.JSXOpeningElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXOpeningElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXSpreadAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXSpreadAttribute> | null,\n): node is t.JSXSpreadAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"JSXSpreadAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXText(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXText> | null,\n): node is t.JSXText {\n  if (!node) return false;\n\n  if (node.type !== \"JSXText\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXFragment> | null,\n): node is t.JSXFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXOpeningFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXOpeningFragment> | null,\n): node is t.JSXOpeningFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXOpeningFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXClosingFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXClosingFragment> | null,\n): node is t.JSXClosingFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXClosingFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNoop(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Noop> | null,\n): node is t.Noop {\n  if (!node) return false;\n\n  if (node.type !== \"Noop\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPlaceholder(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Placeholder> | null,\n): node is t.Placeholder {\n  if (!node) return false;\n\n  if (node.type !== \"Placeholder\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isV8IntrinsicIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.V8IntrinsicIdentifier> | null,\n): node is t.V8IntrinsicIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"V8IntrinsicIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArgumentPlaceholder(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArgumentPlaceholder> | null,\n): node is t.ArgumentPlaceholder {\n  if (!node) return false;\n\n  if (node.type !== \"ArgumentPlaceholder\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBindExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BindExpression> | null,\n): node is t.BindExpression {\n  if (!node) return false;\n\n  if (node.type !== \"BindExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportAttribute> | null,\n): node is t.ImportAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"ImportAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDecorator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Decorator> | null,\n): node is t.Decorator {\n  if (!node) return false;\n\n  if (node.type !== \"Decorator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDoExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DoExpression> | null,\n): node is t.DoExpression {\n  if (!node) return false;\n\n  if (node.type !== \"DoExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDefaultSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDefaultSpecifier> | null,\n): node is t.ExportDefaultSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportDefaultSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRecordExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RecordExpression> | null,\n): node is t.RecordExpression {\n  if (!node) return false;\n\n  if (node.type !== \"RecordExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTupleExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TupleExpression> | null,\n): node is t.TupleExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TupleExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDecimalLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DecimalLiteral> | null,\n): node is t.DecimalLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"DecimalLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isModuleExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleExpression> | null,\n): node is t.ModuleExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ModuleExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTopicReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TopicReference> | null,\n): node is t.TopicReference {\n  if (!node) return false;\n\n  if (node.type !== \"TopicReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelineTopicExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelineTopicExpression> | null,\n): node is t.PipelineTopicExpression {\n  if (!node) return false;\n\n  if (node.type !== \"PipelineTopicExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelineBareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelineBareFunction> | null,\n): node is t.PipelineBareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"PipelineBareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelinePrimaryTopicReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelinePrimaryTopicReference> | null,\n): node is t.PipelinePrimaryTopicReference {\n  if (!node) return false;\n\n  if (node.type !== \"PipelinePrimaryTopicReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSParameterProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSParameterProperty> | null,\n): node is t.TSParameterProperty {\n  if (!node) return false;\n\n  if (node.type !== \"TSParameterProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSDeclareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSDeclareFunction> | null,\n): node is t.TSDeclareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"TSDeclareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSDeclareMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSDeclareMethod> | null,\n): node is t.TSDeclareMethod {\n  if (!node) return false;\n\n  if (node.type !== \"TSDeclareMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSQualifiedName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSQualifiedName> | null,\n): node is t.TSQualifiedName {\n  if (!node) return false;\n\n  if (node.type !== \"TSQualifiedName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSCallSignatureDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSCallSignatureDeclaration> | null,\n): node is t.TSCallSignatureDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSCallSignatureDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConstructSignatureDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConstructSignatureDeclaration> | null,\n): node is t.TSConstructSignatureDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSConstructSignatureDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSPropertySignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSPropertySignature> | null,\n): node is t.TSPropertySignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSPropertySignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSMethodSignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSMethodSignature> | null,\n): node is t.TSMethodSignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSMethodSignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIndexSignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIndexSignature> | null,\n): node is t.TSIndexSignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSIndexSignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSAnyKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSAnyKeyword> | null,\n): node is t.TSAnyKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSAnyKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBooleanKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBooleanKeyword> | null,\n): node is t.TSBooleanKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSBooleanKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBigIntKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBigIntKeyword> | null,\n): node is t.TSBigIntKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSBigIntKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIntrinsicKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIntrinsicKeyword> | null,\n): node is t.TSIntrinsicKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSIntrinsicKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNeverKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNeverKeyword> | null,\n): node is t.TSNeverKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNeverKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNullKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNullKeyword> | null,\n): node is t.TSNullKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNullKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNumberKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNumberKeyword> | null,\n): node is t.TSNumberKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNumberKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSObjectKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSObjectKeyword> | null,\n): node is t.TSObjectKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSObjectKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSStringKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSStringKeyword> | null,\n): node is t.TSStringKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSStringKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSSymbolKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSSymbolKeyword> | null,\n): node is t.TSSymbolKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSSymbolKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUndefinedKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUndefinedKeyword> | null,\n): node is t.TSUndefinedKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSUndefinedKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUnknownKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUnknownKeyword> | null,\n): node is t.TSUnknownKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSUnknownKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSVoidKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSVoidKeyword> | null,\n): node is t.TSVoidKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSVoidKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSThisType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSThisType> | null,\n): node is t.TSThisType {\n  if (!node) return false;\n\n  if (node.type !== \"TSThisType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSFunctionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSFunctionType> | null,\n): node is t.TSFunctionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSFunctionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConstructorType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConstructorType> | null,\n): node is t.TSConstructorType {\n  if (!node) return false;\n\n  if (node.type !== \"TSConstructorType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeReference> | null,\n): node is t.TSTypeReference {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypePredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypePredicate> | null,\n): node is t.TSTypePredicate {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypePredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeQuery(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeQuery> | null,\n): node is t.TSTypeQuery {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeQuery\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeLiteral> | null,\n): node is t.TSTypeLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSArrayType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSArrayType> | null,\n): node is t.TSArrayType {\n  if (!node) return false;\n\n  if (node.type !== \"TSArrayType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTupleType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTupleType> | null,\n): node is t.TSTupleType {\n  if (!node) return false;\n\n  if (node.type !== \"TSTupleType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSOptionalType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSOptionalType> | null,\n): node is t.TSOptionalType {\n  if (!node) return false;\n\n  if (node.type !== \"TSOptionalType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSRestType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSRestType> | null,\n): node is t.TSRestType {\n  if (!node) return false;\n\n  if (node.type !== \"TSRestType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNamedTupleMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNamedTupleMember> | null,\n): node is t.TSNamedTupleMember {\n  if (!node) return false;\n\n  if (node.type !== \"TSNamedTupleMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUnionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUnionType> | null,\n): node is t.TSUnionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSUnionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIntersectionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIntersectionType> | null,\n): node is t.TSIntersectionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSIntersectionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConditionalType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConditionalType> | null,\n): node is t.TSConditionalType {\n  if (!node) return false;\n\n  if (node.type !== \"TSConditionalType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInferType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInferType> | null,\n): node is t.TSInferType {\n  if (!node) return false;\n\n  if (node.type !== \"TSInferType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSParenthesizedType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSParenthesizedType> | null,\n): node is t.TSParenthesizedType {\n  if (!node) return false;\n\n  if (node.type !== \"TSParenthesizedType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeOperator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeOperator> | null,\n): node is t.TSTypeOperator {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeOperator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIndexedAccessType> | null,\n): node is t.TSIndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"TSIndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSMappedType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSMappedType> | null,\n): node is t.TSMappedType {\n  if (!node) return false;\n\n  if (node.type !== \"TSMappedType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSLiteralType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSLiteralType> | null,\n): node is t.TSLiteralType {\n  if (!node) return false;\n\n  if (node.type !== \"TSLiteralType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExpressionWithTypeArguments(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExpressionWithTypeArguments> | null,\n): node is t.TSExpressionWithTypeArguments {\n  if (!node) return false;\n\n  if (node.type !== \"TSExpressionWithTypeArguments\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInterfaceDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInterfaceDeclaration> | null,\n): node is t.TSInterfaceDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSInterfaceDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInterfaceBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInterfaceBody> | null,\n): node is t.TSInterfaceBody {\n  if (!node) return false;\n\n  if (node.type !== \"TSInterfaceBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAliasDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAliasDeclaration> | null,\n): node is t.TSTypeAliasDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAliasDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInstantiationExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInstantiationExpression> | null,\n): node is t.TSInstantiationExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSInstantiationExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSAsExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSAsExpression> | null,\n): node is t.TSAsExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSAsExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSSatisfiesExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSSatisfiesExpression> | null,\n): node is t.TSSatisfiesExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSSatisfiesExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAssertion(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAssertion> | null,\n): node is t.TSTypeAssertion {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAssertion\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumDeclaration> | null,\n): node is t.TSEnumDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumMember> | null,\n): node is t.TSEnumMember {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSModuleDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSModuleDeclaration> | null,\n): node is t.TSModuleDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSModuleDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSModuleBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSModuleBlock> | null,\n): node is t.TSModuleBlock {\n  if (!node) return false;\n\n  if (node.type !== \"TSModuleBlock\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSImportType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSImportType> | null,\n): node is t.TSImportType {\n  if (!node) return false;\n\n  if (node.type !== \"TSImportType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSImportEqualsDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSImportEqualsDeclaration> | null,\n): node is t.TSImportEqualsDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSImportEqualsDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExternalModuleReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExternalModuleReference> | null,\n): node is t.TSExternalModuleReference {\n  if (!node) return false;\n\n  if (node.type !== \"TSExternalModuleReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNonNullExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNonNullExpression> | null,\n): node is t.TSNonNullExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSNonNullExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExportAssignment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExportAssignment> | null,\n): node is t.TSExportAssignment {\n  if (!node) return false;\n\n  if (node.type !== \"TSExportAssignment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNamespaceExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNamespaceExportDeclaration> | null,\n): node is t.TSNamespaceExportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSNamespaceExportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAnnotation> | null,\n): node is t.TSTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameterInstantiation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameterInstantiation> | null,\n): node is t.TSTypeParameterInstantiation {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameterInstantiation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameterDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameterDeclaration> | null,\n): node is t.TSTypeParameterDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameterDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameter(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameter> | null,\n): node is t.TSTypeParameter {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameter\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStandardized(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Standardized> | null,\n): node is t.Standardized {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ArrayExpression\":\n    case \"AssignmentExpression\":\n    case \"BinaryExpression\":\n    case \"InterpreterDirective\":\n    case \"Directive\":\n    case \"DirectiveLiteral\":\n    case \"BlockStatement\":\n    case \"BreakStatement\":\n    case \"CallExpression\":\n    case \"CatchClause\":\n    case \"ConditionalExpression\":\n    case \"ContinueStatement\":\n    case \"DebuggerStatement\":\n    case \"DoWhileStatement\":\n    case \"EmptyStatement\":\n    case \"ExpressionStatement\":\n    case \"File\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Identifier\":\n    case \"IfStatement\":\n    case \"LabeledStatement\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"LogicalExpression\":\n    case \"MemberExpression\":\n    case \"NewExpression\":\n    case \"Program\":\n    case \"ObjectExpression\":\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n    case \"RestElement\":\n    case \"ReturnStatement\":\n    case \"SequenceExpression\":\n    case \"ParenthesizedExpression\":\n    case \"SwitchCase\":\n    case \"SwitchStatement\":\n    case \"ThisExpression\":\n    case \"ThrowStatement\":\n    case \"TryStatement\":\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n    case \"VariableDeclaration\":\n    case \"VariableDeclarator\":\n    case \"WhileStatement\":\n    case \"WithStatement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassBody\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ExportSpecifier\":\n    case \"ForOfStatement\":\n    case \"ImportDeclaration\":\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n    case \"ImportExpression\":\n    case \"MetaProperty\":\n    case \"ClassMethod\":\n    case \"ObjectPattern\":\n    case \"SpreadElement\":\n    case \"Super\":\n    case \"TaggedTemplateExpression\":\n    case \"TemplateElement\":\n    case \"TemplateLiteral\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n    case \"Import\":\n    case \"BigIntLiteral\":\n    case \"ExportNamespaceSpecifier\":\n    case \"OptionalMemberExpression\":\n    case \"OptionalCallExpression\":\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n    case \"PrivateName\":\n    case \"StaticBlock\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Identifier\":\n        case \"StringLiteral\":\n        case \"BlockStatement\":\n        case \"ClassBody\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Expression> | null,\n): node is t.Expression {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ArrayExpression\":\n    case \"AssignmentExpression\":\n    case \"BinaryExpression\":\n    case \"CallExpression\":\n    case \"ConditionalExpression\":\n    case \"FunctionExpression\":\n    case \"Identifier\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"LogicalExpression\":\n    case \"MemberExpression\":\n    case \"NewExpression\":\n    case \"ObjectExpression\":\n    case \"SequenceExpression\":\n    case \"ParenthesizedExpression\":\n    case \"ThisExpression\":\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassExpression\":\n    case \"ImportExpression\":\n    case \"MetaProperty\":\n    case \"Super\":\n    case \"TaggedTemplateExpression\":\n    case \"TemplateLiteral\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n    case \"Import\":\n    case \"BigIntLiteral\":\n    case \"OptionalMemberExpression\":\n    case \"OptionalCallExpression\":\n    case \"TypeCastExpression\":\n    case \"JSXElement\":\n    case \"JSXFragment\":\n    case \"BindExpression\":\n    case \"DoExpression\":\n    case \"RecordExpression\":\n    case \"TupleExpression\":\n    case \"DecimalLiteral\":\n    case \"ModuleExpression\":\n    case \"TopicReference\":\n    case \"PipelineTopicExpression\":\n    case \"PipelineBareFunction\":\n    case \"PipelinePrimaryTopicReference\":\n    case \"TSInstantiationExpression\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Expression\":\n        case \"Identifier\":\n        case \"StringLiteral\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBinary(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Binary> | null,\n): node is t.Binary {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isScopable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Scopable> | null,\n): node is t.Scopable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"CatchClause\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Program\":\n    case \"ObjectMethod\":\n    case \"SwitchStatement\":\n    case \"WhileStatement\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n    case \"ForOfStatement\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlockParent(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BlockParent> | null,\n): node is t.BlockParent {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"CatchClause\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Program\":\n    case \"ObjectMethod\":\n    case \"SwitchStatement\":\n    case \"WhileStatement\":\n    case \"ArrowFunctionExpression\":\n    case \"ForOfStatement\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Block> | null,\n): node is t.Block {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"Program\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Statement> | null,\n): node is t.Statement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"DebuggerStatement\":\n    case \"DoWhileStatement\":\n    case \"EmptyStatement\":\n    case \"ExpressionStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"IfStatement\":\n    case \"LabeledStatement\":\n    case \"ReturnStatement\":\n    case \"SwitchStatement\":\n    case \"ThrowStatement\":\n    case \"TryStatement\":\n    case \"VariableDeclaration\":\n    case \"WhileStatement\":\n    case \"WithStatement\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ForOfStatement\":\n    case \"ImportDeclaration\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n    case \"EnumDeclaration\":\n    case \"TSDeclareFunction\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSEnumDeclaration\":\n    case \"TSModuleDeclaration\":\n    case \"TSImportEqualsDeclaration\":\n    case \"TSExportAssignment\":\n    case \"TSNamespaceExportDeclaration\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Statement\":\n        case \"Declaration\":\n        case \"BlockStatement\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTerminatorless(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Terminatorless> | null,\n): node is t.Terminatorless {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"ReturnStatement\":\n    case \"ThrowStatement\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCompletionStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CompletionStatement> | null,\n): node is t.CompletionStatement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"ReturnStatement\":\n    case \"ThrowStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isConditional(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Conditional> | null,\n): node is t.Conditional {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLoop(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Loop> | null,\n): node is t.Loop {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"WhileStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWhile(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.While> | null,\n): node is t.While {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DoWhileStatement\":\n    case \"WhileStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpressionWrapper(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExpressionWrapper> | null,\n): node is t.ExpressionWrapper {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExpressionStatement\":\n    case \"ParenthesizedExpression\":\n    case \"TypeCastExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFor(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.For> | null,\n): node is t.For {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForXStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForXStatement> | null,\n): node is t.ForXStatement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Function> | null,\n): node is t.Function {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ObjectMethod\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionParent(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionParent> | null,\n): node is t.FunctionParent {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ObjectMethod\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPureish(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Pureish> | null,\n): node is t.Pureish {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"ArrowFunctionExpression\":\n    case \"BigIntLiteral\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Declaration> | null,\n): node is t.Declaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"VariableDeclaration\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ImportDeclaration\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n    case \"EnumDeclaration\":\n    case \"TSDeclareFunction\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSEnumDeclaration\":\n    case \"TSModuleDeclaration\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Declaration\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPatternLike(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PatternLike> | null,\n): node is t.PatternLike {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"RestElement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Pattern\":\n        case \"Identifier\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLVal(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LVal> | null,\n): node is t.LVal {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\":\n    case \"RestElement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n    case \"TSParameterProperty\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Pattern\":\n        case \"Identifier\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEntityName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEntityName> | null,\n): node is t.TSEntityName {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"TSQualifiedName\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Identifier\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Literal> | null,\n): node is t.Literal {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"TemplateLiteral\":\n    case \"BigIntLiteral\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImmutable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Immutable> | null,\n): node is t.Immutable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"BigIntLiteral\":\n    case \"JSXAttribute\":\n    case \"JSXClosingElement\":\n    case \"JSXElement\":\n    case \"JSXExpressionContainer\":\n    case \"JSXSpreadChild\":\n    case \"JSXOpeningElement\":\n    case \"JSXText\":\n    case \"JSXFragment\":\n    case \"JSXOpeningFragment\":\n    case \"JSXClosingFragment\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUserWhitespacable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UserWhitespacable> | null,\n): node is t.UserWhitespacable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n    case \"ObjectTypeInternalSlot\":\n    case \"ObjectTypeCallProperty\":\n    case \"ObjectTypeIndexer\":\n    case \"ObjectTypeProperty\":\n    case \"ObjectTypeSpreadProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Method> | null,\n): node is t.Method {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectMember> | null,\n): node is t.ObjectMember {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Property> | null,\n): node is t.Property {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectProperty\":\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n    case \"ClassPrivateProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnaryLike(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnaryLike> | null,\n): node is t.UnaryLike {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"UnaryExpression\":\n    case \"SpreadElement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Pattern> | null,\n): node is t.Pattern {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Pattern\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClass(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Class> | null,\n): node is t.Class {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportOrExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportOrExportDeclaration> | null,\n): node is t.ImportOrExportDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ImportDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDeclaration> | null,\n): node is t.ExportDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isModuleSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleSpecifier> | null,\n): node is t.ModuleSpecifier {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportSpecifier\":\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAccessor(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Accessor> | null,\n): node is t.Accessor {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassAccessorProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPrivate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Private> | null,\n): node is t.Private {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n    case \"PrivateName\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlow(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Flow> | null,\n): node is t.Flow {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"ArrayTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"BooleanLiteralTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"ClassImplements\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"DeclaredPredicate\":\n    case \"ExistsTypeAnnotation\":\n    case \"FunctionTypeAnnotation\":\n    case \"FunctionTypeParam\":\n    case \"GenericTypeAnnotation\":\n    case \"InferredPredicate\":\n    case \"InterfaceExtends\":\n    case \"InterfaceDeclaration\":\n    case \"InterfaceTypeAnnotation\":\n    case \"IntersectionTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NullableTypeAnnotation\":\n    case \"NumberLiteralTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"ObjectTypeAnnotation\":\n    case \"ObjectTypeInternalSlot\":\n    case \"ObjectTypeCallProperty\":\n    case \"ObjectTypeIndexer\":\n    case \"ObjectTypeProperty\":\n    case \"ObjectTypeSpreadProperty\":\n    case \"OpaqueType\":\n    case \"QualifiedTypeIdentifier\":\n    case \"StringLiteralTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"TupleTypeAnnotation\":\n    case \"TypeofTypeAnnotation\":\n    case \"TypeAlias\":\n    case \"TypeAnnotation\":\n    case \"TypeCastExpression\":\n    case \"TypeParameter\":\n    case \"TypeParameterDeclaration\":\n    case \"TypeParameterInstantiation\":\n    case \"UnionTypeAnnotation\":\n    case \"Variance\":\n    case \"VoidTypeAnnotation\":\n    case \"EnumDeclaration\":\n    case \"EnumBooleanBody\":\n    case \"EnumNumberBody\":\n    case \"EnumStringBody\":\n    case \"EnumSymbolBody\":\n    case \"EnumBooleanMember\":\n    case \"EnumNumberMember\":\n    case \"EnumStringMember\":\n    case \"EnumDefaultedMember\":\n    case \"IndexedAccessType\":\n    case \"OptionalIndexedAccessType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowType> | null,\n): node is t.FlowType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"ArrayTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"BooleanLiteralTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"ExistsTypeAnnotation\":\n    case \"FunctionTypeAnnotation\":\n    case \"GenericTypeAnnotation\":\n    case \"InterfaceTypeAnnotation\":\n    case \"IntersectionTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NullableTypeAnnotation\":\n    case \"NumberLiteralTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"ObjectTypeAnnotation\":\n    case \"StringLiteralTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"TupleTypeAnnotation\":\n    case \"TypeofTypeAnnotation\":\n    case \"UnionTypeAnnotation\":\n    case \"VoidTypeAnnotation\":\n    case \"IndexedAccessType\":\n    case \"OptionalIndexedAccessType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowBaseAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowBaseAnnotation> | null,\n): node is t.FlowBaseAnnotation {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"VoidTypeAnnotation\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowDeclaration> | null,\n): node is t.FlowDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowPredicate> | null,\n): node is t.FlowPredicate {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DeclaredPredicate\":\n    case \"InferredPredicate\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBody> | null,\n): node is t.EnumBody {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"EnumBooleanBody\":\n    case \"EnumNumberBody\":\n    case \"EnumStringBody\":\n    case \"EnumSymbolBody\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumMember> | null,\n): node is t.EnumMember {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"EnumBooleanMember\":\n    case \"EnumNumberMember\":\n    case \"EnumStringMember\":\n    case \"EnumDefaultedMember\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSX(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSX> | null,\n): node is t.JSX {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"JSXAttribute\":\n    case \"JSXClosingElement\":\n    case \"JSXElement\":\n    case \"JSXEmptyExpression\":\n    case \"JSXExpressionContainer\":\n    case \"JSXSpreadChild\":\n    case \"JSXIdentifier\":\n    case \"JSXMemberExpression\":\n    case \"JSXNamespacedName\":\n    case \"JSXOpeningElement\":\n    case \"JSXSpreadAttribute\":\n    case \"JSXText\":\n    case \"JSXFragment\":\n    case \"JSXOpeningFragment\":\n    case \"JSXClosingFragment\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMiscellaneous(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Miscellaneous> | null,\n): node is t.Miscellaneous {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Noop\":\n    case \"Placeholder\":\n    case \"V8IntrinsicIdentifier\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeScript(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeScript> | null,\n): node is t.TypeScript {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSParameterProperty\":\n    case \"TSDeclareFunction\":\n    case \"TSDeclareMethod\":\n    case \"TSQualifiedName\":\n    case \"TSCallSignatureDeclaration\":\n    case \"TSConstructSignatureDeclaration\":\n    case \"TSPropertySignature\":\n    case \"TSMethodSignature\":\n    case \"TSIndexSignature\":\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSFunctionType\":\n    case \"TSConstructorType\":\n    case \"TSTypeReference\":\n    case \"TSTypePredicate\":\n    case \"TSTypeQuery\":\n    case \"TSTypeLiteral\":\n    case \"TSArrayType\":\n    case \"TSTupleType\":\n    case \"TSOptionalType\":\n    case \"TSRestType\":\n    case \"TSNamedTupleMember\":\n    case \"TSUnionType\":\n    case \"TSIntersectionType\":\n    case \"TSConditionalType\":\n    case \"TSInferType\":\n    case \"TSParenthesizedType\":\n    case \"TSTypeOperator\":\n    case \"TSIndexedAccessType\":\n    case \"TSMappedType\":\n    case \"TSLiteralType\":\n    case \"TSExpressionWithTypeArguments\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSInterfaceBody\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSInstantiationExpression\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSEnumDeclaration\":\n    case \"TSEnumMember\":\n    case \"TSModuleDeclaration\":\n    case \"TSModuleBlock\":\n    case \"TSImportType\":\n    case \"TSImportEqualsDeclaration\":\n    case \"TSExternalModuleReference\":\n    case \"TSNonNullExpression\":\n    case \"TSExportAssignment\":\n    case \"TSNamespaceExportDeclaration\":\n    case \"TSTypeAnnotation\":\n    case \"TSTypeParameterInstantiation\":\n    case \"TSTypeParameterDeclaration\":\n    case \"TSTypeParameter\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeElement> | null,\n): node is t.TSTypeElement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSCallSignatureDeclaration\":\n    case \"TSConstructSignatureDeclaration\":\n    case \"TSPropertySignature\":\n    case \"TSMethodSignature\":\n    case \"TSIndexSignature\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSType> | null,\n): node is t.TSType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSFunctionType\":\n    case \"TSConstructorType\":\n    case \"TSTypeReference\":\n    case \"TSTypePredicate\":\n    case \"TSTypeQuery\":\n    case \"TSTypeLiteral\":\n    case \"TSArrayType\":\n    case \"TSTupleType\":\n    case \"TSOptionalType\":\n    case \"TSRestType\":\n    case \"TSUnionType\":\n    case \"TSIntersectionType\":\n    case \"TSConditionalType\":\n    case \"TSInferType\":\n    case \"TSParenthesizedType\":\n    case \"TSTypeOperator\":\n    case \"TSIndexedAccessType\":\n    case \"TSMappedType\":\n    case \"TSLiteralType\":\n    case \"TSExpressionWithTypeArguments\":\n    case \"TSImportType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBaseType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBaseType> | null,\n): node is t.TSBaseType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSLiteralType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isNumericLiteral`\n */\nexport function isNumberLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberLiteral> | null,\n): boolean {\n  deprecationWarning(\"isNumberLiteral\", \"isNumericLiteral\");\n  if (!node) return false;\n\n  if (node.type !== \"NumberLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isRegExpLiteral`\n */\nexport function isRegexLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RegexLiteral> | null,\n): boolean {\n  deprecationWarning(\"isRegexLiteral\", \"isRegExpLiteral\");\n  if (!node) return false;\n\n  if (node.type !== \"RegexLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isRestElement`\n */\nexport function isRestProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RestProperty> | null,\n): boolean {\n  deprecationWarning(\"isRestProperty\", \"isRestElement\");\n  if (!node) return false;\n\n  if (node.type !== \"RestProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isSpreadElement`\n */\nexport function isSpreadProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SpreadProperty> | null,\n): boolean {\n  deprecationWarning(\"isSpreadProperty\", \"isSpreadElement\");\n  if (!node) return false;\n\n  if (node.type !== \"SpreadProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isImportOrExportDeclaration`\n */\nexport function isModuleDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleDeclaration> | null,\n): node is t.ImportOrExportDeclaration {\n  deprecationWarning(\"isModuleDeclaration\", \"isImportOrExportDeclaration\");\n  return isImportOrExportDeclaration(node, opts);\n}\n",null,"export default function shallowEqual<T extends object>(\n  actual: object,\n  expected: T,\n): actual is T {\n  const keys = Object.keys(expected) as (keyof T)[];\n\n  for (const key of keys) {\n    if (\n      // @ts-expect-error maybe we should check whether key exists first\n      actual[key] !== expected[key]\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n",null,"const warnings = new Set();\n\nexport default function deprecationWarning(\n  oldName: string,\n  newName: string,\n  prefix: string = \"\",\n) {\n  if (warnings.has(oldName)) return;\n  warnings.add(oldName);\n\n  const { internal, trace } = captureShortStackTrace(1, 2);\n  if (internal) {\n    // If usage comes from an internal package, there is no point in warning because\n    // 1. The new version of the package will already use the new API\n    // 2. When the deprecation will become an error (in a future major version), users\n    //    will have to update every package anyway.\n    return;\n  }\n  console.warn(\n    `${prefix}\\`${oldName}\\` has been deprecated, please migrate to \\`${newName}\\`\\n${trace}`,\n  );\n}\n\nfunction captureShortStackTrace(skip: number, length: number) {\n  const { stackTraceLimit, prepareStackTrace } = Error;\n  let stackTrace: NodeJS.CallSite[];\n  // We add 1 to also take into account this function.\n  Error.stackTraceLimit = 1 + skip + length;\n  Error.prepareStackTrace = function (err, stack) {\n    stackTrace = stack;\n  };\n  new Error().stack;\n  Error.stackTraceLimit = stackTraceLimit;\n  Error.prepareStackTrace = prepareStackTrace;\n\n  if (!stackTrace) return { internal: false, trace: \"\" };\n\n  const shortStackTrace = stackTrace.slice(1 + skip, 1 + skip + length);\n  return {\n    internal: /[\\\\/]@babel[\\\\/]/.test(shortStackTrace[1].getFileName()),\n    trace: shortStackTrace.map(frame => `    at ${frame}`).join(\"\\n\"),\n  };\n}\n",null,"export default function isCompatTag(tagName?: string): boolean {\n  // Must start with a lowercase ASCII letter\n  return !!tagName && /^[a-z]/.test(tagName);\n}\n",null,"import {\n  isJSXText,\n  isJSXExpressionContainer,\n  isJSXEmptyExpression,\n} from \"../../validators/generated/index.ts\";\nimport cleanJSXElementLiteralChild from \"../../utils/react/cleanJSXElementLiteralChild.ts\";\nimport type * as t from \"../../index.ts\";\n\ntype ReturnedChild =\n  | t.JSXSpreadChild\n  | t.JSXElement\n  | t.JSXFragment\n  | t.Expression;\n\nexport default function buildChildren(\n  node: t.JSXElement | t.JSXFragment,\n): ReturnedChild[] {\n  const elements = [];\n\n  for (let i = 0; i < node.children.length; i++) {\n    let child: any = node.children[i];\n\n    if (isJSXText(child)) {\n      cleanJSXElementLiteralChild(child, elements);\n      continue;\n    }\n\n    if (isJSXExpressionContainer(child)) child = child.expression;\n    if (isJSXEmptyExpression(child)) continue;\n\n    elements.push(child);\n  }\n\n  return elements;\n}\n",null,"import { stringLiteral } from \"../../builders/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\nimport { inherits } from \"../../index.ts\";\n\nexport default function cleanJSXElementLiteralChild(\n  child: t.JSXText,\n  args: Array<t.Node>,\n) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n\n    // replace rendered whitespace tabs with spaces\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    // trim whitespace touching a newline\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n\n    // trim whitespace touching an endline\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push(inherits(stringLiteral(str), child));\n}\n",null,"/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport validateNode from \"../validateNode.ts\";\nimport type * as t from \"../../index.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\nexport function arrayExpression(\n  elements: Array<null | t.Expression | t.SpreadElement> = [],\n): t.ArrayExpression {\n  return validateNode<t.ArrayExpression>({\n    type: \"ArrayExpression\",\n    elements,\n  });\n}\nexport function assignmentExpression(\n  operator: string,\n  left: t.LVal | t.OptionalMemberExpression,\n  right: t.Expression,\n): t.AssignmentExpression {\n  return validateNode<t.AssignmentExpression>({\n    type: \"AssignmentExpression\",\n    operator,\n    left,\n    right,\n  });\n}\nexport function binaryExpression(\n  operator:\n    | \"+\"\n    | \"-\"\n    | \"/\"\n    | \"%\"\n    | \"*\"\n    | \"**\"\n    | \"&\"\n    | \"|\"\n    | \">>\"\n    | \">>>\"\n    | \"<<\"\n    | \"^\"\n    | \"==\"\n    | \"===\"\n    | \"!=\"\n    | \"!==\"\n    | \"in\"\n    | \"instanceof\"\n    | \">\"\n    | \"<\"\n    | \">=\"\n    | \"<=\"\n    | \"|>\",\n  left: t.Expression | t.PrivateName,\n  right: t.Expression,\n): t.BinaryExpression {\n  return validateNode<t.BinaryExpression>({\n    type: \"BinaryExpression\",\n    operator,\n    left,\n    right,\n  });\n}\nexport function interpreterDirective(value: string): t.InterpreterDirective {\n  return validateNode<t.InterpreterDirective>({\n    type: \"InterpreterDirective\",\n    value,\n  });\n}\nexport function directive(value: t.DirectiveLiteral): t.Directive {\n  return validateNode<t.Directive>({\n    type: \"Directive\",\n    value,\n  });\n}\nexport function directiveLiteral(value: string): t.DirectiveLiteral {\n  return validateNode<t.DirectiveLiteral>({\n    type: \"DirectiveLiteral\",\n    value,\n  });\n}\nexport function blockStatement(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n): t.BlockStatement {\n  return validateNode<t.BlockStatement>({\n    type: \"BlockStatement\",\n    body,\n    directives,\n  });\n}\nexport function breakStatement(\n  label: t.Identifier | null = null,\n): t.BreakStatement {\n  return validateNode<t.BreakStatement>({\n    type: \"BreakStatement\",\n    label,\n  });\n}\nexport function callExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<\n    t.Expression | t.SpreadElement | t.JSXNamespacedName | t.ArgumentPlaceholder\n  >,\n): t.CallExpression {\n  return validateNode<t.CallExpression>({\n    type: \"CallExpression\",\n    callee,\n    arguments: _arguments,\n  });\n}\nexport function catchClause(\n  param:\n    | t.Identifier\n    | t.ArrayPattern\n    | t.ObjectPattern\n    | null\n    | undefined = null,\n  body: t.BlockStatement,\n): t.CatchClause {\n  return validateNode<t.CatchClause>({\n    type: \"CatchClause\",\n    param,\n    body,\n  });\n}\nexport function conditionalExpression(\n  test: t.Expression,\n  consequent: t.Expression,\n  alternate: t.Expression,\n): t.ConditionalExpression {\n  return validateNode<t.ConditionalExpression>({\n    type: \"ConditionalExpression\",\n    test,\n    consequent,\n    alternate,\n  });\n}\nexport function continueStatement(\n  label: t.Identifier | null = null,\n): t.ContinueStatement {\n  return validateNode<t.ContinueStatement>({\n    type: \"ContinueStatement\",\n    label,\n  });\n}\nexport function debuggerStatement(): t.DebuggerStatement {\n  return {\n    type: \"DebuggerStatement\",\n  };\n}\nexport function doWhileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.DoWhileStatement {\n  return validateNode<t.DoWhileStatement>({\n    type: \"DoWhileStatement\",\n    test,\n    body,\n  });\n}\nexport function emptyStatement(): t.EmptyStatement {\n  return {\n    type: \"EmptyStatement\",\n  };\n}\nexport function expressionStatement(\n  expression: t.Expression,\n): t.ExpressionStatement {\n  return validateNode<t.ExpressionStatement>({\n    type: \"ExpressionStatement\",\n    expression,\n  });\n}\nexport function file(\n  program: t.Program,\n  comments: Array<t.CommentBlock | t.CommentLine> | null = null,\n  tokens: Array<any> | null = null,\n): t.File {\n  return validateNode<t.File>({\n    type: \"File\",\n    program,\n    comments,\n    tokens,\n  });\n}\nexport function forInStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n): t.ForInStatement {\n  return validateNode<t.ForInStatement>({\n    type: \"ForInStatement\",\n    left,\n    right,\n    body,\n  });\n}\nexport function forStatement(\n  init: t.VariableDeclaration | t.Expression | null | undefined = null,\n  test: t.Expression | null | undefined = null,\n  update: t.Expression | null | undefined = null,\n  body: t.Statement,\n): t.ForStatement {\n  return validateNode<t.ForStatement>({\n    type: \"ForStatement\",\n    init,\n    test,\n    update,\n    body,\n  });\n}\nexport function functionDeclaration(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionDeclaration {\n  return validateNode<t.FunctionDeclaration>({\n    type: \"FunctionDeclaration\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  });\n}\nexport function functionExpression(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionExpression {\n  return validateNode<t.FunctionExpression>({\n    type: \"FunctionExpression\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  });\n}\nexport function identifier(name: string): t.Identifier {\n  return validateNode<t.Identifier>({\n    type: \"Identifier\",\n    name,\n  });\n}\nexport function ifStatement(\n  test: t.Expression,\n  consequent: t.Statement,\n  alternate: t.Statement | null = null,\n): t.IfStatement {\n  return validateNode<t.IfStatement>({\n    type: \"IfStatement\",\n    test,\n    consequent,\n    alternate,\n  });\n}\nexport function labeledStatement(\n  label: t.Identifier,\n  body: t.Statement,\n): t.LabeledStatement {\n  return validateNode<t.LabeledStatement>({\n    type: \"LabeledStatement\",\n    label,\n    body,\n  });\n}\nexport function stringLiteral(value: string): t.StringLiteral {\n  return validateNode<t.StringLiteral>({\n    type: \"StringLiteral\",\n    value,\n  });\n}\nexport function numericLiteral(value: number): t.NumericLiteral {\n  return validateNode<t.NumericLiteral>({\n    type: \"NumericLiteral\",\n    value,\n  });\n}\nexport function nullLiteral(): t.NullLiteral {\n  return {\n    type: \"NullLiteral\",\n  };\n}\nexport function booleanLiteral(value: boolean): t.BooleanLiteral {\n  return validateNode<t.BooleanLiteral>({\n    type: \"BooleanLiteral\",\n    value,\n  });\n}\nexport function regExpLiteral(\n  pattern: string,\n  flags: string = \"\",\n): t.RegExpLiteral {\n  return validateNode<t.RegExpLiteral>({\n    type: \"RegExpLiteral\",\n    pattern,\n    flags,\n  });\n}\nexport function logicalExpression(\n  operator: \"||\" | \"&&\" | \"??\",\n  left: t.Expression,\n  right: t.Expression,\n): t.LogicalExpression {\n  return validateNode<t.LogicalExpression>({\n    type: \"LogicalExpression\",\n    operator,\n    left,\n    right,\n  });\n}\nexport function memberExpression(\n  object: t.Expression | t.Super,\n  property: t.Expression | t.Identifier | t.PrivateName,\n  computed: boolean = false,\n  optional: true | false | null = null,\n): t.MemberExpression {\n  return validateNode<t.MemberExpression>({\n    type: \"MemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  });\n}\nexport function newExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<\n    t.Expression | t.SpreadElement | t.JSXNamespacedName | t.ArgumentPlaceholder\n  >,\n): t.NewExpression {\n  return validateNode<t.NewExpression>({\n    type: \"NewExpression\",\n    callee,\n    arguments: _arguments,\n  });\n}\nexport function program(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n  sourceType: \"script\" | \"module\" = \"script\",\n  interpreter: t.InterpreterDirective | null = null,\n): t.Program {\n  return validateNode<t.Program>({\n    type: \"Program\",\n    body,\n    directives,\n    sourceType,\n    interpreter,\n  });\n}\nexport function objectExpression(\n  properties: Array<t.ObjectMethod | t.ObjectProperty | t.SpreadElement>,\n): t.ObjectExpression {\n  return validateNode<t.ObjectExpression>({\n    type: \"ObjectExpression\",\n    properties,\n  });\n}\nexport function objectMethod(\n  kind: \"method\" | \"get\" | \"set\" | undefined = \"method\",\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ObjectMethod {\n  return validateNode<t.ObjectMethod>({\n    type: \"ObjectMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    generator,\n    async,\n  });\n}\nexport function objectProperty(\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.DecimalLiteral\n    | t.PrivateName,\n  value: t.Expression | t.PatternLike,\n  computed: boolean = false,\n  shorthand: boolean = false,\n  decorators: Array<t.Decorator> | null = null,\n): t.ObjectProperty {\n  return validateNode<t.ObjectProperty>({\n    type: \"ObjectProperty\",\n    key,\n    value,\n    computed,\n    shorthand,\n    decorators,\n  });\n}\nexport function restElement(argument: t.LVal): t.RestElement {\n  return validateNode<t.RestElement>({\n    type: \"RestElement\",\n    argument,\n  });\n}\nexport function returnStatement(\n  argument: t.Expression | null = null,\n): t.ReturnStatement {\n  return validateNode<t.ReturnStatement>({\n    type: \"ReturnStatement\",\n    argument,\n  });\n}\nexport function sequenceExpression(\n  expressions: Array<t.Expression>,\n): t.SequenceExpression {\n  return validateNode<t.SequenceExpression>({\n    type: \"SequenceExpression\",\n    expressions,\n  });\n}\nexport function parenthesizedExpression(\n  expression: t.Expression,\n): t.ParenthesizedExpression {\n  return validateNode<t.ParenthesizedExpression>({\n    type: \"ParenthesizedExpression\",\n    expression,\n  });\n}\nexport function switchCase(\n  test: t.Expression | null | undefined = null,\n  consequent: Array<t.Statement>,\n): t.SwitchCase {\n  return validateNode<t.SwitchCase>({\n    type: \"SwitchCase\",\n    test,\n    consequent,\n  });\n}\nexport function switchStatement(\n  discriminant: t.Expression,\n  cases: Array<t.SwitchCase>,\n): t.SwitchStatement {\n  return validateNode<t.SwitchStatement>({\n    type: \"SwitchStatement\",\n    discriminant,\n    cases,\n  });\n}\nexport function thisExpression(): t.ThisExpression {\n  return {\n    type: \"ThisExpression\",\n  };\n}\nexport function throwStatement(argument: t.Expression): t.ThrowStatement {\n  return validateNode<t.ThrowStatement>({\n    type: \"ThrowStatement\",\n    argument,\n  });\n}\nexport function tryStatement(\n  block: t.BlockStatement,\n  handler: t.CatchClause | null = null,\n  finalizer: t.BlockStatement | null = null,\n): t.TryStatement {\n  return validateNode<t.TryStatement>({\n    type: \"TryStatement\",\n    block,\n    handler,\n    finalizer,\n  });\n}\nexport function unaryExpression(\n  operator: \"void\" | \"throw\" | \"delete\" | \"!\" | \"+\" | \"-\" | \"~\" | \"typeof\",\n  argument: t.Expression,\n  prefix: boolean = true,\n): t.UnaryExpression {\n  return validateNode<t.UnaryExpression>({\n    type: \"UnaryExpression\",\n    operator,\n    argument,\n    prefix,\n  });\n}\nexport function updateExpression(\n  operator: \"++\" | \"--\",\n  argument: t.Expression,\n  prefix: boolean = false,\n): t.UpdateExpression {\n  return validateNode<t.UpdateExpression>({\n    type: \"UpdateExpression\",\n    operator,\n    argument,\n    prefix,\n  });\n}\nexport function variableDeclaration(\n  kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n  declarations: Array<t.VariableDeclarator>,\n): t.VariableDeclaration {\n  return validateNode<t.VariableDeclaration>({\n    type: \"VariableDeclaration\",\n    kind,\n    declarations,\n  });\n}\nexport function variableDeclarator(\n  id: t.LVal,\n  init: t.Expression | null = null,\n): t.VariableDeclarator {\n  return validateNode<t.VariableDeclarator>({\n    type: \"VariableDeclarator\",\n    id,\n    init,\n  });\n}\nexport function whileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.WhileStatement {\n  return validateNode<t.WhileStatement>({\n    type: \"WhileStatement\",\n    test,\n    body,\n  });\n}\nexport function withStatement(\n  object: t.Expression,\n  body: t.Statement,\n): t.WithStatement {\n  return validateNode<t.WithStatement>({\n    type: \"WithStatement\",\n    object,\n    body,\n  });\n}\nexport function assignmentPattern(\n  left:\n    | t.Identifier\n    | t.ObjectPattern\n    | t.ArrayPattern\n    | t.MemberExpression\n    | t.TSAsExpression\n    | t.TSSatisfiesExpression\n    | t.TSTypeAssertion\n    | t.TSNonNullExpression,\n  right: t.Expression,\n): t.AssignmentPattern {\n  return validateNode<t.AssignmentPattern>({\n    type: \"AssignmentPattern\",\n    left,\n    right,\n  });\n}\nexport function arrayPattern(\n  elements: Array<null | t.PatternLike | t.LVal>,\n): t.ArrayPattern {\n  return validateNode<t.ArrayPattern>({\n    type: \"ArrayPattern\",\n    elements,\n  });\n}\nexport function arrowFunctionExpression(\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement | t.Expression,\n  async: boolean = false,\n): t.ArrowFunctionExpression {\n  return validateNode<t.ArrowFunctionExpression>({\n    type: \"ArrowFunctionExpression\",\n    params,\n    body,\n    async,\n    expression: null,\n  });\n}\nexport function classBody(\n  body: Array<\n    | t.ClassMethod\n    | t.ClassPrivateMethod\n    | t.ClassProperty\n    | t.ClassPrivateProperty\n    | t.ClassAccessorProperty\n    | t.TSDeclareMethod\n    | t.TSIndexSignature\n    | t.StaticBlock\n  >,\n): t.ClassBody {\n  return validateNode<t.ClassBody>({\n    type: \"ClassBody\",\n    body,\n  });\n}\nexport function classExpression(\n  id: t.Identifier | null | undefined = null,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassExpression {\n  return validateNode<t.ClassExpression>({\n    type: \"ClassExpression\",\n    id,\n    superClass,\n    body,\n    decorators,\n  });\n}\nexport function classDeclaration(\n  id: t.Identifier | null | undefined = null,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassDeclaration {\n  return validateNode<t.ClassDeclaration>({\n    type: \"ClassDeclaration\",\n    id,\n    superClass,\n    body,\n    decorators,\n  });\n}\nexport function exportAllDeclaration(\n  source: t.StringLiteral,\n): t.ExportAllDeclaration {\n  return validateNode<t.ExportAllDeclaration>({\n    type: \"ExportAllDeclaration\",\n    source,\n  });\n}\nexport function exportDefaultDeclaration(\n  declaration:\n    | t.TSDeclareFunction\n    | t.FunctionDeclaration\n    | t.ClassDeclaration\n    | t.Expression,\n): t.ExportDefaultDeclaration {\n  return validateNode<t.ExportDefaultDeclaration>({\n    type: \"ExportDefaultDeclaration\",\n    declaration,\n  });\n}\nexport function exportNamedDeclaration(\n  declaration: t.Declaration | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportDefaultSpecifier | t.ExportNamespaceSpecifier\n  > = [],\n  source: t.StringLiteral | null = null,\n): t.ExportNamedDeclaration {\n  return validateNode<t.ExportNamedDeclaration>({\n    type: \"ExportNamedDeclaration\",\n    declaration,\n    specifiers,\n    source,\n  });\n}\nexport function exportSpecifier(\n  local: t.Identifier,\n  exported: t.Identifier | t.StringLiteral,\n): t.ExportSpecifier {\n  return validateNode<t.ExportSpecifier>({\n    type: \"ExportSpecifier\",\n    local,\n    exported,\n  });\n}\nexport function forOfStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n  _await: boolean = false,\n): t.ForOfStatement {\n  return validateNode<t.ForOfStatement>({\n    type: \"ForOfStatement\",\n    left,\n    right,\n    body,\n    await: _await,\n  });\n}\nexport function importDeclaration(\n  specifiers: Array<\n    t.ImportSpecifier | t.ImportDefaultSpecifier | t.ImportNamespaceSpecifier\n  >,\n  source: t.StringLiteral,\n): t.ImportDeclaration {\n  return validateNode<t.ImportDeclaration>({\n    type: \"ImportDeclaration\",\n    specifiers,\n    source,\n  });\n}\nexport function importDefaultSpecifier(\n  local: t.Identifier,\n): t.ImportDefaultSpecifier {\n  return validateNode<t.ImportDefaultSpecifier>({\n    type: \"ImportDefaultSpecifier\",\n    local,\n  });\n}\nexport function importNamespaceSpecifier(\n  local: t.Identifier,\n): t.ImportNamespaceSpecifier {\n  return validateNode<t.ImportNamespaceSpecifier>({\n    type: \"ImportNamespaceSpecifier\",\n    local,\n  });\n}\nexport function importSpecifier(\n  local: t.Identifier,\n  imported: t.Identifier | t.StringLiteral,\n): t.ImportSpecifier {\n  return validateNode<t.ImportSpecifier>({\n    type: \"ImportSpecifier\",\n    local,\n    imported,\n  });\n}\nexport function importExpression(\n  source: t.Expression,\n  options: t.Expression | null = null,\n): t.ImportExpression {\n  return validateNode<t.ImportExpression>({\n    type: \"ImportExpression\",\n    source,\n    options,\n  });\n}\nexport function metaProperty(\n  meta: t.Identifier,\n  property: t.Identifier,\n): t.MetaProperty {\n  return validateNode<t.MetaProperty>({\n    type: \"MetaProperty\",\n    meta,\n    property,\n  });\n}\nexport function classMethod(\n  kind: \"get\" | \"set\" | \"method\" | \"constructor\" | undefined = \"method\",\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  _static: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ClassMethod {\n  return validateNode<t.ClassMethod>({\n    type: \"ClassMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    static: _static,\n    generator,\n    async,\n  });\n}\nexport function objectPattern(\n  properties: Array<t.RestElement | t.ObjectProperty>,\n): t.ObjectPattern {\n  return validateNode<t.ObjectPattern>({\n    type: \"ObjectPattern\",\n    properties,\n  });\n}\nexport function spreadElement(argument: t.Expression): t.SpreadElement {\n  return validateNode<t.SpreadElement>({\n    type: \"SpreadElement\",\n    argument,\n  });\n}\nfunction _super(): t.Super {\n  return {\n    type: \"Super\",\n  };\n}\nexport { _super as super };\nexport function taggedTemplateExpression(\n  tag: t.Expression,\n  quasi: t.TemplateLiteral,\n): t.TaggedTemplateExpression {\n  return validateNode<t.TaggedTemplateExpression>({\n    type: \"TaggedTemplateExpression\",\n    tag,\n    quasi,\n  });\n}\nexport function templateElement(\n  value: { raw: string; cooked?: string },\n  tail: boolean = false,\n): t.TemplateElement {\n  return validateNode<t.TemplateElement>({\n    type: \"TemplateElement\",\n    value,\n    tail,\n  });\n}\nexport function templateLiteral(\n  quasis: Array<t.TemplateElement>,\n  expressions: Array<t.Expression | t.TSType>,\n): t.TemplateLiteral {\n  return validateNode<t.TemplateLiteral>({\n    type: \"TemplateLiteral\",\n    quasis,\n    expressions,\n  });\n}\nexport function yieldExpression(\n  argument: t.Expression | null = null,\n  delegate: boolean = false,\n): t.YieldExpression {\n  return validateNode<t.YieldExpression>({\n    type: \"YieldExpression\",\n    argument,\n    delegate,\n  });\n}\nexport function awaitExpression(argument: t.Expression): t.AwaitExpression {\n  return validateNode<t.AwaitExpression>({\n    type: \"AwaitExpression\",\n    argument,\n  });\n}\nfunction _import(): t.Import {\n  return {\n    type: \"Import\",\n  };\n}\nexport { _import as import };\nexport function bigIntLiteral(value: string): t.BigIntLiteral {\n  return validateNode<t.BigIntLiteral>({\n    type: \"BigIntLiteral\",\n    value,\n  });\n}\nexport function exportNamespaceSpecifier(\n  exported: t.Identifier,\n): t.ExportNamespaceSpecifier {\n  return validateNode<t.ExportNamespaceSpecifier>({\n    type: \"ExportNamespaceSpecifier\",\n    exported,\n  });\n}\nexport function optionalMemberExpression(\n  object: t.Expression,\n  property: t.Expression | t.Identifier,\n  computed: boolean | undefined = false,\n  optional: boolean,\n): t.OptionalMemberExpression {\n  return validateNode<t.OptionalMemberExpression>({\n    type: \"OptionalMemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  });\n}\nexport function optionalCallExpression(\n  callee: t.Expression,\n  _arguments: Array<\n    t.Expression | t.SpreadElement | t.JSXNamespacedName | t.ArgumentPlaceholder\n  >,\n  optional: boolean,\n): t.OptionalCallExpression {\n  return validateNode<t.OptionalCallExpression>({\n    type: \"OptionalCallExpression\",\n    callee,\n    arguments: _arguments,\n    optional,\n  });\n}\nexport function classProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassProperty {\n  return validateNode<t.ClassProperty>({\n    type: \"ClassProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  });\n}\nexport function classAccessorProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression\n    | t.PrivateName,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassAccessorProperty {\n  return validateNode<t.ClassAccessorProperty>({\n    type: \"ClassAccessorProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  });\n}\nexport function classPrivateProperty(\n  key: t.PrivateName,\n  value: t.Expression | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  _static: boolean = false,\n): t.ClassPrivateProperty {\n  return validateNode<t.ClassPrivateProperty>({\n    type: \"ClassPrivateProperty\",\n    key,\n    value,\n    decorators,\n    static: _static,\n  });\n}\nexport function classPrivateMethod(\n  kind: \"get\" | \"set\" | \"method\" | undefined = \"method\",\n  key: t.PrivateName,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  _static: boolean = false,\n): t.ClassPrivateMethod {\n  return validateNode<t.ClassPrivateMethod>({\n    type: \"ClassPrivateMethod\",\n    kind,\n    key,\n    params,\n    body,\n    static: _static,\n  });\n}\nexport function privateName(id: t.Identifier): t.PrivateName {\n  return validateNode<t.PrivateName>({\n    type: \"PrivateName\",\n    id,\n  });\n}\nexport function staticBlock(body: Array<t.Statement>): t.StaticBlock {\n  return validateNode<t.StaticBlock>({\n    type: \"StaticBlock\",\n    body,\n  });\n}\nexport function anyTypeAnnotation(): t.AnyTypeAnnotation {\n  return {\n    type: \"AnyTypeAnnotation\",\n  };\n}\nexport function arrayTypeAnnotation(\n  elementType: t.FlowType,\n): t.ArrayTypeAnnotation {\n  return validateNode<t.ArrayTypeAnnotation>({\n    type: \"ArrayTypeAnnotation\",\n    elementType,\n  });\n}\nexport function booleanTypeAnnotation(): t.BooleanTypeAnnotation {\n  return {\n    type: \"BooleanTypeAnnotation\",\n  };\n}\nexport function booleanLiteralTypeAnnotation(\n  value: boolean,\n): t.BooleanLiteralTypeAnnotation {\n  return validateNode<t.BooleanLiteralTypeAnnotation>({\n    type: \"BooleanLiteralTypeAnnotation\",\n    value,\n  });\n}\nexport function nullLiteralTypeAnnotation(): t.NullLiteralTypeAnnotation {\n  return {\n    type: \"NullLiteralTypeAnnotation\",\n  };\n}\nexport function classImplements(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.ClassImplements {\n  return validateNode<t.ClassImplements>({\n    type: \"ClassImplements\",\n    id,\n    typeParameters,\n  });\n}\nexport function declareClass(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareClass {\n  return validateNode<t.DeclareClass>({\n    type: \"DeclareClass\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport function declareFunction(id: t.Identifier): t.DeclareFunction {\n  return validateNode<t.DeclareFunction>({\n    type: \"DeclareFunction\",\n    id,\n  });\n}\nexport function declareInterface(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareInterface {\n  return validateNode<t.DeclareInterface>({\n    type: \"DeclareInterface\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport function declareModule(\n  id: t.Identifier | t.StringLiteral,\n  body: t.BlockStatement,\n  kind: \"CommonJS\" | \"ES\" | null = null,\n): t.DeclareModule {\n  return validateNode<t.DeclareModule>({\n    type: \"DeclareModule\",\n    id,\n    body,\n    kind,\n  });\n}\nexport function declareModuleExports(\n  typeAnnotation: t.TypeAnnotation,\n): t.DeclareModuleExports {\n  return validateNode<t.DeclareModuleExports>({\n    type: \"DeclareModuleExports\",\n    typeAnnotation,\n  });\n}\nexport function declareTypeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.DeclareTypeAlias {\n  return validateNode<t.DeclareTypeAlias>({\n    type: \"DeclareTypeAlias\",\n    id,\n    typeParameters,\n    right,\n  });\n}\nexport function declareOpaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null = null,\n  supertype: t.FlowType | null = null,\n): t.DeclareOpaqueType {\n  return validateNode<t.DeclareOpaqueType>({\n    type: \"DeclareOpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n  });\n}\nexport function declareVariable(id: t.Identifier): t.DeclareVariable {\n  return validateNode<t.DeclareVariable>({\n    type: \"DeclareVariable\",\n    id,\n  });\n}\nexport function declareExportDeclaration(\n  declaration: t.Flow | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportNamespaceSpecifier\n  > | null = null,\n  source: t.StringLiteral | null = null,\n): t.DeclareExportDeclaration {\n  return validateNode<t.DeclareExportDeclaration>({\n    type: \"DeclareExportDeclaration\",\n    declaration,\n    specifiers,\n    source,\n  });\n}\nexport function declareExportAllDeclaration(\n  source: t.StringLiteral,\n): t.DeclareExportAllDeclaration {\n  return validateNode<t.DeclareExportAllDeclaration>({\n    type: \"DeclareExportAllDeclaration\",\n    source,\n  });\n}\nexport function declaredPredicate(value: t.Flow): t.DeclaredPredicate {\n  return validateNode<t.DeclaredPredicate>({\n    type: \"DeclaredPredicate\",\n    value,\n  });\n}\nexport function existsTypeAnnotation(): t.ExistsTypeAnnotation {\n  return {\n    type: \"ExistsTypeAnnotation\",\n  };\n}\nexport function functionTypeAnnotation(\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  params: Array<t.FunctionTypeParam>,\n  rest: t.FunctionTypeParam | null | undefined = null,\n  returnType: t.FlowType,\n): t.FunctionTypeAnnotation {\n  return validateNode<t.FunctionTypeAnnotation>({\n    type: \"FunctionTypeAnnotation\",\n    typeParameters,\n    params,\n    rest,\n    returnType,\n  });\n}\nexport function functionTypeParam(\n  name: t.Identifier | null | undefined = null,\n  typeAnnotation: t.FlowType,\n): t.FunctionTypeParam {\n  return validateNode<t.FunctionTypeParam>({\n    type: \"FunctionTypeParam\",\n    name,\n    typeAnnotation,\n  });\n}\nexport function genericTypeAnnotation(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.GenericTypeAnnotation {\n  return validateNode<t.GenericTypeAnnotation>({\n    type: \"GenericTypeAnnotation\",\n    id,\n    typeParameters,\n  });\n}\nexport function inferredPredicate(): t.InferredPredicate {\n  return {\n    type: \"InferredPredicate\",\n  };\n}\nexport function interfaceExtends(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.InterfaceExtends {\n  return validateNode<t.InterfaceExtends>({\n    type: \"InterfaceExtends\",\n    id,\n    typeParameters,\n  });\n}\nexport function interfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceDeclaration {\n  return validateNode<t.InterfaceDeclaration>({\n    type: \"InterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport function interfaceTypeAnnotation(\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceTypeAnnotation {\n  return validateNode<t.InterfaceTypeAnnotation>({\n    type: \"InterfaceTypeAnnotation\",\n    extends: _extends,\n    body,\n  });\n}\nexport function intersectionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.IntersectionTypeAnnotation {\n  return validateNode<t.IntersectionTypeAnnotation>({\n    type: \"IntersectionTypeAnnotation\",\n    types,\n  });\n}\nexport function mixedTypeAnnotation(): t.MixedTypeAnnotation {\n  return {\n    type: \"MixedTypeAnnotation\",\n  };\n}\nexport function emptyTypeAnnotation(): t.EmptyTypeAnnotation {\n  return {\n    type: \"EmptyTypeAnnotation\",\n  };\n}\nexport function nullableTypeAnnotation(\n  typeAnnotation: t.FlowType,\n): t.NullableTypeAnnotation {\n  return validateNode<t.NullableTypeAnnotation>({\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation,\n  });\n}\nexport function numberLiteralTypeAnnotation(\n  value: number,\n): t.NumberLiteralTypeAnnotation {\n  return validateNode<t.NumberLiteralTypeAnnotation>({\n    type: \"NumberLiteralTypeAnnotation\",\n    value,\n  });\n}\nexport function numberTypeAnnotation(): t.NumberTypeAnnotation {\n  return {\n    type: \"NumberTypeAnnotation\",\n  };\n}\nexport function objectTypeAnnotation(\n  properties: Array<t.ObjectTypeProperty | t.ObjectTypeSpreadProperty>,\n  indexers: Array<t.ObjectTypeIndexer> = [],\n  callProperties: Array<t.ObjectTypeCallProperty> = [],\n  internalSlots: Array<t.ObjectTypeInternalSlot> = [],\n  exact: boolean = false,\n): t.ObjectTypeAnnotation {\n  return validateNode<t.ObjectTypeAnnotation>({\n    type: \"ObjectTypeAnnotation\",\n    properties,\n    indexers,\n    callProperties,\n    internalSlots,\n    exact,\n  });\n}\nexport function objectTypeInternalSlot(\n  id: t.Identifier,\n  value: t.FlowType,\n  optional: boolean,\n  _static: boolean,\n  method: boolean,\n): t.ObjectTypeInternalSlot {\n  return validateNode<t.ObjectTypeInternalSlot>({\n    type: \"ObjectTypeInternalSlot\",\n    id,\n    value,\n    optional,\n    static: _static,\n    method,\n  });\n}\nexport function objectTypeCallProperty(\n  value: t.FlowType,\n): t.ObjectTypeCallProperty {\n  return validateNode<t.ObjectTypeCallProperty>({\n    type: \"ObjectTypeCallProperty\",\n    value,\n    static: null,\n  });\n}\nexport function objectTypeIndexer(\n  id: t.Identifier | null | undefined = null,\n  key: t.FlowType,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeIndexer {\n  return validateNode<t.ObjectTypeIndexer>({\n    type: \"ObjectTypeIndexer\",\n    id,\n    key,\n    value,\n    variance,\n    static: null,\n  });\n}\nexport function objectTypeProperty(\n  key: t.Identifier | t.StringLiteral,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeProperty {\n  return validateNode<t.ObjectTypeProperty>({\n    type: \"ObjectTypeProperty\",\n    key,\n    value,\n    variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    static: null,\n  });\n}\nexport function objectTypeSpreadProperty(\n  argument: t.FlowType,\n): t.ObjectTypeSpreadProperty {\n  return validateNode<t.ObjectTypeSpreadProperty>({\n    type: \"ObjectTypeSpreadProperty\",\n    argument,\n  });\n}\nexport function opaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  supertype: t.FlowType | null | undefined = null,\n  impltype: t.FlowType,\n): t.OpaqueType {\n  return validateNode<t.OpaqueType>({\n    type: \"OpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n    impltype,\n  });\n}\nexport function qualifiedTypeIdentifier(\n  id: t.Identifier,\n  qualification: t.Identifier | t.QualifiedTypeIdentifier,\n): t.QualifiedTypeIdentifier {\n  return validateNode<t.QualifiedTypeIdentifier>({\n    type: \"QualifiedTypeIdentifier\",\n    id,\n    qualification,\n  });\n}\nexport function stringLiteralTypeAnnotation(\n  value: string,\n): t.StringLiteralTypeAnnotation {\n  return validateNode<t.StringLiteralTypeAnnotation>({\n    type: \"StringLiteralTypeAnnotation\",\n    value,\n  });\n}\nexport function stringTypeAnnotation(): t.StringTypeAnnotation {\n  return {\n    type: \"StringTypeAnnotation\",\n  };\n}\nexport function symbolTypeAnnotation(): t.SymbolTypeAnnotation {\n  return {\n    type: \"SymbolTypeAnnotation\",\n  };\n}\nexport function thisTypeAnnotation(): t.ThisTypeAnnotation {\n  return {\n    type: \"ThisTypeAnnotation\",\n  };\n}\nexport function tupleTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.TupleTypeAnnotation {\n  return validateNode<t.TupleTypeAnnotation>({\n    type: \"TupleTypeAnnotation\",\n    types,\n  });\n}\nexport function typeofTypeAnnotation(\n  argument: t.FlowType,\n): t.TypeofTypeAnnotation {\n  return validateNode<t.TypeofTypeAnnotation>({\n    type: \"TypeofTypeAnnotation\",\n    argument,\n  });\n}\nexport function typeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.TypeAlias {\n  return validateNode<t.TypeAlias>({\n    type: \"TypeAlias\",\n    id,\n    typeParameters,\n    right,\n  });\n}\nexport function typeAnnotation(typeAnnotation: t.FlowType): t.TypeAnnotation {\n  return validateNode<t.TypeAnnotation>({\n    type: \"TypeAnnotation\",\n    typeAnnotation,\n  });\n}\nexport function typeCastExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TypeAnnotation,\n): t.TypeCastExpression {\n  return validateNode<t.TypeCastExpression>({\n    type: \"TypeCastExpression\",\n    expression,\n    typeAnnotation,\n  });\n}\nexport function typeParameter(\n  bound: t.TypeAnnotation | null = null,\n  _default: t.FlowType | null = null,\n  variance: t.Variance | null = null,\n): t.TypeParameter {\n  return validateNode<t.TypeParameter>({\n    type: \"TypeParameter\",\n    bound,\n    default: _default,\n    variance,\n    name: null,\n  });\n}\nexport function typeParameterDeclaration(\n  params: Array<t.TypeParameter>,\n): t.TypeParameterDeclaration {\n  return validateNode<t.TypeParameterDeclaration>({\n    type: \"TypeParameterDeclaration\",\n    params,\n  });\n}\nexport function typeParameterInstantiation(\n  params: Array<t.FlowType>,\n): t.TypeParameterInstantiation {\n  return validateNode<t.TypeParameterInstantiation>({\n    type: \"TypeParameterInstantiation\",\n    params,\n  });\n}\nexport function unionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.UnionTypeAnnotation {\n  return validateNode<t.UnionTypeAnnotation>({\n    type: \"UnionTypeAnnotation\",\n    types,\n  });\n}\nexport function variance(kind: \"minus\" | \"plus\"): t.Variance {\n  return validateNode<t.Variance>({\n    type: \"Variance\",\n    kind,\n  });\n}\nexport function voidTypeAnnotation(): t.VoidTypeAnnotation {\n  return {\n    type: \"VoidTypeAnnotation\",\n  };\n}\nexport function enumDeclaration(\n  id: t.Identifier,\n  body:\n    | t.EnumBooleanBody\n    | t.EnumNumberBody\n    | t.EnumStringBody\n    | t.EnumSymbolBody,\n): t.EnumDeclaration {\n  return validateNode<t.EnumDeclaration>({\n    type: \"EnumDeclaration\",\n    id,\n    body,\n  });\n}\nexport function enumBooleanBody(\n  members: Array<t.EnumBooleanMember>,\n): t.EnumBooleanBody {\n  return validateNode<t.EnumBooleanBody>({\n    type: \"EnumBooleanBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumNumberBody(\n  members: Array<t.EnumNumberMember>,\n): t.EnumNumberBody {\n  return validateNode<t.EnumNumberBody>({\n    type: \"EnumNumberBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumStringBody(\n  members: Array<t.EnumStringMember | t.EnumDefaultedMember>,\n): t.EnumStringBody {\n  return validateNode<t.EnumStringBody>({\n    type: \"EnumStringBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumSymbolBody(\n  members: Array<t.EnumDefaultedMember>,\n): t.EnumSymbolBody {\n  return validateNode<t.EnumSymbolBody>({\n    type: \"EnumSymbolBody\",\n    members,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumBooleanMember(id: t.Identifier): t.EnumBooleanMember {\n  return validateNode<t.EnumBooleanMember>({\n    type: \"EnumBooleanMember\",\n    id,\n    init: null,\n  });\n}\nexport function enumNumberMember(\n  id: t.Identifier,\n  init: t.NumericLiteral,\n): t.EnumNumberMember {\n  return validateNode<t.EnumNumberMember>({\n    type: \"EnumNumberMember\",\n    id,\n    init,\n  });\n}\nexport function enumStringMember(\n  id: t.Identifier,\n  init: t.StringLiteral,\n): t.EnumStringMember {\n  return validateNode<t.EnumStringMember>({\n    type: \"EnumStringMember\",\n    id,\n    init,\n  });\n}\nexport function enumDefaultedMember(id: t.Identifier): t.EnumDefaultedMember {\n  return validateNode<t.EnumDefaultedMember>({\n    type: \"EnumDefaultedMember\",\n    id,\n  });\n}\nexport function indexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.IndexedAccessType {\n  return validateNode<t.IndexedAccessType>({\n    type: \"IndexedAccessType\",\n    objectType,\n    indexType,\n  });\n}\nexport function optionalIndexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.OptionalIndexedAccessType {\n  return validateNode<t.OptionalIndexedAccessType>({\n    type: \"OptionalIndexedAccessType\",\n    objectType,\n    indexType,\n    optional: null,\n  });\n}\nexport function jsxAttribute(\n  name: t.JSXIdentifier | t.JSXNamespacedName,\n  value:\n    | t.JSXElement\n    | t.JSXFragment\n    | t.StringLiteral\n    | t.JSXExpressionContainer\n    | null = null,\n): t.JSXAttribute {\n  return validateNode<t.JSXAttribute>({\n    type: \"JSXAttribute\",\n    name,\n    value,\n  });\n}\nexport { jsxAttribute as jSXAttribute };\nexport function jsxClosingElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n): t.JSXClosingElement {\n  return validateNode<t.JSXClosingElement>({\n    type: \"JSXClosingElement\",\n    name,\n  });\n}\nexport { jsxClosingElement as jSXClosingElement };\nexport function jsxElement(\n  openingElement: t.JSXOpeningElement,\n  closingElement: t.JSXClosingElement | null | undefined = null,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n  selfClosing: boolean | null = null,\n): t.JSXElement {\n  return validateNode<t.JSXElement>({\n    type: \"JSXElement\",\n    openingElement,\n    closingElement,\n    children,\n    selfClosing,\n  });\n}\nexport { jsxElement as jSXElement };\nexport function jsxEmptyExpression(): t.JSXEmptyExpression {\n  return {\n    type: \"JSXEmptyExpression\",\n  };\n}\nexport { jsxEmptyExpression as jSXEmptyExpression };\nexport function jsxExpressionContainer(\n  expression: t.Expression | t.JSXEmptyExpression,\n): t.JSXExpressionContainer {\n  return validateNode<t.JSXExpressionContainer>({\n    type: \"JSXExpressionContainer\",\n    expression,\n  });\n}\nexport { jsxExpressionContainer as jSXExpressionContainer };\nexport function jsxSpreadChild(expression: t.Expression): t.JSXSpreadChild {\n  return validateNode<t.JSXSpreadChild>({\n    type: \"JSXSpreadChild\",\n    expression,\n  });\n}\nexport { jsxSpreadChild as jSXSpreadChild };\nexport function jsxIdentifier(name: string): t.JSXIdentifier {\n  return validateNode<t.JSXIdentifier>({\n    type: \"JSXIdentifier\",\n    name,\n  });\n}\nexport { jsxIdentifier as jSXIdentifier };\nexport function jsxMemberExpression(\n  object: t.JSXMemberExpression | t.JSXIdentifier,\n  property: t.JSXIdentifier,\n): t.JSXMemberExpression {\n  return validateNode<t.JSXMemberExpression>({\n    type: \"JSXMemberExpression\",\n    object,\n    property,\n  });\n}\nexport { jsxMemberExpression as jSXMemberExpression };\nexport function jsxNamespacedName(\n  namespace: t.JSXIdentifier,\n  name: t.JSXIdentifier,\n): t.JSXNamespacedName {\n  return validateNode<t.JSXNamespacedName>({\n    type: \"JSXNamespacedName\",\n    namespace,\n    name,\n  });\n}\nexport { jsxNamespacedName as jSXNamespacedName };\nexport function jsxOpeningElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n  attributes: Array<t.JSXAttribute | t.JSXSpreadAttribute>,\n  selfClosing: boolean = false,\n): t.JSXOpeningElement {\n  return validateNode<t.JSXOpeningElement>({\n    type: \"JSXOpeningElement\",\n    name,\n    attributes,\n    selfClosing,\n  });\n}\nexport { jsxOpeningElement as jSXOpeningElement };\nexport function jsxSpreadAttribute(\n  argument: t.Expression,\n): t.JSXSpreadAttribute {\n  return validateNode<t.JSXSpreadAttribute>({\n    type: \"JSXSpreadAttribute\",\n    argument,\n  });\n}\nexport { jsxSpreadAttribute as jSXSpreadAttribute };\nexport function jsxText(value: string): t.JSXText {\n  return validateNode<t.JSXText>({\n    type: \"JSXText\",\n    value,\n  });\n}\nexport { jsxText as jSXText };\nexport function jsxFragment(\n  openingFragment: t.JSXOpeningFragment,\n  closingFragment: t.JSXClosingFragment,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n): t.JSXFragment {\n  return validateNode<t.JSXFragment>({\n    type: \"JSXFragment\",\n    openingFragment,\n    closingFragment,\n    children,\n  });\n}\nexport { jsxFragment as jSXFragment };\nexport function jsxOpeningFragment(): t.JSXOpeningFragment {\n  return {\n    type: \"JSXOpeningFragment\",\n  };\n}\nexport { jsxOpeningFragment as jSXOpeningFragment };\nexport function jsxClosingFragment(): t.JSXClosingFragment {\n  return {\n    type: \"JSXClosingFragment\",\n  };\n}\nexport { jsxClosingFragment as jSXClosingFragment };\nexport function noop(): t.Noop {\n  return {\n    type: \"Noop\",\n  };\n}\nexport function placeholder(\n  expectedNode:\n    | \"Identifier\"\n    | \"StringLiteral\"\n    | \"Expression\"\n    | \"Statement\"\n    | \"Declaration\"\n    | \"BlockStatement\"\n    | \"ClassBody\"\n    | \"Pattern\",\n  name: t.Identifier,\n): t.Placeholder {\n  return validateNode<t.Placeholder>({\n    type: \"Placeholder\",\n    expectedNode,\n    name,\n  });\n}\nexport function v8IntrinsicIdentifier(name: string): t.V8IntrinsicIdentifier {\n  return validateNode<t.V8IntrinsicIdentifier>({\n    type: \"V8IntrinsicIdentifier\",\n    name,\n  });\n}\nexport function argumentPlaceholder(): t.ArgumentPlaceholder {\n  return {\n    type: \"ArgumentPlaceholder\",\n  };\n}\nexport function bindExpression(\n  object: t.Expression,\n  callee: t.Expression,\n): t.BindExpression {\n  return validateNode<t.BindExpression>({\n    type: \"BindExpression\",\n    object,\n    callee,\n  });\n}\nexport function importAttribute(\n  key: t.Identifier | t.StringLiteral,\n  value: t.StringLiteral,\n): t.ImportAttribute {\n  return validateNode<t.ImportAttribute>({\n    type: \"ImportAttribute\",\n    key,\n    value,\n  });\n}\nexport function decorator(expression: t.Expression): t.Decorator {\n  return validateNode<t.Decorator>({\n    type: \"Decorator\",\n    expression,\n  });\n}\nexport function doExpression(\n  body: t.BlockStatement,\n  async: boolean = false,\n): t.DoExpression {\n  return validateNode<t.DoExpression>({\n    type: \"DoExpression\",\n    body,\n    async,\n  });\n}\nexport function exportDefaultSpecifier(\n  exported: t.Identifier,\n): t.ExportDefaultSpecifier {\n  return validateNode<t.ExportDefaultSpecifier>({\n    type: \"ExportDefaultSpecifier\",\n    exported,\n  });\n}\nexport function recordExpression(\n  properties: Array<t.ObjectProperty | t.SpreadElement>,\n): t.RecordExpression {\n  return validateNode<t.RecordExpression>({\n    type: \"RecordExpression\",\n    properties,\n  });\n}\nexport function tupleExpression(\n  elements: Array<t.Expression | t.SpreadElement> = [],\n): t.TupleExpression {\n  return validateNode<t.TupleExpression>({\n    type: \"TupleExpression\",\n    elements,\n  });\n}\nexport function decimalLiteral(value: string): t.DecimalLiteral {\n  return validateNode<t.DecimalLiteral>({\n    type: \"DecimalLiteral\",\n    value,\n  });\n}\nexport function moduleExpression(body: t.Program): t.ModuleExpression {\n  return validateNode<t.ModuleExpression>({\n    type: \"ModuleExpression\",\n    body,\n  });\n}\nexport function topicReference(): t.TopicReference {\n  return {\n    type: \"TopicReference\",\n  };\n}\nexport function pipelineTopicExpression(\n  expression: t.Expression,\n): t.PipelineTopicExpression {\n  return validateNode<t.PipelineTopicExpression>({\n    type: \"PipelineTopicExpression\",\n    expression,\n  });\n}\nexport function pipelineBareFunction(\n  callee: t.Expression,\n): t.PipelineBareFunction {\n  return validateNode<t.PipelineBareFunction>({\n    type: \"PipelineBareFunction\",\n    callee,\n  });\n}\nexport function pipelinePrimaryTopicReference(): t.PipelinePrimaryTopicReference {\n  return {\n    type: \"PipelinePrimaryTopicReference\",\n  };\n}\nexport function tsParameterProperty(\n  parameter: t.Identifier | t.AssignmentPattern,\n): t.TSParameterProperty {\n  return validateNode<t.TSParameterProperty>({\n    type: \"TSParameterProperty\",\n    parameter,\n  });\n}\nexport { tsParameterProperty as tSParameterProperty };\nexport function tsDeclareFunction(\n  id: t.Identifier | null | undefined = null,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareFunction {\n  return validateNode<t.TSDeclareFunction>({\n    type: \"TSDeclareFunction\",\n    id,\n    typeParameters,\n    params,\n    returnType,\n  });\n}\nexport { tsDeclareFunction as tSDeclareFunction };\nexport function tsDeclareMethod(\n  decorators: Array<t.Decorator> | null | undefined = null,\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareMethod {\n  return validateNode<t.TSDeclareMethod>({\n    type: \"TSDeclareMethod\",\n    decorators,\n    key,\n    typeParameters,\n    params,\n    returnType,\n  });\n}\nexport { tsDeclareMethod as tSDeclareMethod };\nexport function tsQualifiedName(\n  left: t.TSEntityName,\n  right: t.Identifier,\n): t.TSQualifiedName {\n  return validateNode<t.TSQualifiedName>({\n    type: \"TSQualifiedName\",\n    left,\n    right,\n  });\n}\nexport { tsQualifiedName as tSQualifiedName };\nexport function tsCallSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSCallSignatureDeclaration {\n  return validateNode<t.TSCallSignatureDeclaration>({\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsCallSignatureDeclaration as tSCallSignatureDeclaration };\nexport function tsConstructSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructSignatureDeclaration {\n  return validateNode<t.TSConstructSignatureDeclaration>({\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsConstructSignatureDeclaration as tSConstructSignatureDeclaration };\nexport function tsPropertySignature(\n  key: t.Expression,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSPropertySignature {\n  return validateNode<t.TSPropertySignature>({\n    type: \"TSPropertySignature\",\n    key,\n    typeAnnotation,\n    kind: null,\n  });\n}\nexport { tsPropertySignature as tSPropertySignature };\nexport function tsMethodSignature(\n  key: t.Expression,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSMethodSignature {\n  return validateNode<t.TSMethodSignature>({\n    type: \"TSMethodSignature\",\n    key,\n    typeParameters,\n    parameters,\n    typeAnnotation,\n    kind: null,\n  });\n}\nexport { tsMethodSignature as tSMethodSignature };\nexport function tsIndexSignature(\n  parameters: Array<t.Identifier>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSIndexSignature {\n  return validateNode<t.TSIndexSignature>({\n    type: \"TSIndexSignature\",\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsIndexSignature as tSIndexSignature };\nexport function tsAnyKeyword(): t.TSAnyKeyword {\n  return {\n    type: \"TSAnyKeyword\",\n  };\n}\nexport { tsAnyKeyword as tSAnyKeyword };\nexport function tsBooleanKeyword(): t.TSBooleanKeyword {\n  return {\n    type: \"TSBooleanKeyword\",\n  };\n}\nexport { tsBooleanKeyword as tSBooleanKeyword };\nexport function tsBigIntKeyword(): t.TSBigIntKeyword {\n  return {\n    type: \"TSBigIntKeyword\",\n  };\n}\nexport { tsBigIntKeyword as tSBigIntKeyword };\nexport function tsIntrinsicKeyword(): t.TSIntrinsicKeyword {\n  return {\n    type: \"TSIntrinsicKeyword\",\n  };\n}\nexport { tsIntrinsicKeyword as tSIntrinsicKeyword };\nexport function tsNeverKeyword(): t.TSNeverKeyword {\n  return {\n    type: \"TSNeverKeyword\",\n  };\n}\nexport { tsNeverKeyword as tSNeverKeyword };\nexport function tsNullKeyword(): t.TSNullKeyword {\n  return {\n    type: \"TSNullKeyword\",\n  };\n}\nexport { tsNullKeyword as tSNullKeyword };\nexport function tsNumberKeyword(): t.TSNumberKeyword {\n  return {\n    type: \"TSNumberKeyword\",\n  };\n}\nexport { tsNumberKeyword as tSNumberKeyword };\nexport function tsObjectKeyword(): t.TSObjectKeyword {\n  return {\n    type: \"TSObjectKeyword\",\n  };\n}\nexport { tsObjectKeyword as tSObjectKeyword };\nexport function tsStringKeyword(): t.TSStringKeyword {\n  return {\n    type: \"TSStringKeyword\",\n  };\n}\nexport { tsStringKeyword as tSStringKeyword };\nexport function tsSymbolKeyword(): t.TSSymbolKeyword {\n  return {\n    type: \"TSSymbolKeyword\",\n  };\n}\nexport { tsSymbolKeyword as tSSymbolKeyword };\nexport function tsUndefinedKeyword(): t.TSUndefinedKeyword {\n  return {\n    type: \"TSUndefinedKeyword\",\n  };\n}\nexport { tsUndefinedKeyword as tSUndefinedKeyword };\nexport function tsUnknownKeyword(): t.TSUnknownKeyword {\n  return {\n    type: \"TSUnknownKeyword\",\n  };\n}\nexport { tsUnknownKeyword as tSUnknownKeyword };\nexport function tsVoidKeyword(): t.TSVoidKeyword {\n  return {\n    type: \"TSVoidKeyword\",\n  };\n}\nexport { tsVoidKeyword as tSVoidKeyword };\nexport function tsThisType(): t.TSThisType {\n  return {\n    type: \"TSThisType\",\n  };\n}\nexport { tsThisType as tSThisType };\nexport function tsFunctionType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSFunctionType {\n  return validateNode<t.TSFunctionType>({\n    type: \"TSFunctionType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsFunctionType as tSFunctionType };\nexport function tsConstructorType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructorType {\n  return validateNode<t.TSConstructorType>({\n    type: \"TSConstructorType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsConstructorType as tSConstructorType };\nexport function tsTypeReference(\n  typeName: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeReference {\n  return validateNode<t.TSTypeReference>({\n    type: \"TSTypeReference\",\n    typeName,\n    typeParameters,\n  });\n}\nexport { tsTypeReference as tSTypeReference };\nexport function tsTypePredicate(\n  parameterName: t.Identifier | t.TSThisType,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n  asserts: boolean | null = null,\n): t.TSTypePredicate {\n  return validateNode<t.TSTypePredicate>({\n    type: \"TSTypePredicate\",\n    parameterName,\n    typeAnnotation,\n    asserts,\n  });\n}\nexport { tsTypePredicate as tSTypePredicate };\nexport function tsTypeQuery(\n  exprName: t.TSEntityName | t.TSImportType,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeQuery {\n  return validateNode<t.TSTypeQuery>({\n    type: \"TSTypeQuery\",\n    exprName,\n    typeParameters,\n  });\n}\nexport { tsTypeQuery as tSTypeQuery };\nexport function tsTypeLiteral(\n  members: Array<t.TSTypeElement>,\n): t.TSTypeLiteral {\n  return validateNode<t.TSTypeLiteral>({\n    type: \"TSTypeLiteral\",\n    members,\n  });\n}\nexport { tsTypeLiteral as tSTypeLiteral };\nexport function tsArrayType(elementType: t.TSType): t.TSArrayType {\n  return validateNode<t.TSArrayType>({\n    type: \"TSArrayType\",\n    elementType,\n  });\n}\nexport { tsArrayType as tSArrayType };\nexport function tsTupleType(\n  elementTypes: Array<t.TSType | t.TSNamedTupleMember>,\n): t.TSTupleType {\n  return validateNode<t.TSTupleType>({\n    type: \"TSTupleType\",\n    elementTypes,\n  });\n}\nexport { tsTupleType as tSTupleType };\nexport function tsOptionalType(typeAnnotation: t.TSType): t.TSOptionalType {\n  return validateNode<t.TSOptionalType>({\n    type: \"TSOptionalType\",\n    typeAnnotation,\n  });\n}\nexport { tsOptionalType as tSOptionalType };\nexport function tsRestType(typeAnnotation: t.TSType): t.TSRestType {\n  return validateNode<t.TSRestType>({\n    type: \"TSRestType\",\n    typeAnnotation,\n  });\n}\nexport { tsRestType as tSRestType };\nexport function tsNamedTupleMember(\n  label: t.Identifier,\n  elementType: t.TSType,\n  optional: boolean = false,\n): t.TSNamedTupleMember {\n  return validateNode<t.TSNamedTupleMember>({\n    type: \"TSNamedTupleMember\",\n    label,\n    elementType,\n    optional,\n  });\n}\nexport { tsNamedTupleMember as tSNamedTupleMember };\nexport function tsUnionType(types: Array<t.TSType>): t.TSUnionType {\n  return validateNode<t.TSUnionType>({\n    type: \"TSUnionType\",\n    types,\n  });\n}\nexport { tsUnionType as tSUnionType };\nexport function tsIntersectionType(\n  types: Array<t.TSType>,\n): t.TSIntersectionType {\n  return validateNode<t.TSIntersectionType>({\n    type: \"TSIntersectionType\",\n    types,\n  });\n}\nexport { tsIntersectionType as tSIntersectionType };\nexport function tsConditionalType(\n  checkType: t.TSType,\n  extendsType: t.TSType,\n  trueType: t.TSType,\n  falseType: t.TSType,\n): t.TSConditionalType {\n  return validateNode<t.TSConditionalType>({\n    type: \"TSConditionalType\",\n    checkType,\n    extendsType,\n    trueType,\n    falseType,\n  });\n}\nexport { tsConditionalType as tSConditionalType };\nexport function tsInferType(typeParameter: t.TSTypeParameter): t.TSInferType {\n  return validateNode<t.TSInferType>({\n    type: \"TSInferType\",\n    typeParameter,\n  });\n}\nexport { tsInferType as tSInferType };\nexport function tsParenthesizedType(\n  typeAnnotation: t.TSType,\n): t.TSParenthesizedType {\n  return validateNode<t.TSParenthesizedType>({\n    type: \"TSParenthesizedType\",\n    typeAnnotation,\n  });\n}\nexport { tsParenthesizedType as tSParenthesizedType };\nexport function tsTypeOperator(typeAnnotation: t.TSType): t.TSTypeOperator {\n  return validateNode<t.TSTypeOperator>({\n    type: \"TSTypeOperator\",\n    typeAnnotation,\n    operator: null,\n  });\n}\nexport { tsTypeOperator as tSTypeOperator };\nexport function tsIndexedAccessType(\n  objectType: t.TSType,\n  indexType: t.TSType,\n): t.TSIndexedAccessType {\n  return validateNode<t.TSIndexedAccessType>({\n    type: \"TSIndexedAccessType\",\n    objectType,\n    indexType,\n  });\n}\nexport { tsIndexedAccessType as tSIndexedAccessType };\nexport function tsMappedType(\n  typeParameter: t.TSTypeParameter,\n  typeAnnotation: t.TSType | null = null,\n  nameType: t.TSType | null = null,\n): t.TSMappedType {\n  return validateNode<t.TSMappedType>({\n    type: \"TSMappedType\",\n    typeParameter,\n    typeAnnotation,\n    nameType,\n  });\n}\nexport { tsMappedType as tSMappedType };\nexport function tsLiteralType(\n  literal:\n    | t.NumericLiteral\n    | t.StringLiteral\n    | t.BooleanLiteral\n    | t.BigIntLiteral\n    | t.TemplateLiteral\n    | t.UnaryExpression,\n): t.TSLiteralType {\n  return validateNode<t.TSLiteralType>({\n    type: \"TSLiteralType\",\n    literal,\n  });\n}\nexport { tsLiteralType as tSLiteralType };\nexport function tsExpressionWithTypeArguments(\n  expression: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSExpressionWithTypeArguments {\n  return validateNode<t.TSExpressionWithTypeArguments>({\n    type: \"TSExpressionWithTypeArguments\",\n    expression,\n    typeParameters,\n  });\n}\nexport { tsExpressionWithTypeArguments as tSExpressionWithTypeArguments };\nexport function tsInterfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.TSExpressionWithTypeArguments> | null | undefined = null,\n  body: t.TSInterfaceBody,\n): t.TSInterfaceDeclaration {\n  return validateNode<t.TSInterfaceDeclaration>({\n    type: \"TSInterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport { tsInterfaceDeclaration as tSInterfaceDeclaration };\nexport function tsInterfaceBody(\n  body: Array<t.TSTypeElement>,\n): t.TSInterfaceBody {\n  return validateNode<t.TSInterfaceBody>({\n    type: \"TSInterfaceBody\",\n    body,\n  });\n}\nexport { tsInterfaceBody as tSInterfaceBody };\nexport function tsTypeAliasDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  typeAnnotation: t.TSType,\n): t.TSTypeAliasDeclaration {\n  return validateNode<t.TSTypeAliasDeclaration>({\n    type: \"TSTypeAliasDeclaration\",\n    id,\n    typeParameters,\n    typeAnnotation,\n  });\n}\nexport { tsTypeAliasDeclaration as tSTypeAliasDeclaration };\nexport function tsInstantiationExpression(\n  expression: t.Expression,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSInstantiationExpression {\n  return validateNode<t.TSInstantiationExpression>({\n    type: \"TSInstantiationExpression\",\n    expression,\n    typeParameters,\n  });\n}\nexport { tsInstantiationExpression as tSInstantiationExpression };\nexport function tsAsExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TSType,\n): t.TSAsExpression {\n  return validateNode<t.TSAsExpression>({\n    type: \"TSAsExpression\",\n    expression,\n    typeAnnotation,\n  });\n}\nexport { tsAsExpression as tSAsExpression };\nexport function tsSatisfiesExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TSType,\n): t.TSSatisfiesExpression {\n  return validateNode<t.TSSatisfiesExpression>({\n    type: \"TSSatisfiesExpression\",\n    expression,\n    typeAnnotation,\n  });\n}\nexport { tsSatisfiesExpression as tSSatisfiesExpression };\nexport function tsTypeAssertion(\n  typeAnnotation: t.TSType,\n  expression: t.Expression,\n): t.TSTypeAssertion {\n  return validateNode<t.TSTypeAssertion>({\n    type: \"TSTypeAssertion\",\n    typeAnnotation,\n    expression,\n  });\n}\nexport { tsTypeAssertion as tSTypeAssertion };\nexport function tsEnumDeclaration(\n  id: t.Identifier,\n  members: Array<t.TSEnumMember>,\n): t.TSEnumDeclaration {\n  return validateNode<t.TSEnumDeclaration>({\n    type: \"TSEnumDeclaration\",\n    id,\n    members,\n  });\n}\nexport { tsEnumDeclaration as tSEnumDeclaration };\nexport function tsEnumMember(\n  id: t.Identifier | t.StringLiteral,\n  initializer: t.Expression | null = null,\n): t.TSEnumMember {\n  return validateNode<t.TSEnumMember>({\n    type: \"TSEnumMember\",\n    id,\n    initializer,\n  });\n}\nexport { tsEnumMember as tSEnumMember };\nexport function tsModuleDeclaration(\n  id: t.Identifier | t.StringLiteral,\n  body: t.TSModuleBlock | t.TSModuleDeclaration,\n): t.TSModuleDeclaration {\n  return validateNode<t.TSModuleDeclaration>({\n    type: \"TSModuleDeclaration\",\n    id,\n    body,\n  });\n}\nexport { tsModuleDeclaration as tSModuleDeclaration };\nexport function tsModuleBlock(body: Array<t.Statement>): t.TSModuleBlock {\n  return validateNode<t.TSModuleBlock>({\n    type: \"TSModuleBlock\",\n    body,\n  });\n}\nexport { tsModuleBlock as tSModuleBlock };\nexport function tsImportType(\n  argument: t.StringLiteral,\n  qualifier: t.TSEntityName | null = null,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSImportType {\n  return validateNode<t.TSImportType>({\n    type: \"TSImportType\",\n    argument,\n    qualifier,\n    typeParameters,\n  });\n}\nexport { tsImportType as tSImportType };\nexport function tsImportEqualsDeclaration(\n  id: t.Identifier,\n  moduleReference: t.TSEntityName | t.TSExternalModuleReference,\n): t.TSImportEqualsDeclaration {\n  return validateNode<t.TSImportEqualsDeclaration>({\n    type: \"TSImportEqualsDeclaration\",\n    id,\n    moduleReference,\n    isExport: null,\n  });\n}\nexport { tsImportEqualsDeclaration as tSImportEqualsDeclaration };\nexport function tsExternalModuleReference(\n  expression: t.StringLiteral,\n): t.TSExternalModuleReference {\n  return validateNode<t.TSExternalModuleReference>({\n    type: \"TSExternalModuleReference\",\n    expression,\n  });\n}\nexport { tsExternalModuleReference as tSExternalModuleReference };\nexport function tsNonNullExpression(\n  expression: t.Expression,\n): t.TSNonNullExpression {\n  return validateNode<t.TSNonNullExpression>({\n    type: \"TSNonNullExpression\",\n    expression,\n  });\n}\nexport { tsNonNullExpression as tSNonNullExpression };\nexport function tsExportAssignment(\n  expression: t.Expression,\n): t.TSExportAssignment {\n  return validateNode<t.TSExportAssignment>({\n    type: \"TSExportAssignment\",\n    expression,\n  });\n}\nexport { tsExportAssignment as tSExportAssignment };\nexport function tsNamespaceExportDeclaration(\n  id: t.Identifier,\n): t.TSNamespaceExportDeclaration {\n  return validateNode<t.TSNamespaceExportDeclaration>({\n    type: \"TSNamespaceExportDeclaration\",\n    id,\n  });\n}\nexport { tsNamespaceExportDeclaration as tSNamespaceExportDeclaration };\nexport function tsTypeAnnotation(typeAnnotation: t.TSType): t.TSTypeAnnotation {\n  return validateNode<t.TSTypeAnnotation>({\n    type: \"TSTypeAnnotation\",\n    typeAnnotation,\n  });\n}\nexport { tsTypeAnnotation as tSTypeAnnotation };\nexport function tsTypeParameterInstantiation(\n  params: Array<t.TSType>,\n): t.TSTypeParameterInstantiation {\n  return validateNode<t.TSTypeParameterInstantiation>({\n    type: \"TSTypeParameterInstantiation\",\n    params,\n  });\n}\nexport { tsTypeParameterInstantiation as tSTypeParameterInstantiation };\nexport function tsTypeParameterDeclaration(\n  params: Array<t.TSTypeParameter>,\n): t.TSTypeParameterDeclaration {\n  return validateNode<t.TSTypeParameterDeclaration>({\n    type: \"TSTypeParameterDeclaration\",\n    params,\n  });\n}\nexport { tsTypeParameterDeclaration as tSTypeParameterDeclaration };\nexport function tsTypeParameter(\n  constraint: t.TSType | null | undefined = null,\n  _default: t.TSType | null | undefined = null,\n  name: string,\n): t.TSTypeParameter {\n  return validateNode<t.TSTypeParameter>({\n    type: \"TSTypeParameter\",\n    constraint,\n    default: _default,\n    name,\n  });\n}\nexport { tsTypeParameter as tSTypeParameter };\n/** @deprecated */\nfunction NumberLiteral(value: number) {\n  deprecationWarning(\"NumberLiteral\", \"NumericLiteral\", \"The node type \");\n  return numericLiteral(value);\n}\nexport { NumberLiteral as numberLiteral };\n/** @deprecated */\nfunction RegexLiteral(pattern: string, flags: string = \"\") {\n  deprecationWarning(\"RegexLiteral\", \"RegExpLiteral\", \"The node type \");\n  return regExpLiteral(pattern, flags);\n}\nexport { RegexLiteral as regexLiteral };\n/** @deprecated */\nfunction RestProperty(argument: t.LVal) {\n  deprecationWarning(\"RestProperty\", \"RestElement\", \"The node type \");\n  return restElement(argument);\n}\nexport { RestProperty as restProperty };\n/** @deprecated */\nfunction SpreadProperty(argument: t.Expression) {\n  deprecationWarning(\"SpreadProperty\", \"SpreadElement\", \"The node type \");\n  return spreadElement(argument);\n}\nexport { SpreadProperty as spreadProperty };\n",null,"import validate from \"../validators/validate.ts\";\nimport type * as t from \"../index.ts\";\nimport { BUILDER_KEYS } from \"../index.ts\";\n\nexport default function validateNode<N extends t.Node>(node: N) {\n  // todo: because keys not in BUILDER_KEYS are not validated - this actually allows invalid nodes in some cases\n  const keys = BUILDER_KEYS[node.type] as (keyof N & string)[];\n  for (const key of keys) {\n    validate(node, key, node[key]);\n  }\n  return node;\n}\n",null,"import {\n  NODE_FIELDS,\n  NODE_PARENT_VALIDATIONS,\n  type FieldOptions,\n} from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function validate(\n  node: t.Node | undefined | null,\n  key: string,\n  val: any,\n): void {\n  if (!node) return;\n\n  const fields = NODE_FIELDS[node.type];\n  if (!fields) return;\n\n  const field = fields[key];\n  validateField(node, key, val, field);\n  validateChild(node, key, val);\n}\n\nexport function validateField(\n  node: t.Node | undefined | null,\n  key: string,\n  val: any,\n  field: FieldOptions | undefined | null,\n): void {\n  if (!field?.validate) return;\n  if (field.optional && val == null) return;\n\n  field.validate(node, key, val);\n}\n\nexport function validateChild(\n  node: t.Node | undefined | null,\n  key: string,\n  val?: t.Node | undefined | null,\n) {\n  if (val == null) return;\n  const validate = NODE_PARENT_VALIDATIONS[val.type];\n  if (!validate) return;\n  validate(node, key, val);\n}\n",null,"import toFastProperties from \"to-fast-properties\";\nimport \"./core.ts\";\nimport \"./flow.ts\";\nimport \"./jsx.ts\";\nimport \"./misc.ts\";\nimport \"./experimental.ts\";\nimport \"./typescript.ts\";\nimport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n} from \"./utils.ts\";\nimport {\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n} from \"./placeholders.ts\";\nimport { DEPRECATED_ALIASES } from \"./deprecated-aliases.ts\";\n\n(\n  Object.keys(DEPRECATED_ALIASES) as (keyof typeof DEPRECATED_ALIASES)[]\n).forEach(deprecatedAlias => {\n  FLIPPED_ALIAS_KEYS[deprecatedAlias] =\n    FLIPPED_ALIAS_KEYS[DEPRECATED_ALIASES[deprecatedAlias]];\n});\n\n// We do this here, because at this point the visitor keys should be ready and setup\ntoFastProperties(VISITOR_KEYS);\ntoFastProperties(ALIAS_KEYS);\ntoFastProperties(FLIPPED_ALIAS_KEYS);\ntoFastProperties(NODE_FIELDS);\ntoFastProperties(BUILDER_KEYS);\ntoFastProperties(DEPRECATED_KEYS);\n\ntoFastProperties(PLACEHOLDERS_ALIAS);\ntoFastProperties(PLACEHOLDERS_FLIPPED_ALIAS);\n\nconst TYPES: Array<string> = [].concat(\n  Object.keys(VISITOR_KEYS),\n  Object.keys(FLIPPED_ALIAS_KEYS),\n  Object.keys(DEPRECATED_KEYS),\n);\n\nexport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_ALIASES,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n  TYPES,\n};\n\nexport type { FieldOptions } from \"./utils.ts\";\n","'use strict';\n\nlet fastProto = null;\n\n// Creates an object with permanently fast properties in V8. See Toon Verwaest's\n// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62\n// for more details. Use %HasFastProperties(object) and the Node.js flag\n// --allow-natives-syntax to check whether an object has fast properties.\nfunction FastObject(o) {\n\t// A prototype object will have \"fast properties\" enabled once it is checked\n\t// against the inline property cache of a function, e.g. fastProto.property:\n\t// https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63\n\tif (fastProto !== null && typeof fastProto.property) {\n\t\tconst result = fastProto;\n\t\tfastProto = FastObject.prototype = null;\n\t\treturn result;\n\t}\n\tfastProto = FastObject.prototype = o == null ? Object.create(null) : o;\n\treturn new FastObject;\n}\n\n// Initialize the inline property cache of FastObject\nFastObject();\n\nmodule.exports = function toFastproperties(o) {\n\treturn FastObject(o);\n};\n",null,"import is from \"../validators/is.ts\";\nimport isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport { isKeyword, isReservedWord } from \"@babel/helper-validator-identifier\";\nimport type * as t from \"../index.ts\";\nimport { readStringContents } from \"@babel/helper-string-parser\";\n\nimport {\n  BINARY_OPERATORS,\n  LOGICAL_OPERATORS,\n  ASSIGNMENT_OPERATORS,\n  UNARY_OPERATORS,\n  UPDATE_OPERATORS,\n} from \"../constants/index.ts\";\n\nimport {\n  defineAliasedType,\n  assertShape,\n  assertOptionalChainStart,\n  assertValueType,\n  assertNodeType,\n  assertNodeOrValueType,\n  assertEach,\n  chain,\n  assertOneOf,\n  validateOptional,\n  type Validator,\n} from \"./utils.ts\";\n\nconst defineType = defineAliasedType(\"Standardized\");\n\ndefineType(\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeOrValueType(\"null\", \"Expression\", \"SpreadElement\"),\n        ),\n      ),\n      default: !process.env.BABEL_TYPES_8_BREAKING ? [] : undefined,\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate: (function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return assertValueType(\"string\");\n        }\n\n        const identifier = assertOneOf(...ASSIGNMENT_OPERATORS);\n        const pattern = assertOneOf(\"=\");\n\n        return function (node: t.AssignmentExpression, key, val) {\n          const validator = is(\"Pattern\", node.left) ? pattern : identifier;\n          validator(node, key, val);\n        };\n      })(),\n    },\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"LVal\", \"OptionalMemberExpression\")\n        : assertNodeType(\n            \"Identifier\",\n            \"MemberExpression\",\n            \"OptionalMemberExpression\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"TSAsExpression\",\n            \"TSSatisfiesExpression\",\n            \"TSTypeAssertion\",\n            \"TSNonNullExpression\",\n          ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...BINARY_OPERATORS),\n    },\n    left: {\n      validate: (function () {\n        const expression = assertNodeType(\"Expression\");\n        const inOp = assertNodeType(\"Expression\", \"PrivateName\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.BinaryExpression, key, val) {\n            const validator = node.operator === \"in\" ? inOp : expression;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `operator` property\n          { oneOfNodeTypes: [\"Expression\", \"PrivateName\"] },\n        );\n        return validator;\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n});\n\ndefineType(\"InterpreterDirective\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: assertNodeType(\"DirectiveLiteral\"),\n    },\n  },\n});\n\ndefineType(\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Directive\")),\n      ),\n      default: [],\n    },\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"],\n});\n\ndefineType(\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"CallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\", \"Super\", \"V8IntrinsicIdentifier\"),\n    },\n    arguments: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            \"SpreadElement\",\n            \"JSXNamespacedName\",\n            \"ArgumentPlaceholder\",\n          ),\n        ),\n      ),\n    },\n    ...(!process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          optional: {\n            validate: assertOneOf(true, false),\n            optional: true,\n          },\n        }\n      : {}),\n    typeArguments: {\n      validate: assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    typeParameters: {\n      validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: assertNodeType(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\"],\n});\n\ndefineType(\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    alternate: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\", \"Conditional\"],\n});\n\ndefineType(\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"DebuggerStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"DoWhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n});\n\ndefineType(\"EmptyStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"],\n});\n\ndefineType(\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: assertNodeType(\"Program\"),\n    },\n    comments: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? Object.assign(() => {}, {\n            each: { oneOfNodeTypes: [\"CommentBlock\", \"CommentLine\"] },\n          })\n        : assertEach(assertNodeType(\"CommentBlock\", \"CommentLine\")),\n      optional: true,\n    },\n    tokens: {\n      // todo(ts): add Token type\n      validate: assertEach(Object.assign(() => {}, { type: \"any\" })),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"VariableDeclaration\", \"LVal\")\n        : assertNodeType(\n            \"VariableDeclaration\",\n            \"Identifier\",\n            \"MemberExpression\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"TSAsExpression\",\n            \"TSSatisfiesExpression\",\n            \"TSTypeAssertion\",\n            \"TSNonNullExpression\",\n          ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: assertNodeType(\"VariableDeclaration\", \"Expression\"),\n      optional: true,\n    },\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    update: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\nexport const functionCommon = () => ({\n  params: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(assertNodeType(\"Identifier\", \"Pattern\", \"RestElement\")),\n    ),\n  },\n  generator: {\n    default: false,\n  },\n  async: {\n    default: false,\n  },\n});\n\nexport const functionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\")\n      : assertNodeType(\n          \"TypeParameterDeclaration\",\n          \"TSTypeParameterDeclaration\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n});\n\nexport const functionDeclarationCommon = () => ({\n  ...functionCommon(),\n  declare: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  id: {\n    validate: assertNodeType(\"Identifier\"),\n    optional: true, // May be null for `export default function`\n  },\n});\n\ndefineType(\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\"id\", \"params\", \"body\", \"returnType\", \"typeParameters\"],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Statement\",\n    \"Pureish\",\n    \"Declaration\",\n  ],\n  validate: (function () {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return () => {};\n\n    const identifier = assertNodeType(\"Identifier\");\n\n    return function (parent, key, node) {\n      if (!is(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  })(),\n});\n\ndefineType(\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\nexport const patternLikeCommon = () => ({\n  typeAnnotation: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  optional: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  decorators: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(assertNodeType(\"Decorator\")),\n    ),\n    optional: true,\n  },\n});\n\ndefineType(\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\", \"decorators\" /* for legacy param decorators */],\n  aliases: [\"Expression\", \"PatternLike\", \"LVal\", \"TSEntityName\"],\n  fields: {\n    ...patternLikeCommon(),\n    name: {\n      validate: chain(\n        assertValueType(\"string\"),\n        Object.assign(\n          function (node, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            if (!isValidIdentifier(val, false)) {\n              throw new TypeError(`\"${val}\" is not a valid identifier name`);\n            }\n          } as Validator,\n          { type: \"string\" },\n        ),\n      ),\n    },\n  },\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n    const match = /\\.(\\w+)$/.exec(key);\n    if (!match) return;\n\n    const [, parentKey] = match;\n    const nonComp = { computed: false };\n\n    // We can't check if `parent.property === node`, because nodes are validated\n    // before replacing them in the AST.\n    if (parentKey === \"property\") {\n      if (is(\"MemberExpression\", parent, nonComp)) return;\n      if (is(\"OptionalMemberExpression\", parent, nonComp)) return;\n    } else if (parentKey === \"key\") {\n      if (is(\"Property\", parent, nonComp)) return;\n      if (is(\"Method\", parent, nonComp)) return;\n    } else if (parentKey === \"exported\") {\n      if (is(\"ExportSpecifier\", parent)) return;\n    } else if (parentKey === \"imported\") {\n      if (is(\"ImportSpecifier\", parent, { imported: node })) return;\n    } else if (parentKey === \"meta\") {\n      if (is(\"MetaProperty\", parent, { meta: node })) return;\n    }\n\n    if (\n      // Ideally we should call isStrictReservedWord if this node is a descendant\n      // of a block in strict mode. Also, we should pass the inModule option so\n      // we can disable \"await\" in module.\n      (isKeyword(node.name) || isReservedWord(node.name, false)) &&\n      // Even if \"this\" is a keyword, we are using the Identifier\n      // node to represent it.\n      node.name !== \"this\"\n    ) {\n      throw new TypeError(`\"${node.name}\" is not a valid identifier`);\n    }\n  },\n});\n\ndefineType(\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    alternate: {\n      optional: true,\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: chain(\n        assertValueType(\"number\"),\n        Object.assign(\n          function (node, key, val) {\n            if (1 / val < 0 || !Number.isFinite(val)) {\n              const error = new Error(\n                \"NumericLiterals must be non-negative finite numbers. \" +\n                  `You can use t.valueToNode(${val}) instead.`,\n              );\n              if (process.env.BABEL_8_BREAKING) {\n                // TODO(@nicolo-ribaudo) Fix regenerator to not pass negative\n                // numbers here.\n                if (!IS_STANDALONE) {\n                  if (!new Error().stack.includes(\"regenerator\")) {\n                    throw error;\n                  }\n                }\n              } else {\n                // TODO: Enable this warning once regenerator is fixed.\n                // https://github.com/facebook/regenerator/pull/680\n                // console.warn(error);\n              }\n            }\n          } satisfies Validator,\n          { type: \"number\" },\n        ),\n      ),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"boolean\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Pureish\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: assertValueType(\"string\"),\n    },\n    flags: {\n      validate: chain(\n        assertValueType(\"string\"),\n        Object.assign(\n          function (node, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            const invalid = /[^gimsuy]/.exec(val);\n            if (invalid) {\n              throw new TypeError(`\"${invalid[0]}\" is not a valid RegExp flag`);\n            }\n          } as Validator,\n          { type: \"string\" },\n        ),\n      ),\n      default: \"\",\n    },\n  },\n});\n\ndefineType(\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...LOGICAL_OPERATORS),\n    },\n    left: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"MemberExpression\", {\n  builder: [\n    \"object\",\n    \"property\",\n    \"computed\",\n    ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"optional\"] : []),\n  ],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\", \"Super\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\", \"PrivateName\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (\n          node: t.MemberExpression,\n          key,\n          val,\n        ) {\n          const validator: Validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"PrivateName\"];\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    ...(!process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          optional: {\n            validate: assertOneOf(true, false),\n            optional: true,\n          },\n        }\n      : {}),\n  },\n});\n\ndefineType(\"NewExpression\", { inherits: \"CallExpression\" });\n\ndefineType(\"Program\", {\n  // Note: We explicitly leave 'interpreter' out here because it is\n  // conceptually comment-like, and Babel does not traverse comments either.\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\", \"sourceType\", \"interpreter\"],\n  fields: {\n    sourceType: {\n      validate: assertOneOf(\"script\", \"module\"),\n      default: \"script\",\n    },\n    interpreter: {\n      validate: assertNodeType(\"InterpreterDirective\"),\n      default: null,\n      optional: true,\n    },\n    directives: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Directive\")),\n      ),\n      default: [],\n    },\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\"],\n});\n\ndefineType(\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\"ObjectMethod\", \"ObjectProperty\", \"SpreadElement\"),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"generator\", \"async\"],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n      ...(!process.env.BABEL_TYPES_8_BREAKING ? { default: \"method\" } : {}),\n    },\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (node: t.ObjectMethod, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\n          \"Expression\",\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        ];\n        return validator;\n      })(),\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  visitor: [\n    \"key\",\n    \"params\",\n    \"body\",\n    \"decorators\",\n    \"returnType\",\n    \"typeParameters\",\n  ],\n  aliases: [\n    \"UserWhitespacable\",\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"ObjectMember\",\n  ],\n});\n\ndefineType(\"ObjectProperty\", {\n  builder: [\n    \"key\",\n    \"value\",\n    \"computed\",\n    \"shorthand\",\n    ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"decorators\"] : []),\n  ],\n  fields: {\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n          \"DecimalLiteral\",\n          \"PrivateName\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.ObjectProperty, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          {\n            // todo(ts): can be discriminated union by `computed` property\n            oneOfNodeTypes: [\n              \"Expression\",\n              \"Identifier\",\n              \"StringLiteral\",\n              \"NumericLiteral\",\n              \"BigIntLiteral\",\n              \"DecimalLiteral\",\n              \"PrivateName\",\n            ],\n          },\n        );\n        return validator;\n      })(),\n    },\n    value: {\n      // Value may be PatternLike if this is an AssignmentProperty\n      // https://github.com/babel/babylon/issues/434\n      validate: assertNodeType(\"Expression\", \"PatternLike\"),\n    },\n    shorthand: {\n      validate: chain(\n        assertValueType(\"boolean\"),\n        Object.assign(\n          function (node: t.ObjectProperty, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            if (val && node.computed) {\n              throw new TypeError(\n                \"Property shorthand of ObjectProperty cannot be true if computed is true\",\n              );\n            }\n          } as Validator,\n          { type: \"boolean\" },\n        ),\n        function (node: t.ObjectProperty, key, val) {\n          if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n          if (val && !is(\"Identifier\", node.key)) {\n            throw new TypeError(\n              \"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\",\n            );\n          }\n        } as Validator,\n      ),\n      default: false,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"],\n  validate: (function () {\n    const pattern = assertNodeType(\n      \"Identifier\",\n      \"Pattern\",\n      \"TSAsExpression\",\n      \"TSSatisfiesExpression\",\n      \"TSNonNullExpression\",\n      \"TSTypeAssertion\",\n    );\n    const expression = assertNodeType(\"Expression\");\n\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n      const validator = is(\"ObjectPattern\", parent) ? pattern : expression;\n      validator(node, \"value\", node.value);\n    };\n  })(),\n});\n\ndefineType(\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  builder: [\"argument\"],\n  aliases: [\"LVal\", \"PatternLike\"],\n  deprecatedAlias: \"RestProperty\",\n  fields: {\n    ...patternLikeCommon(),\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"LVal\")\n        : assertNodeType(\n            \"Identifier\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"MemberExpression\",\n            \"TSAsExpression\",\n            \"TSSatisfiesExpression\",\n            \"TSTypeAssertion\",\n            \"TSNonNullExpression\",\n          ),\n    },\n  },\n  validate(parent: t.ArrayPattern | t.ObjectPattern, key) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n    const match = /(\\w+)\\[(\\d+)\\]/.exec(key);\n    if (!match) throw new Error(\"Internal Babel error: malformed key.\");\n\n    const [, listKey, index] = match as unknown as [\n      string,\n      keyof typeof parent,\n      string,\n    ];\n    if ((parent[listKey] as t.Node[]).length > +index + 1) {\n      throw new TypeError(`RestElement must be last element of ${listKey}`);\n    }\n  },\n});\n\ndefineType(\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Expression\")),\n      ),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"ParenthesizedExpression\", {\n  visitor: [\"expression\"],\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    consequent: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    cases: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"SwitchCase\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ThisExpression\", {\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    block: {\n      validate: chain(\n        assertNodeType(\"BlockStatement\"),\n        Object.assign(\n          function (node: t.TryStatement) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            // This validator isn't put at the top level because we can run it\n            // even if this node doesn't have a parent.\n\n            if (!node.handler && !node.finalizer) {\n              throw new TypeError(\n                \"TryStatement expects either a handler or finalizer, or both\",\n              );\n            }\n          } as Validator,\n          {\n            oneOfNodeTypes: [\"BlockStatement\"],\n          },\n        ),\n      ),\n    },\n    handler: {\n      optional: true,\n      validate: assertNodeType(\"CatchClause\"),\n    },\n    finalizer: {\n      optional: true,\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: true,\n    },\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UNARY_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"],\n});\n\ndefineType(\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: false,\n    },\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"Expression\")\n        : assertNodeType(\"Identifier\", \"MemberExpression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UPDATE_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    kind: {\n      validate: assertOneOf(\n        \"var\",\n        \"let\",\n        \"const\",\n        // https://github.com/tc39/proposal-explicit-resource-management\n        \"using\",\n        // https://github.com/tc39/proposal-async-explicit-resource-management\n        \"await using\",\n      ),\n    },\n    declarations: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"VariableDeclarator\")),\n      ),\n    },\n  },\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n    if (!is(\"ForXStatement\", parent, { left: node })) return;\n    if (node.declarations.length !== 1) {\n      throw new TypeError(\n        `Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`,\n      );\n    }\n  },\n});\n\ndefineType(\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate: (function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return assertNodeType(\"LVal\");\n        }\n\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"ArrayPattern\",\n          \"ObjectPattern\",\n        );\n        const without = assertNodeType(\"Identifier\");\n\n        return function (node: t.VariableDeclarator, key, val) {\n          const validator = node.init ? normal : without;\n          validator(node, key, val);\n        };\n      })(),\n    },\n    definite: {\n      optional: true,\n      validate: assertValueType(\"boolean\"),\n    },\n    init: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\n// --- ES2015 ---\ndefineType(\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\", \"decorators\" /* for legacy param decorators */],\n  builder: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    left: {\n      validate: assertNodeType(\n        \"Identifier\",\n        \"ObjectPattern\",\n        \"ArrayPattern\",\n        \"MemberExpression\",\n        \"TSAsExpression\",\n        \"TSSatisfiesExpression\",\n        \"TSTypeAssertion\",\n        \"TSNonNullExpression\",\n      ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    // For TypeScript\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  builder: [\"elements\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeOrValueType(\"null\", \"PatternLike\", \"LVal\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"params\", \"body\", \"returnType\", \"typeParameters\"],\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    expression: {\n      // https://github.com/babel/babylon/issues/505\n      validate: assertValueType(\"boolean\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\", \"Expression\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"ClassMethod\",\n            \"ClassPrivateMethod\",\n            \"ClassProperty\",\n            \"ClassPrivateProperty\",\n            \"ClassAccessorProperty\",\n            \"TSDeclareMethod\",\n            \"TSIndexSignature\",\n            \"StaticBlock\",\n          ),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"ClassExpression\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\n    \"id\",\n    \"body\",\n    \"superClass\",\n    \"mixins\",\n    \"typeParameters\",\n    \"superTypeParameters\",\n    \"implements\",\n    \"decorators\",\n  ],\n  aliases: [\"Scopable\", \"Class\", \"Expression\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    superTypeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\"TSExpressionWithTypeArguments\", \"ClassImplements\"),\n        ),\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassDeclaration\", {\n  inherits: \"ClassExpression\",\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      // The id may be omitted if this is the child of an\n      // ExportDefaultDeclaration.\n      optional: true,\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    superTypeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\"TSExpressionWithTypeArguments\", \"ClassImplements\"),\n        ),\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    abstract: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n  },\n  validate: (function () {\n    const identifier = assertNodeType(\"Identifier\");\n\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n      if (!is(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  })(),\n});\n\ndefineType(\"ExportAllDeclaration\", {\n  builder: [\"source\"],\n  visitor: [\"source\", \"attributes\", \"assertions\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n    attributes: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    // TODO(Babel 8): Deprecated\n    assertions: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: {\n      validate: assertNodeType(\n        \"TSDeclareFunction\",\n        \"FunctionDeclaration\",\n        \"ClassDeclaration\",\n        \"Expression\",\n      ),\n    },\n    exportKind: validateOptional(assertOneOf(\"value\")),\n  },\n});\n\ndefineType(\"ExportNamedDeclaration\", {\n  builder: [\"declaration\", \"specifiers\", \"source\"],\n  visitor: [\"declaration\", \"specifiers\", \"source\", \"attributes\", \"assertions\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: {\n      optional: true,\n      validate: chain(\n        assertNodeType(\"Declaration\"),\n        Object.assign(\n          function (node: t.ExportNamedDeclaration, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            // This validator isn't put at the top level because we can run it\n            // even if this node doesn't have a parent.\n\n            if (val && node.specifiers.length) {\n              throw new TypeError(\n                \"Only declaration or specifiers is allowed on ExportNamedDeclaration\",\n              );\n            }\n          } as Validator,\n          { oneOfNodeTypes: [\"Declaration\"] },\n        ),\n        function (node: t.ExportNamedDeclaration, key, val) {\n          if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n          // This validator isn't put at the top level because we can run it\n          // even if this node doesn't have a parent.\n\n          if (val && node.source) {\n            throw new TypeError(\"Cannot export a declaration from a source\");\n          }\n        },\n      ),\n    },\n    attributes: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    // TODO(Babel 8): Deprecated\n    assertions: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    specifiers: {\n      default: [],\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          (function () {\n            const sourced = assertNodeType(\n              \"ExportSpecifier\",\n              \"ExportDefaultSpecifier\",\n              \"ExportNamespaceSpecifier\",\n            );\n            const sourceless = assertNodeType(\"ExportSpecifier\");\n\n            if (!process.env.BABEL_TYPES_8_BREAKING) return sourced;\n\n            return function (node: t.ExportNamedDeclaration, key, val) {\n              const validator = node.source ? sourced : sourceless;\n              validator(node, key, val);\n            } as Validator;\n          })(),\n        ),\n      ),\n    },\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n      optional: true,\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n  },\n});\n\ndefineType(\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    exported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    exportKind: {\n      // And TypeScript's \"export { type foo } from\"\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  builder: [\"left\", \"right\", \"body\", \"await\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate: (function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return assertNodeType(\"VariableDeclaration\", \"LVal\");\n        }\n\n        const declaration = assertNodeType(\"VariableDeclaration\");\n        const lval = assertNodeType(\n          \"Identifier\",\n          \"MemberExpression\",\n          \"ArrayPattern\",\n          \"ObjectPattern\",\n          \"TSAsExpression\",\n          \"TSSatisfiesExpression\",\n          \"TSTypeAssertion\",\n          \"TSNonNullExpression\",\n        );\n\n        return function (node, key, val) {\n          if (is(\"VariableDeclaration\", val)) {\n            declaration(node, key, val);\n          } else {\n            lval(node, key, val);\n          }\n        };\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    await: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ImportDeclaration\", {\n  builder: [\"specifiers\", \"source\"],\n  visitor: [\"specifiers\", \"source\", \"attributes\", \"assertions\"],\n  aliases: [\"Statement\", \"Declaration\", \"ImportOrExportDeclaration\"],\n  fields: {\n    attributes: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    // TODO(Babel 8): Deprecated\n    assertions: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    module: {\n      optional: true,\n      validate: assertValueType(\"boolean\"),\n    },\n    phase: {\n      default: null,\n      validate: assertOneOf(\"source\", \"defer\"),\n    },\n    specifiers: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"ImportSpecifier\",\n            \"ImportDefaultSpecifier\",\n            \"ImportNamespaceSpecifier\",\n          ),\n        ),\n      ),\n    },\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    importKind: {\n      // Handle TypeScript/Flowtype's extension \"import type foo from\"\n      // TypeScript doesn't support typeof\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportSpecifier\", {\n  visitor: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    imported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    importKind: {\n      // Handle Flowtype's extension \"import {typeof foo} from\"\n      // And TypeScript's \"import { type foo } from\"\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ImportExpression\", {\n  visitor: [\"source\", \"options\"],\n  aliases: [\"Expression\"],\n  fields: {\n    phase: {\n      default: null,\n      validate: assertOneOf(\"source\", \"defer\"),\n    },\n    source: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    options: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    meta: {\n      validate: chain(\n        assertNodeType(\"Identifier\"),\n        Object.assign(\n          function (node: t.MetaProperty, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            let property;\n            switch (val.name) {\n              case \"function\":\n                property = \"sent\";\n                break;\n              case \"new\":\n                property = \"target\";\n                break;\n              case \"import\":\n                property = \"meta\";\n                break;\n            }\n            if (!is(\"Identifier\", node.property, { name: property })) {\n              throw new TypeError(\"Unrecognised MetaProperty\");\n            }\n          } as Validator,\n          { oneOfNodeTypes: [\"Identifier\"] },\n        ),\n      ),\n    },\n    property: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\nexport const classMethodOrPropertyCommon = () => ({\n  abstract: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  accessibility: {\n    validate: assertOneOf(\"public\", \"private\", \"protected\"),\n    optional: true,\n  },\n  static: {\n    default: false,\n  },\n  override: {\n    default: false,\n  },\n  computed: {\n    default: false,\n  },\n  optional: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  key: {\n    validate: chain(\n      (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        return function (node: any, key: string, val: any) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      })(),\n      assertNodeType(\n        \"Identifier\",\n        \"StringLiteral\",\n        \"NumericLiteral\",\n        \"BigIntLiteral\",\n        \"Expression\",\n      ),\n    ),\n  },\n});\n\nexport const classMethodOrDeclareMethodCommon = () => ({\n  ...functionCommon(),\n  ...classMethodOrPropertyCommon(),\n  params: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(\n        assertNodeType(\n          \"Identifier\",\n          \"Pattern\",\n          \"RestElement\",\n          \"TSParameterProperty\",\n        ),\n      ),\n    ),\n  },\n  kind: {\n    validate: assertOneOf(\"get\", \"set\", \"method\", \"constructor\"),\n    default: \"method\",\n  },\n  access: {\n    validate: chain(\n      assertValueType(\"string\"),\n      assertOneOf(\"public\", \"private\", \"protected\"),\n    ),\n    optional: true,\n  },\n  decorators: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(assertNodeType(\"Decorator\")),\n    ),\n    optional: true,\n  },\n});\n\ndefineType(\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\n    \"kind\",\n    \"key\",\n    \"params\",\n    \"body\",\n    \"computed\",\n    \"static\",\n    \"generator\",\n    \"async\",\n  ],\n  visitor: [\n    \"key\",\n    \"params\",\n    \"body\",\n    \"decorators\",\n    \"returnType\",\n    \"typeParameters\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"ObjectPattern\", {\n  visitor: [\n    \"properties\",\n    \"typeAnnotation\",\n    \"decorators\" /* for legacy param decorators */,\n  ],\n  builder: [\"properties\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"RestElement\", \"ObjectProperty\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  deprecatedAlias: \"SpreadProperty\",\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\n  \"Super\",\n  process.env.BABEL_8_BREAKING\n    ? undefined\n    : {\n        aliases: [\"Expression\"],\n      },\n);\n\ndefineType(\"TaggedTemplateExpression\", {\n  visitor: [\"tag\", \"quasi\", \"typeParameters\"],\n  builder: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    quasi: {\n      validate: assertNodeType(\"TemplateLiteral\"),\n    },\n    typeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      validate: chain(\n        assertShape({\n          raw: {\n            validate: assertValueType(\"string\"),\n          },\n          cooked: {\n            validate: assertValueType(\"string\"),\n            optional: true,\n          },\n        }),\n        function templateElementCookedValidator(node: t.TemplateElement) {\n          const raw = node.value.raw;\n\n          let unterminatedCalled = false;\n\n          const error = () => {\n            // unreachable\n            throw new Error(\"Internal @babel/types error.\");\n          };\n          const { str, firstInvalidLoc } = readStringContents(\n            \"template\",\n            raw,\n            0,\n            0,\n            0,\n            {\n              unterminated() {\n                unterminatedCalled = true;\n              },\n              strictNumericEscape: error,\n              invalidEscapeSequence: error,\n              numericSeparatorInEscapeSequence: error,\n              unexpectedNumericSeparator: error,\n              invalidDigit: error,\n              invalidCodePoint: error,\n            },\n          );\n          if (!unterminatedCalled) throw new Error(\"Invalid raw\");\n\n          node.value.cooked = firstInvalidLoc ? null : str;\n        },\n      ),\n    },\n    tail: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TemplateElement\")),\n      ),\n    },\n    expressions: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            // For TypeScript template literal types\n            \"TSType\",\n          ),\n        ),\n        function (node: t.TemplateLiteral, key, val) {\n          if (node.quasis.length !== val.length + 1) {\n            throw new TypeError(\n              `Number of ${\n                node.type\n              } quasis should be exactly one more than the number of expressions.\\nExpected ${\n                val.length + 1\n              } quasis but got ${node.quasis.length}`,\n            );\n          }\n        } as Validator,\n      ),\n    },\n  },\n});\n\ndefineType(\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate: chain(\n        assertValueType(\"boolean\"),\n        Object.assign(\n          function (node: t.YieldExpression, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            if (val && !node.argument) {\n              throw new TypeError(\n                \"Property delegate of YieldExpression cannot be true if there is no argument\",\n              );\n            }\n          } as Validator,\n          { type: \"boolean\" },\n        ),\n      ),\n      default: false,\n    },\n    argument: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2017 ---\ndefineType(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2019 ---\ndefineType(\"Import\", {\n  aliases: [\"Expression\"],\n});\n\n// --- ES2020 ---\ndefineType(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.OptionalMemberExpression, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `computed` property\n          { oneOfNodeTypes: [\"Expression\", \"Identifier\"] },\n        );\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertValueType(\"boolean\")\n        : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n  },\n});\n\ndefineType(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    arguments: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            \"SpreadElement\",\n            \"JSXNamespacedName\",\n            \"ArgumentPlaceholder\",\n          ),\n        ),\n      ),\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertValueType(\"boolean\")\n        : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n    typeArguments: {\n      validate: assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    typeParameters: {\n      validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n      optional: true,\n    },\n  },\n});\n\n// --- ES2022 ---\ndefineType(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassAccessorProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\", \"Accessor\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    key: {\n      validate: chain(\n        (function () {\n          const normal = assertNodeType(\n            \"Identifier\",\n            \"StringLiteral\",\n            \"NumericLiteral\",\n            \"BigIntLiteral\",\n            \"PrivateName\",\n          );\n          const computed = assertNodeType(\"Expression\");\n\n          return function (node: any, key: string, val: any) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          };\n        })(),\n        assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n          \"Expression\",\n          \"PrivateName\",\n        ),\n      ),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\", \"typeAnnotation\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    static: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\n    \"key\",\n    \"params\",\n    \"body\",\n    \"decorators\",\n    \"returnType\",\n    \"typeParameters\",\n  ],\n  aliases: [\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"Private\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"get\", \"set\", \"method\"),\n      default: \"method\",\n    },\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"FunctionParent\"],\n});\n",null,"import shallowEqual from \"../utils/shallowEqual.ts\";\nimport isType from \"./isType.ts\";\nimport isPlaceholderType from \"./isPlaceholderType.ts\";\nimport { FLIPPED_ALIAS_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function is<T extends t.Node[\"type\"]>(\n  type: T,\n  node: t.Node | null | undefined,\n  opts?: undefined,\n): node is Extract<t.Node, { type: T }>;\n\nexport default function is<\n  T extends t.Node[\"type\"],\n  P extends Extract<t.Node, { type: T }>,\n>(type: T, n: t.Node | null | undefined, required: Partial<P>): n is P;\n\nexport default function is<P extends t.Node>(\n  type: string,\n  node: t.Node | null | undefined,\n  opts: Partial<P>,\n): node is P;\n\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node;\n/**\n * Returns whether `node` is of given `type`.\n *\n * For better performance, use this instead of `is[Type]` when `type` is unknown.\n */\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node {\n  if (!node) return false;\n\n  const matches = isType(node.type, type);\n  if (!matches) {\n    if (!opts && node.type === \"Placeholder\" && type in FLIPPED_ALIAS_KEYS) {\n      // We can only return true if the placeholder doesn't replace a real node,\n      // but it replaces a category of nodes (an alias).\n      //\n      // t.is(\"Identifier\", node) gives some guarantees about node's shape, so we\n      // can't say that Placeholder(expectedNode: \"Identifier\") is an identifier\n      // because it doesn't have the same properties.\n      // On the other hand, t.is(\"Expression\", node) doesn't say anything about\n      // the shape of node because Expression can be many different nodes: we can,\n      // and should, safely report expression placeholders as Expressions.\n      return isPlaceholderType(node.expectedNode, type);\n    }\n    return false;\n  }\n\n  if (typeof opts === \"undefined\") {\n    return true;\n  } else {\n    return shallowEqual(node, opts);\n  }\n}\n",null,"import { FLIPPED_ALIAS_KEYS, ALIAS_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function isType<T extends t.Node[\"type\"]>(\n  nodeType: string,\n  targetType: T,\n): nodeType is T;\n\nexport default function isType(\n  nodeType: string | null | undefined,\n  targetType: string,\n): boolean;\n\n/**\n * Test if a `nodeType` is a `targetType` or if `targetType` is an alias of `nodeType`.\n */\nexport default function isType(nodeType: string, targetType: string): boolean {\n  if (nodeType === targetType) return true;\n\n  // If nodeType is nullish, it can't be an alias of targetType.\n  if (nodeType == null) return false;\n\n  // This is a fast-path. If the test above failed, but an alias key is found, then the\n  // targetType was a primary node type, so there's no need to check the aliases.\n  // @ts-expect-error targetType may not index ALIAS_KEYS\n  if (ALIAS_KEYS[targetType]) return false;\n\n  const aliases: Array<string> | undefined = FLIPPED_ALIAS_KEYS[targetType];\n  if (aliases) {\n    if (aliases[0] === nodeType) return true;\n\n    for (const alias of aliases) {\n      if (nodeType === alias) return true;\n    }\n  }\n\n  return false;\n}\n",null,"import { PLACEHOLDERS_ALIAS } from \"../definitions/index.ts\";\n\n/**\n * Test if a `placeholderType` is a `targetType` or if `targetType` is an alias of `placeholderType`.\n */\nexport default function isPlaceholderType(\n  placeholderType: string,\n  targetType: string,\n): boolean {\n  if (placeholderType === targetType) return true;\n\n  const aliases: Array<string> | undefined =\n    PLACEHOLDERS_ALIAS[placeholderType];\n  if (aliases) {\n    for (const alias of aliases) {\n      if (targetType === alias) return true;\n    }\n  }\n\n  return false;\n}\n",null,"import {\n  isIdentifierName,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\n/**\n * Check if the input `name` is a valid identifier name\n * and isn't a reserved word.\n */\nexport default function isValidIdentifier(\n  name: string,\n  reserved: boolean = true,\n): boolean {\n  if (typeof name !== \"string\") return false;\n\n  if (reserved) {\n    // \"await\" is invalid in module, valid in script; better be safe (see #4952)\n    if (isKeyword(name) || isStrictReservedWord(name, true)) {\n      return false;\n    }\n  }\n\n  return isIdentifierName(name);\n}\n",null,"export {\n  isIdentifierName,\n  isIdentifierChar,\n  isIdentifierStart,\n} from \"./identifier.ts\";\nexport {\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"./keyword.ts\";\n",null,"import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n",null,"const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n",null,"import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return process.env.BABEL_8_BREAKING\n    ? { pos, str: out, firstInvalidLoc, lineStart, curLine }\n    : {\n        pos,\n        str: out,\n        firstInvalidLoc,\n        lineStart,\n        curLine,\n        containsInvalid: !!firstInvalidLoc,\n      };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n        ? isAllowedNumericSeparatorSibling.dec\n        : radix === 8\n          ? isAllowedNumericSeparatorSibling.oct\n          : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n",null,"export const STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\", \"alternate\"];\nexport const FLATTENABLE_KEYS = [\"body\", \"expressions\"];\nexport const FOR_INIT_KEYS = [\"left\", \"init\"];\nexport const COMMENT_KEYS = [\n  \"leadingComments\",\n  \"trailingComments\",\n  \"innerComments\",\n] as const;\n\nexport const LOGICAL_OPERATORS = [\"||\", \"&&\", \"??\"];\nexport const UPDATE_OPERATORS = [\"++\", \"--\"];\n\nexport const BOOLEAN_NUMBER_BINARY_OPERATORS = [\">\", \"<\", \">=\", \"<=\"];\nexport const EQUALITY_BINARY_OPERATORS = [\"==\", \"===\", \"!=\", \"!==\"];\nexport const COMPARISON_BINARY_OPERATORS = [\n  ...EQUALITY_BINARY_OPERATORS,\n  \"in\",\n  \"instanceof\",\n];\nexport const BOOLEAN_BINARY_OPERATORS = [\n  ...COMPARISON_BINARY_OPERATORS,\n  ...BOOLEAN_NUMBER_BINARY_OPERATORS,\n];\nexport const NUMBER_BINARY_OPERATORS = [\n  \"-\",\n  \"/\",\n  \"%\",\n  \"*\",\n  \"**\",\n  \"&\",\n  \"|\",\n  \">>\",\n  \">>>\",\n  \"<<\",\n  \"^\",\n];\nexport const BINARY_OPERATORS = [\n  \"+\",\n  ...NUMBER_BINARY_OPERATORS,\n  ...BOOLEAN_BINARY_OPERATORS,\n  \"|>\",\n];\n\nexport const ASSIGNMENT_OPERATORS = [\n  \"=\",\n  \"+=\",\n  ...NUMBER_BINARY_OPERATORS.map(op => op + \"=\"),\n  ...LOGICAL_OPERATORS.map(op => op + \"=\"),\n];\n\nexport const BOOLEAN_UNARY_OPERATORS = [\"delete\", \"!\"];\nexport const NUMBER_UNARY_OPERATORS = [\"+\", \"-\", \"~\"];\nexport const STRING_UNARY_OPERATORS = [\"typeof\"];\nexport const UNARY_OPERATORS = [\n  \"void\",\n  \"throw\",\n  ...BOOLEAN_UNARY_OPERATORS,\n  ...NUMBER_UNARY_OPERATORS,\n  ...STRING_UNARY_OPERATORS,\n];\n\nexport const INHERIT_KEYS = {\n  optional: [\"typeAnnotation\", \"typeParameters\", \"returnType\"],\n  force: [\"start\", \"loc\", \"end\"],\n} as const;\n\nexport const BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\nexport const NOT_LOCAL_BINDING = Symbol.for(\n  \"should not be considered a local binding\",\n);\n",null,"import is from \"../validators/is.ts\";\nimport { validateField, validateChild } from \"../validators/validate.ts\";\nimport type * as t from \"../index.ts\";\n\nexport const VISITOR_KEYS: Record<string, string[]> = {};\nexport const ALIAS_KEYS: Partial<Record<NodeTypesWithoutComment, string[]>> =\n  {};\nexport const FLIPPED_ALIAS_KEYS: Record<string, NodeTypesWithoutComment[]> = {};\nexport const NODE_FIELDS: Record<string, FieldDefinitions> = {};\nexport const BUILDER_KEYS: Record<string, string[]> = {};\nexport const DEPRECATED_KEYS: Record<string, NodeTypesWithoutComment> = {};\nexport const NODE_PARENT_VALIDATIONS: Record<string, Validator> = {};\n\nfunction getType(val: any) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else {\n    return typeof val;\n  }\n}\n\ntype NodeTypesWithoutComment = t.Node[\"type\"] | keyof t.Aliases;\n\ntype NodeTypes = NodeTypesWithoutComment | t.Comment[\"type\"];\n\ntype PrimitiveTypes = ReturnType<typeof getType>;\n\ntype FieldDefinitions = {\n  [x: string]: FieldOptions;\n};\n\ntype DefineTypeOpts = {\n  fields?: FieldDefinitions;\n  visitor?: Array<string>;\n  aliases?: Array<string>;\n  builder?: Array<string>;\n  inherits?: NodeTypes;\n  deprecatedAlias?: string;\n  validate?: Validator;\n};\n\nexport type Validator = (\n  | { type: PrimitiveTypes }\n  | { each: Validator }\n  | { chainOf: Validator[] }\n  | { oneOf: any[] }\n  | { oneOfNodeTypes: NodeTypes[] }\n  | { oneOfNodeOrValueTypes: (NodeTypes | PrimitiveTypes)[] }\n  | { shapeOf: { [x: string]: FieldOptions } }\n  | {}\n) &\n  ((node: t.Node, key: string, val: any) => void);\n\nexport type FieldOptions = {\n  default?: string | number | boolean | [];\n  optional?: boolean;\n  deprecated?: boolean;\n  validate?: Validator;\n};\n\nexport function validate(validate: Validator): FieldOptions {\n  return { validate };\n}\n\nexport function typeIs(typeName: NodeTypes | NodeTypes[]) {\n  return typeof typeName === \"string\"\n    ? assertNodeType(typeName)\n    : assertNodeType(...typeName);\n}\n\nexport function validateType(typeName: NodeTypes | NodeTypes[]) {\n  return validate(typeIs(typeName));\n}\n\nexport function validateOptional(validate: Validator): FieldOptions {\n  return { validate, optional: true };\n}\n\nexport function validateOptionalType(\n  typeName: NodeTypes | NodeTypes[],\n): FieldOptions {\n  return { validate: typeIs(typeName), optional: true };\n}\n\nexport function arrayOf(elementType: Validator): Validator {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nexport function arrayOfType(typeName: NodeTypes | NodeTypes[]) {\n  return arrayOf(typeIs(typeName));\n}\n\nexport function validateArrayOfType(typeName: NodeTypes | NodeTypes[]) {\n  return validate(arrayOfType(typeName));\n}\n\nexport function assertEach(callback: Validator): Validator {\n  function validator(node: t.Node, key: string, val: any) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      const subkey = `${key}[${i}]`;\n      const v = val[i];\n      callback(node, subkey, v);\n      if (process.env.BABEL_TYPES_8_BREAKING) validateChild(node, subkey, v);\n    }\n  }\n  validator.each = callback;\n  return validator;\n}\n\nexport function assertOneOf(...values: Array<any>): Validator {\n  function validate(node: any, key: string, val: any) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(\n        `Property ${key} expected value to be one of ${JSON.stringify(\n          values,\n        )} but got ${JSON.stringify(val)}`,\n      );\n    }\n  }\n\n  validate.oneOf = values;\n\n  return validate;\n}\n\nexport function assertNodeType(...types: NodeTypes[]): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    for (const type of types) {\n      if (is(type, val)) {\n        validateChild(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(val?.type)}`,\n    );\n  }\n\n  validate.oneOfNodeTypes = types;\n\n  return validate;\n}\n\nexport function assertNodeOrValueType(\n  ...types: (NodeTypes | PrimitiveTypes)[]\n): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    for (const type of types) {\n      if (getType(val) === type || is(type, val)) {\n        validateChild(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(val?.type)}`,\n    );\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n\n  return validate;\n}\n\nexport function assertValueType(type: PrimitiveTypes): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(\n        `Property ${key} expected type of ${type} but got ${getType(val)}`,\n      );\n    }\n  }\n\n  validate.type = type;\n\n  return validate;\n}\n\nexport function assertShape(shape: { [x: string]: FieldOptions }): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    const errors = [];\n    for (const property of Object.keys(shape)) {\n      try {\n        validateField(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n        throw error;\n      }\n    }\n    if (errors.length) {\n      throw new TypeError(\n        `Property ${key} of ${\n          node.type\n        } expected to have the following:\\n${errors.join(\"\\n\")}`,\n      );\n    }\n  }\n\n  validate.shapeOf = shape;\n\n  return validate;\n}\n\nexport function assertOptionalChainStart(): Validator {\n  function validate(node: t.Node) {\n    let current = node;\n    while (node) {\n      const { type } = current;\n      if (type === \"OptionalCallExpression\") {\n        if (current.optional) return;\n        current = current.callee;\n        continue;\n      }\n\n      if (type === \"OptionalMemberExpression\") {\n        if (current.optional) return;\n        current = current.object;\n        continue;\n      }\n\n      break;\n    }\n\n    throw new TypeError(\n      `Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${current?.type}`,\n    );\n  }\n\n  return validate;\n}\n\nexport function chain(...fns: Array<Validator>): Validator {\n  function validate(...args: Parameters<Validator>) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n  validate.chainOf = fns;\n\n  if (\n    fns.length >= 2 &&\n    \"type\" in fns[0] &&\n    fns[0].type === \"array\" &&\n    !(\"each\" in fns[1])\n  ) {\n    throw new Error(\n      `An assertValueType(\"array\") validator can only be followed by an assertEach(...) validator.`,\n    );\n  }\n\n  return validate;\n}\n\nconst validTypeOpts = [\n  \"aliases\",\n  \"builder\",\n  \"deprecatedAlias\",\n  \"fields\",\n  \"inherits\",\n  \"visitor\",\n  \"validate\",\n];\nconst validFieldKeys = [\"default\", \"optional\", \"deprecated\", \"validate\"];\n\nconst store = {} as Record<string, DefineTypeOpts>;\n\n// Wraps defineType to ensure these aliases are included.\nexport function defineAliasedType(...aliases: string[]) {\n  return (type: string, opts: DefineTypeOpts = {}) => {\n    let defined = opts.aliases;\n    if (!defined) {\n      if (opts.inherits) defined = store[opts.inherits].aliases?.slice();\n      defined ??= [];\n      opts.aliases = defined;\n    }\n    const additional = aliases.filter(a => !defined.includes(a));\n    defined.unshift(...additional);\n    defineType(type, opts);\n  };\n}\n\nexport default function defineType(type: string, opts: DefineTypeOpts = {}) {\n  const inherits = (opts.inherits && store[opts.inherits]) || {};\n\n  let fields = opts.fields;\n  if (!fields) {\n    fields = {};\n    if (inherits.fields) {\n      const keys = Object.getOwnPropertyNames(inherits.fields);\n      for (const key of keys) {\n        const field = inherits.fields[key];\n        const def = field.default;\n        if (\n          Array.isArray(def) ? def.length > 0 : def && typeof def === \"object\"\n        ) {\n          throw new Error(\n            \"field defaults can only be primitives or empty arrays currently\",\n          );\n        }\n        fields[key] = {\n          default: Array.isArray(def) ? [] : def,\n          optional: field.optional,\n          deprecated: field.deprecated,\n          validate: field.validate,\n        };\n      }\n    }\n  }\n\n  const visitor: Array<string> = opts.visitor || inherits.visitor || [];\n  const aliases: Array<string> = opts.aliases || inherits.aliases || [];\n  const builder: Array<string> =\n    opts.builder || inherits.builder || opts.visitor || [];\n\n  for (const k of Object.keys(opts)) {\n    if (validTypeOpts.indexOf(k) === -1) {\n      throw new Error(`Unknown type option \"${k}\" on ${type}`);\n    }\n  }\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type as NodeTypesWithoutComment;\n  }\n\n  // ensure all field keys are represented in `fields`\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (field.default !== undefined && builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate && field.default != null) {\n      field.validate = assertValueType(getType(field.default));\n    }\n\n    for (const k of Object.keys(field)) {\n      if (validFieldKeys.indexOf(k) === -1) {\n        throw new Error(`Unknown field key \"${k}\" on ${type}.${key}`);\n      }\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type as NodeTypesWithoutComment] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type as NodeTypesWithoutComment);\n  });\n\n  if (opts.validate) {\n    NODE_PARENT_VALIDATIONS[type] = opts.validate;\n  }\n\n  store[type] = opts;\n}\n",null,"import {\n  defineAliasedType,\n  arrayOfType,\n  assertOneOf,\n  assertValueType,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n} from \"./utils.ts\";\n\nconst defineType = defineAliasedType(\"Flow\");\n\nconst defineInterfaceishType = (\n  name: \"DeclareClass\" | \"DeclareInterface\" | \"InterfaceDeclaration\",\n) => {\n  const isDeclareClass = name === \"DeclareClass\";\n\n  defineType(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\n      \"id\",\n      \"typeParameters\",\n      \"extends\",\n      ...(isDeclareClass ? [\"mixins\", \"implements\"] : []),\n      \"body\",\n    ],\n    aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: validateType(\"Identifier\"),\n      typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n      extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n      ...(isDeclareClass\n        ? {\n            mixins: validateOptional(arrayOfType(\"InterfaceExtends\")),\n            implements: validateOptional(arrayOfType(\"ClassImplements\")),\n          }\n        : {}),\n      body: validateType(\"ObjectTypeAnnotation\"),\n    },\n  });\n};\n\ndefineType(\"AnyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    elementType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"BooleanTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareClass\");\n\ndefineType(\"DeclareFunction\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    predicate: validateOptionalType(\"DeclaredPredicate\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareInterface\");\n\ndefineType(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType([\"Identifier\", \"StringLiteral\"]),\n    body: validateType(\"BlockStatement\"),\n    kind: validateOptional(assertOneOf(\"CommonJS\", \"ES\")),\n  },\n});\n\ndefineType(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateOptionalType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: validateOptionalType(\"Flow\"),\n    specifiers: validateOptional(\n      arrayOfType([\"ExportSpecifier\", \"ExportNamespaceSpecifier\"]),\n    ),\n    source: validateOptionalType(\"StringLiteral\"),\n    default: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: validateType(\"StringLiteral\"),\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n  },\n});\n\ndefineType(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"FlowPredicate\"],\n  fields: {\n    value: validateType(\"Flow\"),\n  },\n});\n\ndefineType(\"ExistsTypeAnnotation\", {\n  aliases: [\"FlowType\"],\n});\n\ndefineType(\"FunctionTypeAnnotation\", {\n  visitor: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    params: validate(arrayOfType(\"FunctionTypeParam\")),\n    rest: validateOptionalType(\"FunctionTypeParam\"),\n    this: validateOptionalType(\"FunctionTypeParam\"),\n    returnType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  fields: {\n    name: validateOptionalType(\"Identifier\"),\n    typeAnnotation: validateType(\"FlowType\"),\n    optional: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    id: validateType([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"InferredPredicate\", {\n  aliases: [\"FlowPredicate\"],\n});\n\ndefineType(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"InterfaceDeclaration\");\n\ndefineType(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n    body: validateType(\"ObjectTypeAnnotation\"),\n  },\n});\n\ndefineType(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"MixedTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"EmptyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"number\")),\n  },\n});\n\ndefineType(\"NumberTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"FlowType\"],\n  builder: [\n    \"properties\",\n    \"indexers\",\n    \"callProperties\",\n    \"internalSlots\",\n    \"exact\",\n  ],\n  fields: {\n    properties: validate(\n      arrayOfType([\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"]),\n    ),\n    indexers: {\n      validate: arrayOfType(\"ObjectTypeIndexer\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    callProperties: {\n      validate: arrayOfType(\"ObjectTypeCallProperty\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    internalSlots: {\n      validate: arrayOfType(\"ObjectTypeInternalSlot\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    exact: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    // If the inexact flag is present then this is an object type, and not a\n    // declare class, declare interface, or interface. If it is true, the\n    // object uses ... to express that it is inexact.\n    inexact: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    value: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n    static: validate(assertValueType(\"boolean\")),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeIndexer\", {\n  visitor: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateOptionalType(\"Identifier\"),\n    key: validateType(\"FlowType\"),\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    key: validateType([\"Identifier\", \"StringLiteral\"]),\n    value: validateType(\"FlowType\"),\n    kind: validate(assertOneOf(\"init\", \"get\", \"set\")),\n    static: validate(assertValueType(\"boolean\")),\n    proto: validate(assertValueType(\"boolean\")),\n    optional: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"QualifiedTypeIdentifier\", {\n  visitor: [\"id\", \"qualification\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    qualification: validateType([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n  },\n});\n\ndefineType(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"string\")),\n  },\n});\n\ndefineType(\"StringTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"SymbolTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ThisTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"TypeParameter\", {\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: validate(assertValueType(\"string\")),\n    bound: validateOptionalType(\"TypeAnnotation\"),\n    default: validateOptionalType(\"FlowType\"),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"TypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"TypeParameter\")),\n  },\n});\n\ndefineType(\"TypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"Variance\", {\n  builder: [\"kind\"],\n  fields: {\n    kind: validate(assertOneOf(\"minus\", \"plus\")),\n  },\n});\n\ndefineType(\"VoidTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\n// Enums\ndefineType(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    body: validateType([\n      \"EnumBooleanBody\",\n      \"EnumNumberBody\",\n      \"EnumStringBody\",\n      \"EnumSymbolBody\",\n    ]),\n  },\n});\n\ndefineType(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumBooleanMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumNumberMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType([\"EnumStringMember\", \"EnumDefaultedMember\"]),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"EnumDefaultedMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"BooleanLiteral\"),\n  },\n});\n\ndefineType(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"NumericLiteral\"),\n  },\n});\n\ndefineType(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"IndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OptionalIndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n  },\n});\n",null,"import {\n  defineAliasedType,\n  assertNodeType,\n  assertValueType,\n  chain,\n  assertEach,\n} from \"./utils.ts\";\n\nconst defineType = defineAliasedType(\"JSX\");\n\ndefineType(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\", \"JSXNamespacedName\"),\n    },\n    value: {\n      optional: true,\n      validate: assertNodeType(\n        \"JSXElement\",\n        \"JSXFragment\",\n        \"StringLiteral\",\n        \"JSXExpressionContainer\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXElement\", {\n  builder: process.env.BABEL_8_BREAKING\n    ? [\"openingElement\", \"closingElement\", \"children\"]\n    : [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: assertNodeType(\"JSXOpeningElement\"),\n    },\n    closingElement: {\n      optional: true,\n      validate: assertNodeType(\"JSXClosingElement\"),\n    },\n    children: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"JSXText\",\n            \"JSXExpressionContainer\",\n            \"JSXSpreadChild\",\n            \"JSXElement\",\n            \"JSXFragment\",\n          ),\n        ),\n      ),\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          selfClosing: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"JSXEmptyExpression\", {});\n\ndefineType(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\", \"JSXEmptyExpression\"),\n    },\n  },\n});\n\ndefineType(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"JSXMemberExpression\", \"JSXIdentifier\"),\n    },\n    property: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  fields: {\n    namespace: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n    selfClosing: {\n      default: false,\n    },\n    attributes: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"JSXAttribute\", \"JSXSpreadAttribute\")),\n      ),\n    },\n    typeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXText\", {\n  aliases: [\"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: assertNodeType(\"JSXOpeningFragment\"),\n    },\n    closingFragment: {\n      validate: assertNodeType(\"JSXClosingFragment\"),\n    },\n    children: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"JSXText\",\n            \"JSXExpressionContainer\",\n            \"JSXSpreadChild\",\n            \"JSXElement\",\n            \"JSXFragment\",\n          ),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningFragment\", {\n  aliases: [\"Immutable\"],\n});\n\ndefineType(\"JSXClosingFragment\", {\n  aliases: [\"Immutable\"],\n});\n",null,"import {\n  defineAliasedType,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n} from \"./utils.ts\";\nimport { PLACEHOLDERS } from \"./placeholders.ts\";\n\nconst defineType = defineAliasedType(\"Miscellaneous\");\n\nif (!process.env.BABEL_8_BREAKING) {\n  defineType(\"Noop\", {\n    visitor: [],\n  });\n}\n\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  // aliases: [], defined in placeholders.js\n  fields: {\n    name: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    expectedNode: {\n      validate: assertOneOf(...PLACEHOLDERS),\n    },\n  },\n});\n\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n",null,"import { ALIAS_KEYS } from \"./utils.ts\";\n\nexport const PLACEHOLDERS = [\n  \"Identifier\",\n  \"StringLiteral\",\n  \"Expression\",\n  \"Statement\",\n  \"Declaration\",\n  \"BlockStatement\",\n  \"ClassBody\",\n  \"Pattern\",\n] as const;\n\nexport const PLACEHOLDERS_ALIAS: Record<string, string[]> = {\n  Declaration: [\"Statement\"],\n  Pattern: [\"PatternLike\", \"LVal\"],\n};\n\nfor (const type of PLACEHOLDERS) {\n  const alias = ALIAS_KEYS[type];\n  if (alias?.length) PLACEHOLDERS_ALIAS[type] = alias;\n}\n\nexport const PLACEHOLDERS_FLIPPED_ALIAS: Record<string, string[]> = {};\n\nObject.keys(PLACEHOLDERS_ALIAS).forEach(type => {\n  PLACEHOLDERS_ALIAS[type].forEach(alias => {\n    if (!Object.hasOwn(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {\n      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];\n    }\n    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);\n  });\n});\n",null,"import defineType, {\n  assertEach,\n  assertNodeType,\n  assertValueType,\n  chain,\n} from \"./utils.ts\";\n\ndefineType(\"ArgumentPlaceholder\", {});\n\ndefineType(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING\n    ? {\n        object: {\n          validate: Object.assign(() => {}, {\n            oneOfNodeTypes: [\"Expression\"],\n          }),\n        },\n        callee: {\n          validate: Object.assign(() => {}, {\n            oneOfNodeTypes: [\"Expression\"],\n          }),\n        },\n      }\n    : {\n        object: {\n          validate: assertNodeType(\"Expression\"),\n        },\n        callee: {\n          validate: assertNodeType(\"Expression\"),\n        },\n      },\n});\n\ndefineType(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    value: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n  },\n});\n\ndefineType(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    async: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ObjectProperty\", \"SpreadElement\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Expression\", \"SpreadElement\")),\n      ),\n      default: [],\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\n// https://github.com/tc39/proposal-js-module-blocks\ndefineType(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"Program\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-hack-pipes\ndefineType(\"TopicReference\", {\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-smart-pipes\ndefineType(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"],\n});\n",null,"import {\n  defineAliasedType,\n  arrayOfType,\n  assertEach,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n  chain,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n} from \"./utils.ts\";\nimport {\n  functionDeclarationCommon,\n  classMethodOrDeclareMethodCommon,\n} from \"./core.ts\";\nimport is from \"../validators/is.ts\";\n\nconst defineType = defineAliasedType(\"TypeScript\");\n\nconst bool = assertValueType(\"boolean\");\n\nconst tSFunctionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeAnnotation\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeAnnotation\", \"Noop\"),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeParameterDeclaration\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true,\n  },\n});\n\ndefineType(\"TSParameterProperty\", {\n  aliases: [\"LVal\"], // TODO: This isn't usable in general as an LVal. Should have a \"Parameter\" alias.\n  visitor: [\"parameter\"],\n  fields: {\n    accessibility: {\n      validate: assertOneOf(\"public\", \"private\", \"protected\"),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    parameter: {\n      validate: assertNodeType(\"Identifier\", \"AssignmentPattern\"),\n    },\n    override: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSDeclareFunction\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSDeclareMethod\", {\n  visitor: [\"decorators\", \"key\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSQualifiedName\", {\n  aliases: [\"TSEntityName\"],\n  visitor: [\"left\", \"right\"],\n  fields: {\n    left: validateType(\"TSEntityName\"),\n    right: validateType(\"Identifier\"),\n  },\n});\n\nconst signatureDeclarationCommon = () => ({\n  typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n  [process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\"]: validateArrayOfType(\n    [\"ArrayPattern\", \"Identifier\", \"ObjectPattern\", \"RestElement\"],\n  ),\n  [process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\"]:\n    validateOptionalType(\"TSTypeAnnotation\"),\n});\n\nconst callConstructSignatureDeclaration = {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: signatureDeclarationCommon(),\n};\n\ndefineType(\"TSCallSignatureDeclaration\", callConstructSignatureDeclaration);\ndefineType(\n  \"TSConstructSignatureDeclaration\",\n  callConstructSignatureDeclaration,\n);\n\nconst namedTypeElementCommon = () => ({\n  key: validateType(\"Expression\"),\n  computed: { default: false },\n  optional: validateOptional(bool),\n});\n\ndefineType(\"TSPropertySignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeAnnotation\"],\n  fields: {\n    ...namedTypeElementCommon(),\n    readonly: validateOptional(bool),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    kind: {\n      validate: assertOneOf(\"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSMethodSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"key\",\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: {\n    ...signatureDeclarationCommon(),\n    ...namedTypeElementCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSIndexSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"parameters\", \"typeAnnotation\"],\n  fields: {\n    readonly: validateOptional(bool),\n    static: validateOptional(bool),\n    parameters: validateArrayOfType(\"Identifier\"), // Length must be 1\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n  },\n});\n\nconst tsKeywordTypes = [\n  \"TSAnyKeyword\",\n  \"TSBooleanKeyword\",\n  \"TSBigIntKeyword\",\n  \"TSIntrinsicKeyword\",\n  \"TSNeverKeyword\",\n  \"TSNullKeyword\",\n  \"TSNumberKeyword\",\n  \"TSObjectKeyword\",\n  \"TSStringKeyword\",\n  \"TSSymbolKeyword\",\n  \"TSUndefinedKeyword\",\n  \"TSUnknownKeyword\",\n  \"TSVoidKeyword\",\n] as const;\n\nfor (const type of tsKeywordTypes) {\n  defineType(type, {\n    aliases: [\"TSType\", \"TSBaseType\"],\n    visitor: [],\n    fields: {},\n  });\n}\n\ndefineType(\"TSThisType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [],\n  fields: {},\n});\n\nconst fnOrCtrBase = {\n  aliases: [\"TSType\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n};\n\ndefineType(\"TSFunctionType\", {\n  ...fnOrCtrBase,\n  fields: signatureDeclarationCommon(),\n});\ndefineType(\"TSConstructorType\", {\n  ...fnOrCtrBase,\n  fields: {\n    ...signatureDeclarationCommon(),\n    abstract: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeReference\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeName\", \"typeParameters\"],\n  fields: {\n    typeName: validateType(\"TSEntityName\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypePredicate\", {\n  aliases: [\"TSType\"],\n  visitor: [\"parameterName\", \"typeAnnotation\"],\n  builder: [\"parameterName\", \"typeAnnotation\", \"asserts\"],\n  fields: {\n    parameterName: validateType([\"Identifier\", \"TSThisType\"]),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    asserts: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeQuery\", {\n  aliases: [\"TSType\"],\n  visitor: [\"exprName\", \"typeParameters\"],\n  fields: {\n    exprName: validateType([\"TSEntityName\", \"TSImportType\"]),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypeLiteral\", {\n  aliases: [\"TSType\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSArrayType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementType\"],\n  fields: {\n    elementType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTupleType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementTypes\"],\n  fields: {\n    elementTypes: validateArrayOfType([\"TSType\", \"TSNamedTupleMember\"]),\n  },\n});\n\ndefineType(\"TSOptionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSRestType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSNamedTupleMember\", {\n  visitor: [\"label\", \"elementType\"],\n  builder: [\"label\", \"elementType\", \"optional\"],\n  fields: {\n    label: validateType(\"Identifier\"),\n    optional: {\n      validate: bool,\n      default: false,\n    },\n    elementType: validateType(\"TSType\"),\n  },\n});\n\nconst unionOrIntersection = {\n  aliases: [\"TSType\"],\n  visitor: [\"types\"],\n  fields: {\n    types: validateArrayOfType(\"TSType\"),\n  },\n};\n\ndefineType(\"TSUnionType\", unionOrIntersection);\ndefineType(\"TSIntersectionType\", unionOrIntersection);\n\ndefineType(\"TSConditionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"checkType\", \"extendsType\", \"trueType\", \"falseType\"],\n  fields: {\n    checkType: validateType(\"TSType\"),\n    extendsType: validateType(\"TSType\"),\n    trueType: validateType(\"TSType\"),\n    falseType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInferType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\"],\n  fields: {\n    typeParameter: validateType(\"TSTypeParameter\"),\n  },\n});\n\ndefineType(\"TSParenthesizedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTypeOperator\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    operator: validate(assertValueType(\"string\")),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSIndexedAccessType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"objectType\", \"indexType\"],\n  fields: {\n    objectType: validateType(\"TSType\"),\n    indexType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSMappedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\", \"typeAnnotation\", \"nameType\"],\n  fields: {\n    readonly: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    typeParameter: validateType(\"TSTypeParameter\"),\n    optional: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    typeAnnotation: validateOptionalType(\"TSType\"),\n    nameType: validateOptionalType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"literal\"],\n  fields: {\n    literal: {\n      validate: (function () {\n        const unaryExpression = assertNodeType(\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const unaryOperator = assertOneOf(\"-\");\n\n        const literal = assertNodeType(\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n        );\n        function validator(parent: any, key: string, node: any) {\n          // type A = -1 | 1;\n          if (is(\"UnaryExpression\", node)) {\n            // check operator first\n            unaryOperator(node, \"operator\", node.operator);\n            unaryExpression(node, \"argument\", node.argument);\n          } else {\n            // type A = 'foo' | 'bar' | false | 1;\n            literal(parent, key, node);\n          }\n        }\n\n        validator.oneOfNodeTypes = [\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n          \"UnaryExpression\",\n        ];\n\n        return validator;\n      })(),\n    },\n  },\n});\n\ndefineType(\"TSExpressionWithTypeArguments\", {\n  aliases: [\"TSType\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: validateType(\"TSEntityName\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSInterfaceDeclaration\", {\n  // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    extends: validateOptional(arrayOfType(\"TSExpressionWithTypeArguments\")),\n    body: validateType(\"TSInterfaceBody\"),\n  },\n});\n\ndefineType(\"TSInterfaceBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSTypeAliasDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"typeAnnotation\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInstantiationExpression\", {\n  aliases: [\"Expression\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\nconst TSTypeExpression = {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\", \"typeAnnotation\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n};\n\ndefineType(\"TSAsExpression\", TSTypeExpression);\ndefineType(\"TSSatisfiesExpression\", TSTypeExpression);\n\ndefineType(\"TSTypeAssertion\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"typeAnnotation\", \"expression\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSEnumDeclaration\", {\n  // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"members\"],\n  fields: {\n    declare: validateOptional(bool),\n    const: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    members: validateArrayOfType(\"TSEnumMember\"),\n    initializer: validateOptionalType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSEnumMember\", {\n  visitor: [\"id\", \"initializer\"],\n  fields: {\n    id: validateType([\"Identifier\", \"StringLiteral\"]),\n    initializer: validateOptionalType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSModuleDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    declare: validateOptional(bool),\n    global: validateOptional(bool),\n    id: validateType([\"Identifier\", \"StringLiteral\"]),\n    body: validateType([\"TSModuleBlock\", \"TSModuleDeclaration\"]),\n  },\n});\n\ndefineType(\"TSModuleBlock\", {\n  aliases: [\"Scopable\", \"Block\", \"BlockParent\", \"FunctionParent\"],\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"Statement\"),\n  },\n});\n\ndefineType(\"TSImportType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"argument\", \"qualifier\", \"typeParameters\"],\n  fields: {\n    argument: validateType(\"StringLiteral\"),\n    qualifier: validateOptionalType(\"TSEntityName\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n    options: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSImportEqualsDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\", \"moduleReference\"],\n  fields: {\n    isExport: validate(bool),\n    id: validateType(\"Identifier\"),\n    moduleReference: validateType([\n      \"TSEntityName\",\n      \"TSExternalModuleReference\",\n    ]),\n    importKind: {\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSExternalModuleReference\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"TSNonNullExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSExportAssignment\", {\n  aliases: [\"Statement\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSNamespaceExportDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"TSTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: {\n      validate: assertNodeType(\"TSType\"),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TSType\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TSTypeParameter\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameter\", {\n  builder: [\"constraint\", \"default\", \"name\"],\n  visitor: [\"constraint\", \"default\"],\n  fields: {\n    name: {\n      validate: !process.env.BABEL_8_BREAKING\n        ? assertValueType(\"string\")\n        : assertNodeType(\"Identifier\"),\n    },\n    in: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    out: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    const: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    constraint: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n    default: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n  },\n});\n",null,"export const DEPRECATED_ALIASES = {\n  ModuleDeclaration: \"ImportOrExportDeclaration\",\n};\n",null,"import isNode from \"../validators/isNode.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function assertNode(node?: any): asserts node is t.Node {\n  if (!isNode(node)) {\n    const type = node?.type ?? JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}\n",null,"import { VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function isNode(node: any): node is t.Node {\n  return !!(node && VISITOR_KEYS[node.type]);\n}\n",null,"/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport is from \"../../validators/is.ts\";\nimport type * as t from \"../../index.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\n\nfunction assert(type: string, node: any, opts?: any): void {\n  if (!is(type, node, opts)) {\n    throw new Error(\n      `Expected type \"${type}\" with option ${JSON.stringify(opts)}, ` +\n        `but instead got \"${node.type}\".`,\n    );\n  }\n}\n\nexport function assertArrayExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayExpression {\n  assert(\"ArrayExpression\", node, opts);\n}\nexport function assertAssignmentExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentExpression {\n  assert(\"AssignmentExpression\", node, opts);\n}\nexport function assertBinaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BinaryExpression {\n  assert(\"BinaryExpression\", node, opts);\n}\nexport function assertInterpreterDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterpreterDirective {\n  assert(\"InterpreterDirective\", node, opts);\n}\nexport function assertDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Directive {\n  assert(\"Directive\", node, opts);\n}\nexport function assertDirectiveLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DirectiveLiteral {\n  assert(\"DirectiveLiteral\", node, opts);\n}\nexport function assertBlockStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockStatement {\n  assert(\"BlockStatement\", node, opts);\n}\nexport function assertBreakStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BreakStatement {\n  assert(\"BreakStatement\", node, opts);\n}\nexport function assertCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CallExpression {\n  assert(\"CallExpression\", node, opts);\n}\nexport function assertCatchClause(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CatchClause {\n  assert(\"CatchClause\", node, opts);\n}\nexport function assertConditionalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ConditionalExpression {\n  assert(\"ConditionalExpression\", node, opts);\n}\nexport function assertContinueStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ContinueStatement {\n  assert(\"ContinueStatement\", node, opts);\n}\nexport function assertDebuggerStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DebuggerStatement {\n  assert(\"DebuggerStatement\", node, opts);\n}\nexport function assertDoWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoWhileStatement {\n  assert(\"DoWhileStatement\", node, opts);\n}\nexport function assertEmptyStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyStatement {\n  assert(\"EmptyStatement\", node, opts);\n}\nexport function assertExpressionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionStatement {\n  assert(\"ExpressionStatement\", node, opts);\n}\nexport function assertFile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.File {\n  assert(\"File\", node, opts);\n}\nexport function assertForInStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForInStatement {\n  assert(\"ForInStatement\", node, opts);\n}\nexport function assertForStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForStatement {\n  assert(\"ForStatement\", node, opts);\n}\nexport function assertFunctionDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionDeclaration {\n  assert(\"FunctionDeclaration\", node, opts);\n}\nexport function assertFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionExpression {\n  assert(\"FunctionExpression\", node, opts);\n}\nexport function assertIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Identifier {\n  assert(\"Identifier\", node, opts);\n}\nexport function assertIfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IfStatement {\n  assert(\"IfStatement\", node, opts);\n}\nexport function assertLabeledStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LabeledStatement {\n  assert(\"LabeledStatement\", node, opts);\n}\nexport function assertStringLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteral {\n  assert(\"StringLiteral\", node, opts);\n}\nexport function assertNumericLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumericLiteral {\n  assert(\"NumericLiteral\", node, opts);\n}\nexport function assertNullLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteral {\n  assert(\"NullLiteral\", node, opts);\n}\nexport function assertBooleanLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteral {\n  assert(\"BooleanLiteral\", node, opts);\n}\nexport function assertRegExpLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RegExpLiteral {\n  assert(\"RegExpLiteral\", node, opts);\n}\nexport function assertLogicalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LogicalExpression {\n  assert(\"LogicalExpression\", node, opts);\n}\nexport function assertMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MemberExpression {\n  assert(\"MemberExpression\", node, opts);\n}\nexport function assertNewExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NewExpression {\n  assert(\"NewExpression\", node, opts);\n}\nexport function assertProgram(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Program {\n  assert(\"Program\", node, opts);\n}\nexport function assertObjectExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectExpression {\n  assert(\"ObjectExpression\", node, opts);\n}\nexport function assertObjectMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMethod {\n  assert(\"ObjectMethod\", node, opts);\n}\nexport function assertObjectProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectProperty {\n  assert(\"ObjectProperty\", node, opts);\n}\nexport function assertRestElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RestElement {\n  assert(\"RestElement\", node, opts);\n}\nexport function assertReturnStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ReturnStatement {\n  assert(\"ReturnStatement\", node, opts);\n}\nexport function assertSequenceExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SequenceExpression {\n  assert(\"SequenceExpression\", node, opts);\n}\nexport function assertParenthesizedExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ParenthesizedExpression {\n  assert(\"ParenthesizedExpression\", node, opts);\n}\nexport function assertSwitchCase(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchCase {\n  assert(\"SwitchCase\", node, opts);\n}\nexport function assertSwitchStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchStatement {\n  assert(\"SwitchStatement\", node, opts);\n}\nexport function assertThisExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisExpression {\n  assert(\"ThisExpression\", node, opts);\n}\nexport function assertThrowStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThrowStatement {\n  assert(\"ThrowStatement\", node, opts);\n}\nexport function assertTryStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TryStatement {\n  assert(\"TryStatement\", node, opts);\n}\nexport function assertUnaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryExpression {\n  assert(\"UnaryExpression\", node, opts);\n}\nexport function assertUpdateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UpdateExpression {\n  assert(\"UpdateExpression\", node, opts);\n}\nexport function assertVariableDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclaration {\n  assert(\"VariableDeclaration\", node, opts);\n}\nexport function assertVariableDeclarator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclarator {\n  assert(\"VariableDeclarator\", node, opts);\n}\nexport function assertWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WhileStatement {\n  assert(\"WhileStatement\", node, opts);\n}\nexport function assertWithStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WithStatement {\n  assert(\"WithStatement\", node, opts);\n}\nexport function assertAssignmentPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentPattern {\n  assert(\"AssignmentPattern\", node, opts);\n}\nexport function assertArrayPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayPattern {\n  assert(\"ArrayPattern\", node, opts);\n}\nexport function assertArrowFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrowFunctionExpression {\n  assert(\"ArrowFunctionExpression\", node, opts);\n}\nexport function assertClassBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassBody {\n  assert(\"ClassBody\", node, opts);\n}\nexport function assertClassExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassExpression {\n  assert(\"ClassExpression\", node, opts);\n}\nexport function assertClassDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassDeclaration {\n  assert(\"ClassDeclaration\", node, opts);\n}\nexport function assertExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportAllDeclaration {\n  assert(\"ExportAllDeclaration\", node, opts);\n}\nexport function assertExportDefaultDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultDeclaration {\n  assert(\"ExportDefaultDeclaration\", node, opts);\n}\nexport function assertExportNamedDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamedDeclaration {\n  assert(\"ExportNamedDeclaration\", node, opts);\n}\nexport function assertExportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportSpecifier {\n  assert(\"ExportSpecifier\", node, opts);\n}\nexport function assertForOfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForOfStatement {\n  assert(\"ForOfStatement\", node, opts);\n}\nexport function assertImportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDeclaration {\n  assert(\"ImportDeclaration\", node, opts);\n}\nexport function assertImportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDefaultSpecifier {\n  assert(\"ImportDefaultSpecifier\", node, opts);\n}\nexport function assertImportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportNamespaceSpecifier {\n  assert(\"ImportNamespaceSpecifier\", node, opts);\n}\nexport function assertImportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportSpecifier {\n  assert(\"ImportSpecifier\", node, opts);\n}\nexport function assertImportExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportExpression {\n  assert(\"ImportExpression\", node, opts);\n}\nexport function assertMetaProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MetaProperty {\n  assert(\"MetaProperty\", node, opts);\n}\nexport function assertClassMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassMethod {\n  assert(\"ClassMethod\", node, opts);\n}\nexport function assertObjectPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectPattern {\n  assert(\"ObjectPattern\", node, opts);\n}\nexport function assertSpreadElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SpreadElement {\n  assert(\"SpreadElement\", node, opts);\n}\nexport function assertSuper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Super {\n  assert(\"Super\", node, opts);\n}\nexport function assertTaggedTemplateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TaggedTemplateExpression {\n  assert(\"TaggedTemplateExpression\", node, opts);\n}\nexport function assertTemplateElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateElement {\n  assert(\"TemplateElement\", node, opts);\n}\nexport function assertTemplateLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateLiteral {\n  assert(\"TemplateLiteral\", node, opts);\n}\nexport function assertYieldExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.YieldExpression {\n  assert(\"YieldExpression\", node, opts);\n}\nexport function assertAwaitExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AwaitExpression {\n  assert(\"AwaitExpression\", node, opts);\n}\nexport function assertImport(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Import {\n  assert(\"Import\", node, opts);\n}\nexport function assertBigIntLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BigIntLiteral {\n  assert(\"BigIntLiteral\", node, opts);\n}\nexport function assertExportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamespaceSpecifier {\n  assert(\"ExportNamespaceSpecifier\", node, opts);\n}\nexport function assertOptionalMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalMemberExpression {\n  assert(\"OptionalMemberExpression\", node, opts);\n}\nexport function assertOptionalCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalCallExpression {\n  assert(\"OptionalCallExpression\", node, opts);\n}\nexport function assertClassProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassProperty {\n  assert(\"ClassProperty\", node, opts);\n}\nexport function assertClassAccessorProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassAccessorProperty {\n  assert(\"ClassAccessorProperty\", node, opts);\n}\nexport function assertClassPrivateProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateProperty {\n  assert(\"ClassPrivateProperty\", node, opts);\n}\nexport function assertClassPrivateMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateMethod {\n  assert(\"ClassPrivateMethod\", node, opts);\n}\nexport function assertPrivateName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PrivateName {\n  assert(\"PrivateName\", node, opts);\n}\nexport function assertStaticBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StaticBlock {\n  assert(\"StaticBlock\", node, opts);\n}\nexport function assertAnyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AnyTypeAnnotation {\n  assert(\"AnyTypeAnnotation\", node, opts);\n}\nexport function assertArrayTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayTypeAnnotation {\n  assert(\"ArrayTypeAnnotation\", node, opts);\n}\nexport function assertBooleanTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanTypeAnnotation {\n  assert(\"BooleanTypeAnnotation\", node, opts);\n}\nexport function assertBooleanLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteralTypeAnnotation {\n  assert(\"BooleanLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNullLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteralTypeAnnotation {\n  assert(\"NullLiteralTypeAnnotation\", node, opts);\n}\nexport function assertClassImplements(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassImplements {\n  assert(\"ClassImplements\", node, opts);\n}\nexport function assertDeclareClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareClass {\n  assert(\"DeclareClass\", node, opts);\n}\nexport function assertDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareFunction {\n  assert(\"DeclareFunction\", node, opts);\n}\nexport function assertDeclareInterface(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareInterface {\n  assert(\"DeclareInterface\", node, opts);\n}\nexport function assertDeclareModule(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModule {\n  assert(\"DeclareModule\", node, opts);\n}\nexport function assertDeclareModuleExports(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModuleExports {\n  assert(\"DeclareModuleExports\", node, opts);\n}\nexport function assertDeclareTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareTypeAlias {\n  assert(\"DeclareTypeAlias\", node, opts);\n}\nexport function assertDeclareOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareOpaqueType {\n  assert(\"DeclareOpaqueType\", node, opts);\n}\nexport function assertDeclareVariable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareVariable {\n  assert(\"DeclareVariable\", node, opts);\n}\nexport function assertDeclareExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportDeclaration {\n  assert(\"DeclareExportDeclaration\", node, opts);\n}\nexport function assertDeclareExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportAllDeclaration {\n  assert(\"DeclareExportAllDeclaration\", node, opts);\n}\nexport function assertDeclaredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclaredPredicate {\n  assert(\"DeclaredPredicate\", node, opts);\n}\nexport function assertExistsTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExistsTypeAnnotation {\n  assert(\"ExistsTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeAnnotation {\n  assert(\"FunctionTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeParam(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeParam {\n  assert(\"FunctionTypeParam\", node, opts);\n}\nexport function assertGenericTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.GenericTypeAnnotation {\n  assert(\"GenericTypeAnnotation\", node, opts);\n}\nexport function assertInferredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InferredPredicate {\n  assert(\"InferredPredicate\", node, opts);\n}\nexport function assertInterfaceExtends(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceExtends {\n  assert(\"InterfaceExtends\", node, opts);\n}\nexport function assertInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceDeclaration {\n  assert(\"InterfaceDeclaration\", node, opts);\n}\nexport function assertInterfaceTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceTypeAnnotation {\n  assert(\"InterfaceTypeAnnotation\", node, opts);\n}\nexport function assertIntersectionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IntersectionTypeAnnotation {\n  assert(\"IntersectionTypeAnnotation\", node, opts);\n}\nexport function assertMixedTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MixedTypeAnnotation {\n  assert(\"MixedTypeAnnotation\", node, opts);\n}\nexport function assertEmptyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyTypeAnnotation {\n  assert(\"EmptyTypeAnnotation\", node, opts);\n}\nexport function assertNullableTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullableTypeAnnotation {\n  assert(\"NullableTypeAnnotation\", node, opts);\n}\nexport function assertNumberLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberLiteralTypeAnnotation {\n  assert(\"NumberLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNumberTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberTypeAnnotation {\n  assert(\"NumberTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeAnnotation {\n  assert(\"ObjectTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeInternalSlot(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeInternalSlot {\n  assert(\"ObjectTypeInternalSlot\", node, opts);\n}\nexport function assertObjectTypeCallProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeCallProperty {\n  assert(\"ObjectTypeCallProperty\", node, opts);\n}\nexport function assertObjectTypeIndexer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeIndexer {\n  assert(\"ObjectTypeIndexer\", node, opts);\n}\nexport function assertObjectTypeProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeProperty {\n  assert(\"ObjectTypeProperty\", node, opts);\n}\nexport function assertObjectTypeSpreadProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeSpreadProperty {\n  assert(\"ObjectTypeSpreadProperty\", node, opts);\n}\nexport function assertOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OpaqueType {\n  assert(\"OpaqueType\", node, opts);\n}\nexport function assertQualifiedTypeIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.QualifiedTypeIdentifier {\n  assert(\"QualifiedTypeIdentifier\", node, opts);\n}\nexport function assertStringLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteralTypeAnnotation {\n  assert(\"StringLiteralTypeAnnotation\", node, opts);\n}\nexport function assertStringTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringTypeAnnotation {\n  assert(\"StringTypeAnnotation\", node, opts);\n}\nexport function assertSymbolTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SymbolTypeAnnotation {\n  assert(\"SymbolTypeAnnotation\", node, opts);\n}\nexport function assertThisTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisTypeAnnotation {\n  assert(\"ThisTypeAnnotation\", node, opts);\n}\nexport function assertTupleTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleTypeAnnotation {\n  assert(\"TupleTypeAnnotation\", node, opts);\n}\nexport function assertTypeofTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeofTypeAnnotation {\n  assert(\"TypeofTypeAnnotation\", node, opts);\n}\nexport function assertTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAlias {\n  assert(\"TypeAlias\", node, opts);\n}\nexport function assertTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAnnotation {\n  assert(\"TypeAnnotation\", node, opts);\n}\nexport function assertTypeCastExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeCastExpression {\n  assert(\"TypeCastExpression\", node, opts);\n}\nexport function assertTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameter {\n  assert(\"TypeParameter\", node, opts);\n}\nexport function assertTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterDeclaration {\n  assert(\"TypeParameterDeclaration\", node, opts);\n}\nexport function assertTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterInstantiation {\n  assert(\"TypeParameterInstantiation\", node, opts);\n}\nexport function assertUnionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnionTypeAnnotation {\n  assert(\"UnionTypeAnnotation\", node, opts);\n}\nexport function assertVariance(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Variance {\n  assert(\"Variance\", node, opts);\n}\nexport function assertVoidTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VoidTypeAnnotation {\n  assert(\"VoidTypeAnnotation\", node, opts);\n}\nexport function assertEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDeclaration {\n  assert(\"EnumDeclaration\", node, opts);\n}\nexport function assertEnumBooleanBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanBody {\n  assert(\"EnumBooleanBody\", node, opts);\n}\nexport function assertEnumNumberBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberBody {\n  assert(\"EnumNumberBody\", node, opts);\n}\nexport function assertEnumStringBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringBody {\n  assert(\"EnumStringBody\", node, opts);\n}\nexport function assertEnumSymbolBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumSymbolBody {\n  assert(\"EnumSymbolBody\", node, opts);\n}\nexport function assertEnumBooleanMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanMember {\n  assert(\"EnumBooleanMember\", node, opts);\n}\nexport function assertEnumNumberMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberMember {\n  assert(\"EnumNumberMember\", node, opts);\n}\nexport function assertEnumStringMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringMember {\n  assert(\"EnumStringMember\", node, opts);\n}\nexport function assertEnumDefaultedMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDefaultedMember {\n  assert(\"EnumDefaultedMember\", node, opts);\n}\nexport function assertIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IndexedAccessType {\n  assert(\"IndexedAccessType\", node, opts);\n}\nexport function assertOptionalIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalIndexedAccessType {\n  assert(\"OptionalIndexedAccessType\", node, opts);\n}\nexport function assertJSXAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXAttribute {\n  assert(\"JSXAttribute\", node, opts);\n}\nexport function assertJSXClosingElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingElement {\n  assert(\"JSXClosingElement\", node, opts);\n}\nexport function assertJSXElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXElement {\n  assert(\"JSXElement\", node, opts);\n}\nexport function assertJSXEmptyExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXEmptyExpression {\n  assert(\"JSXEmptyExpression\", node, opts);\n}\nexport function assertJSXExpressionContainer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXExpressionContainer {\n  assert(\"JSXExpressionContainer\", node, opts);\n}\nexport function assertJSXSpreadChild(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadChild {\n  assert(\"JSXSpreadChild\", node, opts);\n}\nexport function assertJSXIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXIdentifier {\n  assert(\"JSXIdentifier\", node, opts);\n}\nexport function assertJSXMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXMemberExpression {\n  assert(\"JSXMemberExpression\", node, opts);\n}\nexport function assertJSXNamespacedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXNamespacedName {\n  assert(\"JSXNamespacedName\", node, opts);\n}\nexport function assertJSXOpeningElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningElement {\n  assert(\"JSXOpeningElement\", node, opts);\n}\nexport function assertJSXSpreadAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadAttribute {\n  assert(\"JSXSpreadAttribute\", node, opts);\n}\nexport function assertJSXText(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXText {\n  assert(\"JSXText\", node, opts);\n}\nexport function assertJSXFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXFragment {\n  assert(\"JSXFragment\", node, opts);\n}\nexport function assertJSXOpeningFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningFragment {\n  assert(\"JSXOpeningFragment\", node, opts);\n}\nexport function assertJSXClosingFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingFragment {\n  assert(\"JSXClosingFragment\", node, opts);\n}\nexport function assertNoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Noop {\n  assert(\"Noop\", node, opts);\n}\nexport function assertPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Placeholder {\n  assert(\"Placeholder\", node, opts);\n}\nexport function assertV8IntrinsicIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.V8IntrinsicIdentifier {\n  assert(\"V8IntrinsicIdentifier\", node, opts);\n}\nexport function assertArgumentPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArgumentPlaceholder {\n  assert(\"ArgumentPlaceholder\", node, opts);\n}\nexport function assertBindExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BindExpression {\n  assert(\"BindExpression\", node, opts);\n}\nexport function assertImportAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportAttribute {\n  assert(\"ImportAttribute\", node, opts);\n}\nexport function assertDecorator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Decorator {\n  assert(\"Decorator\", node, opts);\n}\nexport function assertDoExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoExpression {\n  assert(\"DoExpression\", node, opts);\n}\nexport function assertExportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultSpecifier {\n  assert(\"ExportDefaultSpecifier\", node, opts);\n}\nexport function assertRecordExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RecordExpression {\n  assert(\"RecordExpression\", node, opts);\n}\nexport function assertTupleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleExpression {\n  assert(\"TupleExpression\", node, opts);\n}\nexport function assertDecimalLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DecimalLiteral {\n  assert(\"DecimalLiteral\", node, opts);\n}\nexport function assertModuleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleExpression {\n  assert(\"ModuleExpression\", node, opts);\n}\nexport function assertTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TopicReference {\n  assert(\"TopicReference\", node, opts);\n}\nexport function assertPipelineTopicExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineTopicExpression {\n  assert(\"PipelineTopicExpression\", node, opts);\n}\nexport function assertPipelineBareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineBareFunction {\n  assert(\"PipelineBareFunction\", node, opts);\n}\nexport function assertPipelinePrimaryTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelinePrimaryTopicReference {\n  assert(\"PipelinePrimaryTopicReference\", node, opts);\n}\nexport function assertTSParameterProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParameterProperty {\n  assert(\"TSParameterProperty\", node, opts);\n}\nexport function assertTSDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareFunction {\n  assert(\"TSDeclareFunction\", node, opts);\n}\nexport function assertTSDeclareMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareMethod {\n  assert(\"TSDeclareMethod\", node, opts);\n}\nexport function assertTSQualifiedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSQualifiedName {\n  assert(\"TSQualifiedName\", node, opts);\n}\nexport function assertTSCallSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSCallSignatureDeclaration {\n  assert(\"TSCallSignatureDeclaration\", node, opts);\n}\nexport function assertTSConstructSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructSignatureDeclaration {\n  assert(\"TSConstructSignatureDeclaration\", node, opts);\n}\nexport function assertTSPropertySignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSPropertySignature {\n  assert(\"TSPropertySignature\", node, opts);\n}\nexport function assertTSMethodSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMethodSignature {\n  assert(\"TSMethodSignature\", node, opts);\n}\nexport function assertTSIndexSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexSignature {\n  assert(\"TSIndexSignature\", node, opts);\n}\nexport function assertTSAnyKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAnyKeyword {\n  assert(\"TSAnyKeyword\", node, opts);\n}\nexport function assertTSBooleanKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBooleanKeyword {\n  assert(\"TSBooleanKeyword\", node, opts);\n}\nexport function assertTSBigIntKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBigIntKeyword {\n  assert(\"TSBigIntKeyword\", node, opts);\n}\nexport function assertTSIntrinsicKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntrinsicKeyword {\n  assert(\"TSIntrinsicKeyword\", node, opts);\n}\nexport function assertTSNeverKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNeverKeyword {\n  assert(\"TSNeverKeyword\", node, opts);\n}\nexport function assertTSNullKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNullKeyword {\n  assert(\"TSNullKeyword\", node, opts);\n}\nexport function assertTSNumberKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNumberKeyword {\n  assert(\"TSNumberKeyword\", node, opts);\n}\nexport function assertTSObjectKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSObjectKeyword {\n  assert(\"TSObjectKeyword\", node, opts);\n}\nexport function assertTSStringKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSStringKeyword {\n  assert(\"TSStringKeyword\", node, opts);\n}\nexport function assertTSSymbolKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSSymbolKeyword {\n  assert(\"TSSymbolKeyword\", node, opts);\n}\nexport function assertTSUndefinedKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUndefinedKeyword {\n  assert(\"TSUndefinedKeyword\", node, opts);\n}\nexport function assertTSUnknownKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnknownKeyword {\n  assert(\"TSUnknownKeyword\", node, opts);\n}\nexport function assertTSVoidKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSVoidKeyword {\n  assert(\"TSVoidKeyword\", node, opts);\n}\nexport function assertTSThisType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSThisType {\n  assert(\"TSThisType\", node, opts);\n}\nexport function assertTSFunctionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSFunctionType {\n  assert(\"TSFunctionType\", node, opts);\n}\nexport function assertTSConstructorType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructorType {\n  assert(\"TSConstructorType\", node, opts);\n}\nexport function assertTSTypeReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeReference {\n  assert(\"TSTypeReference\", node, opts);\n}\nexport function assertTSTypePredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypePredicate {\n  assert(\"TSTypePredicate\", node, opts);\n}\nexport function assertTSTypeQuery(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeQuery {\n  assert(\"TSTypeQuery\", node, opts);\n}\nexport function assertTSTypeLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeLiteral {\n  assert(\"TSTypeLiteral\", node, opts);\n}\nexport function assertTSArrayType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSArrayType {\n  assert(\"TSArrayType\", node, opts);\n}\nexport function assertTSTupleType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTupleType {\n  assert(\"TSTupleType\", node, opts);\n}\nexport function assertTSOptionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSOptionalType {\n  assert(\"TSOptionalType\", node, opts);\n}\nexport function assertTSRestType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSRestType {\n  assert(\"TSRestType\", node, opts);\n}\nexport function assertTSNamedTupleMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamedTupleMember {\n  assert(\"TSNamedTupleMember\", node, opts);\n}\nexport function assertTSUnionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnionType {\n  assert(\"TSUnionType\", node, opts);\n}\nexport function assertTSIntersectionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntersectionType {\n  assert(\"TSIntersectionType\", node, opts);\n}\nexport function assertTSConditionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConditionalType {\n  assert(\"TSConditionalType\", node, opts);\n}\nexport function assertTSInferType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInferType {\n  assert(\"TSInferType\", node, opts);\n}\nexport function assertTSParenthesizedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParenthesizedType {\n  assert(\"TSParenthesizedType\", node, opts);\n}\nexport function assertTSTypeOperator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeOperator {\n  assert(\"TSTypeOperator\", node, opts);\n}\nexport function assertTSIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexedAccessType {\n  assert(\"TSIndexedAccessType\", node, opts);\n}\nexport function assertTSMappedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMappedType {\n  assert(\"TSMappedType\", node, opts);\n}\nexport function assertTSLiteralType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSLiteralType {\n  assert(\"TSLiteralType\", node, opts);\n}\nexport function assertTSExpressionWithTypeArguments(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExpressionWithTypeArguments {\n  assert(\"TSExpressionWithTypeArguments\", node, opts);\n}\nexport function assertTSInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceDeclaration {\n  assert(\"TSInterfaceDeclaration\", node, opts);\n}\nexport function assertTSInterfaceBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceBody {\n  assert(\"TSInterfaceBody\", node, opts);\n}\nexport function assertTSTypeAliasDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAliasDeclaration {\n  assert(\"TSTypeAliasDeclaration\", node, opts);\n}\nexport function assertTSInstantiationExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInstantiationExpression {\n  assert(\"TSInstantiationExpression\", node, opts);\n}\nexport function assertTSAsExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAsExpression {\n  assert(\"TSAsExpression\", node, opts);\n}\nexport function assertTSSatisfiesExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSSatisfiesExpression {\n  assert(\"TSSatisfiesExpression\", node, opts);\n}\nexport function assertTSTypeAssertion(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAssertion {\n  assert(\"TSTypeAssertion\", node, opts);\n}\nexport function assertTSEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumDeclaration {\n  assert(\"TSEnumDeclaration\", node, opts);\n}\nexport function assertTSEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumMember {\n  assert(\"TSEnumMember\", node, opts);\n}\nexport function assertTSModuleDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleDeclaration {\n  assert(\"TSModuleDeclaration\", node, opts);\n}\nexport function assertTSModuleBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleBlock {\n  assert(\"TSModuleBlock\", node, opts);\n}\nexport function assertTSImportType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportType {\n  assert(\"TSImportType\", node, opts);\n}\nexport function assertTSImportEqualsDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportEqualsDeclaration {\n  assert(\"TSImportEqualsDeclaration\", node, opts);\n}\nexport function assertTSExternalModuleReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExternalModuleReference {\n  assert(\"TSExternalModuleReference\", node, opts);\n}\nexport function assertTSNonNullExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNonNullExpression {\n  assert(\"TSNonNullExpression\", node, opts);\n}\nexport function assertTSExportAssignment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExportAssignment {\n  assert(\"TSExportAssignment\", node, opts);\n}\nexport function assertTSNamespaceExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamespaceExportDeclaration {\n  assert(\"TSNamespaceExportDeclaration\", node, opts);\n}\nexport function assertTSTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAnnotation {\n  assert(\"TSTypeAnnotation\", node, opts);\n}\nexport function assertTSTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterInstantiation {\n  assert(\"TSTypeParameterInstantiation\", node, opts);\n}\nexport function assertTSTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterDeclaration {\n  assert(\"TSTypeParameterDeclaration\", node, opts);\n}\nexport function assertTSTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameter {\n  assert(\"TSTypeParameter\", node, opts);\n}\nexport function assertStandardized(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Standardized {\n  assert(\"Standardized\", node, opts);\n}\nexport function assertExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Expression {\n  assert(\"Expression\", node, opts);\n}\nexport function assertBinary(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Binary {\n  assert(\"Binary\", node, opts);\n}\nexport function assertScopable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Scopable {\n  assert(\"Scopable\", node, opts);\n}\nexport function assertBlockParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockParent {\n  assert(\"BlockParent\", node, opts);\n}\nexport function assertBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Block {\n  assert(\"Block\", node, opts);\n}\nexport function assertStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Statement {\n  assert(\"Statement\", node, opts);\n}\nexport function assertTerminatorless(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Terminatorless {\n  assert(\"Terminatorless\", node, opts);\n}\nexport function assertCompletionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CompletionStatement {\n  assert(\"CompletionStatement\", node, opts);\n}\nexport function assertConditional(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Conditional {\n  assert(\"Conditional\", node, opts);\n}\nexport function assertLoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Loop {\n  assert(\"Loop\", node, opts);\n}\nexport function assertWhile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.While {\n  assert(\"While\", node, opts);\n}\nexport function assertExpressionWrapper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionWrapper {\n  assert(\"ExpressionWrapper\", node, opts);\n}\nexport function assertFor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.For {\n  assert(\"For\", node, opts);\n}\nexport function assertForXStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForXStatement {\n  assert(\"ForXStatement\", node, opts);\n}\nexport function assertFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Function {\n  assert(\"Function\", node, opts);\n}\nexport function assertFunctionParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionParent {\n  assert(\"FunctionParent\", node, opts);\n}\nexport function assertPureish(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pureish {\n  assert(\"Pureish\", node, opts);\n}\nexport function assertDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Declaration {\n  assert(\"Declaration\", node, opts);\n}\nexport function assertPatternLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PatternLike {\n  assert(\"PatternLike\", node, opts);\n}\nexport function assertLVal(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LVal {\n  assert(\"LVal\", node, opts);\n}\nexport function assertTSEntityName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEntityName {\n  assert(\"TSEntityName\", node, opts);\n}\nexport function assertLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Literal {\n  assert(\"Literal\", node, opts);\n}\nexport function assertImmutable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Immutable {\n  assert(\"Immutable\", node, opts);\n}\nexport function assertUserWhitespacable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UserWhitespacable {\n  assert(\"UserWhitespacable\", node, opts);\n}\nexport function assertMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Method {\n  assert(\"Method\", node, opts);\n}\nexport function assertObjectMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMember {\n  assert(\"ObjectMember\", node, opts);\n}\nexport function assertProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Property {\n  assert(\"Property\", node, opts);\n}\nexport function assertUnaryLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryLike {\n  assert(\"UnaryLike\", node, opts);\n}\nexport function assertPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pattern {\n  assert(\"Pattern\", node, opts);\n}\nexport function assertClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Class {\n  assert(\"Class\", node, opts);\n}\nexport function assertImportOrExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportOrExportDeclaration {\n  assert(\"ImportOrExportDeclaration\", node, opts);\n}\nexport function assertExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDeclaration {\n  assert(\"ExportDeclaration\", node, opts);\n}\nexport function assertModuleSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleSpecifier {\n  assert(\"ModuleSpecifier\", node, opts);\n}\nexport function assertAccessor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Accessor {\n  assert(\"Accessor\", node, opts);\n}\nexport function assertPrivate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Private {\n  assert(\"Private\", node, opts);\n}\nexport function assertFlow(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Flow {\n  assert(\"Flow\", node, opts);\n}\nexport function assertFlowType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowType {\n  assert(\"FlowType\", node, opts);\n}\nexport function assertFlowBaseAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowBaseAnnotation {\n  assert(\"FlowBaseAnnotation\", node, opts);\n}\nexport function assertFlowDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowDeclaration {\n  assert(\"FlowDeclaration\", node, opts);\n}\nexport function assertFlowPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowPredicate {\n  assert(\"FlowPredicate\", node, opts);\n}\nexport function assertEnumBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBody {\n  assert(\"EnumBody\", node, opts);\n}\nexport function assertEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumMember {\n  assert(\"EnumMember\", node, opts);\n}\nexport function assertJSX(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSX {\n  assert(\"JSX\", node, opts);\n}\nexport function assertMiscellaneous(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Miscellaneous {\n  assert(\"Miscellaneous\", node, opts);\n}\nexport function assertTypeScript(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeScript {\n  assert(\"TypeScript\", node, opts);\n}\nexport function assertTSTypeElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeElement {\n  assert(\"TSTypeElement\", node, opts);\n}\nexport function assertTSType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSType {\n  assert(\"TSType\", node, opts);\n}\nexport function assertTSBaseType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBaseType {\n  assert(\"TSBaseType\", node, opts);\n}\nexport function assertNumberLiteral(node: any, opts: any): void {\n  deprecationWarning(\"assertNumberLiteral\", \"assertNumericLiteral\");\n  assert(\"NumberLiteral\", node, opts);\n}\nexport function assertRegexLiteral(node: any, opts: any): void {\n  deprecationWarning(\"assertRegexLiteral\", \"assertRegExpLiteral\");\n  assert(\"RegexLiteral\", node, opts);\n}\nexport function assertRestProperty(node: any, opts: any): void {\n  deprecationWarning(\"assertRestProperty\", \"assertRestElement\");\n  assert(\"RestProperty\", node, opts);\n}\nexport function assertSpreadProperty(node: any, opts: any): void {\n  deprecationWarning(\"assertSpreadProperty\", \"assertSpreadElement\");\n  assert(\"SpreadProperty\", node, opts);\n}\nexport function assertModuleDeclaration(node: any, opts: any): void {\n  deprecationWarning(\n    \"assertModuleDeclaration\",\n    \"assertImportOrExportDeclaration\",\n  );\n  assert(\"ModuleDeclaration\", node, opts);\n}\n",null,"import {\n  anyTypeAnnotation,\n  stringTypeAnnotation,\n  numberTypeAnnotation,\n  voidTypeAnnotation,\n  booleanTypeAnnotation,\n  genericTypeAnnotation,\n  identifier,\n} from \"../generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\nexport default createTypeAnnotationBasedOnTypeof as {\n  (type: \"string\"): t.StringTypeAnnotation;\n  (type: \"number\"): t.NumberTypeAnnotation;\n  (type: \"undefined\"): t.VoidTypeAnnotation;\n  (type: \"boolean\"): t.BooleanTypeAnnotation;\n  (type: \"function\"): t.GenericTypeAnnotation;\n  (type: \"object\"): t.GenericTypeAnnotation;\n  (type: \"symbol\"): t.GenericTypeAnnotation;\n  (type: \"bigint\"): t.AnyTypeAnnotation;\n};\n\n/**\n * Create a type annotation based on typeof expression.\n */\nfunction createTypeAnnotationBasedOnTypeof(type: string): t.FlowType {\n  switch (type) {\n    case \"string\":\n      return stringTypeAnnotation();\n    case \"number\":\n      return numberTypeAnnotation();\n    case \"undefined\":\n      return voidTypeAnnotation();\n    case \"boolean\":\n      return booleanTypeAnnotation();\n    case \"function\":\n      return genericTypeAnnotation(identifier(\"Function\"));\n    case \"object\":\n      return genericTypeAnnotation(identifier(\"Object\"));\n    case \"symbol\":\n      return genericTypeAnnotation(identifier(\"Symbol\"));\n    case \"bigint\":\n      // todo: use BigInt annotation when Flow supports BigInt\n      // https://github.com/facebook/flow/issues/6639\n      return anyTypeAnnotation();\n  }\n  throw new Error(\"Invalid typeof value: \" + type);\n}\n",null,"import { unionTypeAnnotation } from \"../generated/index.ts\";\nimport removeTypeDuplicates from \"../../modifications/flow/removeTypeDuplicates.ts\";\nimport type * as t from \"../../index.ts\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createFlowUnionType<T extends t.FlowType>(\n  types: [T] | Array<T>,\n): T | t.UnionTypeAnnotation {\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0] as T;\n  } else {\n    return unionTypeAnnotation(flattened);\n  }\n}\n",null,"import {\n  isAnyTypeAnnotation,\n  isGenericTypeAnnotation,\n  isUnionTypeAnnotation,\n  isFlowBaseAnnotation,\n  isIdentifier,\n} from \"../../validators/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\nfunction getQualifiedName(node: t.GenericTypeAnnotation[\"id\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : `${node.id.name}.${getQualifiedName(node.qualification)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  nodesIn: ReadonlyArray<t.FlowType | false | null | undefined>,\n): t.FlowType[] {\n  const nodes = Array.from(nodesIn);\n\n  const generics = new Map<string, t.GenericTypeAnnotation>();\n  const bases = new Map<t.FlowBaseAnnotation[\"type\"], t.FlowBaseAnnotation>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.FlowType[]>();\n\n  const types: t.FlowType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    if (isFlowBaseAnnotation(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isUnionTypeAnnotation(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // find a matching generic type and merge and deduplicate the type parameters\n    if (isGenericTypeAnnotation(node)) {\n      const name = getQualifiedName(node.id);\n\n      if (generics.has(name)) {\n        let existing: t.Flow = generics.get(name);\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params.push(...node.typeParameters.params);\n            existing.typeParameters.params = removeTypeDuplicates(\n              existing.typeParameters.params,\n            );\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n",null,"import { tsUnionType } from \"../generated/index.ts\";\nimport removeTypeDuplicates from \"../../modifications/typescript/removeTypeDuplicates.ts\";\nimport { isTSTypeAnnotation } from \"../../validators/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createTSUnionType(\n  typeAnnotations: Array<t.TSTypeAnnotation | t.TSType>,\n): t.TSType {\n  const types = typeAnnotations.map(type => {\n    return isTSTypeAnnotation(type) ? type.typeAnnotation : type;\n  });\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return tsUnionType(flattened);\n  }\n}\n",null,"import {\n  isIdentifier,\n  isTSAnyKeyword,\n  isTSTypeReference,\n  isTSUnionType,\n  isTSBaseType,\n} from \"../../validators/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\nfunction getQualifiedName(node: t.TSTypeReference[\"typeName\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : `${node.right.name}.${getQualifiedName(node.left)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  nodesIn: ReadonlyArray<t.TSType>,\n): Array<t.TSType> {\n  const nodes = Array.from(nodesIn);\n\n  const generics = new Map<string, t.TSTypeReference>();\n  const bases = new Map<t.TSBaseType[\"type\"], t.TSBaseType>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.TSType[]>();\n\n  const types: t.TSType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isTSAnyKeyword(node)) {\n      return [node];\n    }\n\n    // Analogue of FlowBaseAnnotation\n    if (isTSBaseType(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isTSUnionType(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // todo: support merging tuples: number[]\n    if (isTSTypeReference(node) && node.typeParameters) {\n      const name = getQualifiedName(node.typeName);\n\n      if (generics.has(name)) {\n        let existing: t.TypeScript = generics.get(name);\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params.push(...node.typeParameters.params);\n            existing.typeParameters.params = removeTypeDuplicates(\n              existing.typeParameters.params,\n            );\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n",null,"/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\n/**\n * This file is written in JavaScript and not TypeScript because uppercase builders\n * conflict with AST types. TypeScript reads the uppercase.d.ts file instead.\n */\n\nexport {\n  arrayExpression as ArrayExpression,\n  assignmentExpression as AssignmentExpression,\n  binaryExpression as BinaryExpression,\n  interpreterDirective as InterpreterDirective,\n  directive as Directive,\n  directiveLiteral as DirectiveLiteral,\n  blockStatement as BlockStatement,\n  breakStatement as BreakStatement,\n  callExpression as CallExpression,\n  catchClause as CatchClause,\n  conditionalExpression as ConditionalExpression,\n  continueStatement as ContinueStatement,\n  debuggerStatement as DebuggerStatement,\n  doWhileStatement as DoWhileStatement,\n  emptyStatement as EmptyStatement,\n  expressionStatement as ExpressionStatement,\n  file as File,\n  forInStatement as ForInStatement,\n  forStatement as ForStatement,\n  functionDeclaration as FunctionDeclaration,\n  functionExpression as FunctionExpression,\n  identifier as Identifier,\n  ifStatement as IfStatement,\n  labeledStatement as LabeledStatement,\n  stringLiteral as StringLiteral,\n  numericLiteral as NumericLiteral,\n  nullLiteral as NullLiteral,\n  booleanLiteral as BooleanLiteral,\n  regExpLiteral as RegExpLiteral,\n  logicalExpression as LogicalExpression,\n  memberExpression as MemberExpression,\n  newExpression as NewExpression,\n  program as Program,\n  objectExpression as ObjectExpression,\n  objectMethod as ObjectMethod,\n  objectProperty as ObjectProperty,\n  restElement as RestElement,\n  returnStatement as ReturnStatement,\n  sequenceExpression as SequenceExpression,\n  parenthesizedExpression as ParenthesizedExpression,\n  switchCase as SwitchCase,\n  switchStatement as SwitchStatement,\n  thisExpression as ThisExpression,\n  throwStatement as ThrowStatement,\n  tryStatement as TryStatement,\n  unaryExpression as UnaryExpression,\n  updateExpression as UpdateExpression,\n  variableDeclaration as VariableDeclaration,\n  variableDeclarator as VariableDeclarator,\n  whileStatement as WhileStatement,\n  withStatement as WithStatement,\n  assignmentPattern as AssignmentPattern,\n  arrayPattern as ArrayPattern,\n  arrowFunctionExpression as ArrowFunctionExpression,\n  classBody as ClassBody,\n  classExpression as ClassExpression,\n  classDeclaration as ClassDeclaration,\n  exportAllDeclaration as ExportAllDeclaration,\n  exportDefaultDeclaration as ExportDefaultDeclaration,\n  exportNamedDeclaration as ExportNamedDeclaration,\n  exportSpecifier as ExportSpecifier,\n  forOfStatement as ForOfStatement,\n  importDeclaration as ImportDeclaration,\n  importDefaultSpecifier as ImportDefaultSpecifier,\n  importNamespaceSpecifier as ImportNamespaceSpecifier,\n  importSpecifier as ImportSpecifier,\n  importExpression as ImportExpression,\n  metaProperty as MetaProperty,\n  classMethod as ClassMethod,\n  objectPattern as ObjectPattern,\n  spreadElement as SpreadElement,\n  super as Super,\n  taggedTemplateExpression as TaggedTemplateExpression,\n  templateElement as TemplateElement,\n  templateLiteral as TemplateLiteral,\n  yieldExpression as YieldExpression,\n  awaitExpression as AwaitExpression,\n  import as Import,\n  bigIntLiteral as BigIntLiteral,\n  exportNamespaceSpecifier as ExportNamespaceSpecifier,\n  optionalMemberExpression as OptionalMemberExpression,\n  optionalCallExpression as OptionalCallExpression,\n  classProperty as ClassProperty,\n  classAccessorProperty as ClassAccessorProperty,\n  classPrivateProperty as ClassPrivateProperty,\n  classPrivateMethod as ClassPrivateMethod,\n  privateName as PrivateName,\n  staticBlock as StaticBlock,\n  anyTypeAnnotation as AnyTypeAnnotation,\n  arrayTypeAnnotation as ArrayTypeAnnotation,\n  booleanTypeAnnotation as BooleanTypeAnnotation,\n  booleanLiteralTypeAnnotation as BooleanLiteralTypeAnnotation,\n  nullLiteralTypeAnnotation as NullLiteralTypeAnnotation,\n  classImplements as ClassImplements,\n  declareClass as DeclareClass,\n  declareFunction as DeclareFunction,\n  declareInterface as DeclareInterface,\n  declareModule as DeclareModule,\n  declareModuleExports as DeclareModuleExports,\n  declareTypeAlias as DeclareTypeAlias,\n  declareOpaqueType as DeclareOpaqueType,\n  declareVariable as DeclareVariable,\n  declareExportDeclaration as DeclareExportDeclaration,\n  declareExportAllDeclaration as DeclareExportAllDeclaration,\n  declaredPredicate as DeclaredPredicate,\n  existsTypeAnnotation as ExistsTypeAnnotation,\n  functionTypeAnnotation as FunctionTypeAnnotation,\n  functionTypeParam as FunctionTypeParam,\n  genericTypeAnnotation as GenericTypeAnnotation,\n  inferredPredicate as InferredPredicate,\n  interfaceExtends as InterfaceExtends,\n  interfaceDeclaration as InterfaceDeclaration,\n  interfaceTypeAnnotation as InterfaceTypeAnnotation,\n  intersectionTypeAnnotation as IntersectionTypeAnnotation,\n  mixedTypeAnnotation as MixedTypeAnnotation,\n  emptyTypeAnnotation as EmptyTypeAnnotation,\n  nullableTypeAnnotation as NullableTypeAnnotation,\n  numberLiteralTypeAnnotation as NumberLiteralTypeAnnotation,\n  numberTypeAnnotation as NumberTypeAnnotation,\n  objectTypeAnnotation as ObjectTypeAnnotation,\n  objectTypeInternalSlot as ObjectTypeInternalSlot,\n  objectTypeCallProperty as ObjectTypeCallProperty,\n  objectTypeIndexer as ObjectTypeIndexer,\n  objectTypeProperty as ObjectTypeProperty,\n  objectTypeSpreadProperty as ObjectTypeSpreadProperty,\n  opaqueType as OpaqueType,\n  qualifiedTypeIdentifier as QualifiedTypeIdentifier,\n  stringLiteralTypeAnnotation as StringLiteralTypeAnnotation,\n  stringTypeAnnotation as StringTypeAnnotation,\n  symbolTypeAnnotation as SymbolTypeAnnotation,\n  thisTypeAnnotation as ThisTypeAnnotation,\n  tupleTypeAnnotation as TupleTypeAnnotation,\n  typeofTypeAnnotation as TypeofTypeAnnotation,\n  typeAlias as TypeAlias,\n  typeAnnotation as TypeAnnotation,\n  typeCastExpression as TypeCastExpression,\n  typeParameter as TypeParameter,\n  typeParameterDeclaration as TypeParameterDeclaration,\n  typeParameterInstantiation as TypeParameterInstantiation,\n  unionTypeAnnotation as UnionTypeAnnotation,\n  variance as Variance,\n  voidTypeAnnotation as VoidTypeAnnotation,\n  enumDeclaration as EnumDeclaration,\n  enumBooleanBody as EnumBooleanBody,\n  enumNumberBody as EnumNumberBody,\n  enumStringBody as EnumStringBody,\n  enumSymbolBody as EnumSymbolBody,\n  enumBooleanMember as EnumBooleanMember,\n  enumNumberMember as EnumNumberMember,\n  enumStringMember as EnumStringMember,\n  enumDefaultedMember as EnumDefaultedMember,\n  indexedAccessType as IndexedAccessType,\n  optionalIndexedAccessType as OptionalIndexedAccessType,\n  jsxAttribute as JSXAttribute,\n  jsxClosingElement as JSXClosingElement,\n  jsxElement as JSXElement,\n  jsxEmptyExpression as JSXEmptyExpression,\n  jsxExpressionContainer as JSXExpressionContainer,\n  jsxSpreadChild as JSXSpreadChild,\n  jsxIdentifier as JSXIdentifier,\n  jsxMemberExpression as JSXMemberExpression,\n  jsxNamespacedName as JSXNamespacedName,\n  jsxOpeningElement as JSXOpeningElement,\n  jsxSpreadAttribute as JSXSpreadAttribute,\n  jsxText as JSXText,\n  jsxFragment as JSXFragment,\n  jsxOpeningFragment as JSXOpeningFragment,\n  jsxClosingFragment as JSXClosingFragment,\n  noop as Noop,\n  placeholder as Placeholder,\n  v8IntrinsicIdentifier as V8IntrinsicIdentifier,\n  argumentPlaceholder as ArgumentPlaceholder,\n  bindExpression as BindExpression,\n  importAttribute as ImportAttribute,\n  decorator as Decorator,\n  doExpression as DoExpression,\n  exportDefaultSpecifier as ExportDefaultSpecifier,\n  recordExpression as RecordExpression,\n  tupleExpression as TupleExpression,\n  decimalLiteral as DecimalLiteral,\n  moduleExpression as ModuleExpression,\n  topicReference as TopicReference,\n  pipelineTopicExpression as PipelineTopicExpression,\n  pipelineBareFunction as PipelineBareFunction,\n  pipelinePrimaryTopicReference as PipelinePrimaryTopicReference,\n  tsParameterProperty as TSParameterProperty,\n  tsDeclareFunction as TSDeclareFunction,\n  tsDeclareMethod as TSDeclareMethod,\n  tsQualifiedName as TSQualifiedName,\n  tsCallSignatureDeclaration as TSCallSignatureDeclaration,\n  tsConstructSignatureDeclaration as TSConstructSignatureDeclaration,\n  tsPropertySignature as TSPropertySignature,\n  tsMethodSignature as TSMethodSignature,\n  tsIndexSignature as TSIndexSignature,\n  tsAnyKeyword as TSAnyKeyword,\n  tsBooleanKeyword as TSBooleanKeyword,\n  tsBigIntKeyword as TSBigIntKeyword,\n  tsIntrinsicKeyword as TSIntrinsicKeyword,\n  tsNeverKeyword as TSNeverKeyword,\n  tsNullKeyword as TSNullKeyword,\n  tsNumberKeyword as TSNumberKeyword,\n  tsObjectKeyword as TSObjectKeyword,\n  tsStringKeyword as TSStringKeyword,\n  tsSymbolKeyword as TSSymbolKeyword,\n  tsUndefinedKeyword as TSUndefinedKeyword,\n  tsUnknownKeyword as TSUnknownKeyword,\n  tsVoidKeyword as TSVoidKeyword,\n  tsThisType as TSThisType,\n  tsFunctionType as TSFunctionType,\n  tsConstructorType as TSConstructorType,\n  tsTypeReference as TSTypeReference,\n  tsTypePredicate as TSTypePredicate,\n  tsTypeQuery as TSTypeQuery,\n  tsTypeLiteral as TSTypeLiteral,\n  tsArrayType as TSArrayType,\n  tsTupleType as TSTupleType,\n  tsOptionalType as TSOptionalType,\n  tsRestType as TSRestType,\n  tsNamedTupleMember as TSNamedTupleMember,\n  tsUnionType as TSUnionType,\n  tsIntersectionType as TSIntersectionType,\n  tsConditionalType as TSConditionalType,\n  tsInferType as TSInferType,\n  tsParenthesizedType as TSParenthesizedType,\n  tsTypeOperator as TSTypeOperator,\n  tsIndexedAccessType as TSIndexedAccessType,\n  tsMappedType as TSMappedType,\n  tsLiteralType as TSLiteralType,\n  tsExpressionWithTypeArguments as TSExpressionWithTypeArguments,\n  tsInterfaceDeclaration as TSInterfaceDeclaration,\n  tsInterfaceBody as TSInterfaceBody,\n  tsTypeAliasDeclaration as TSTypeAliasDeclaration,\n  tsInstantiationExpression as TSInstantiationExpression,\n  tsAsExpression as TSAsExpression,\n  tsSatisfiesExpression as TSSatisfiesExpression,\n  tsTypeAssertion as TSTypeAssertion,\n  tsEnumDeclaration as TSEnumDeclaration,\n  tsEnumMember as TSEnumMember,\n  tsModuleDeclaration as TSModuleDeclaration,\n  tsModuleBlock as TSModuleBlock,\n  tsImportType as TSImportType,\n  tsImportEqualsDeclaration as TSImportEqualsDeclaration,\n  tsExternalModuleReference as TSExternalModuleReference,\n  tsNonNullExpression as TSNonNullExpression,\n  tsExportAssignment as TSExportAssignment,\n  tsNamespaceExportDeclaration as TSNamespaceExportDeclaration,\n  tsTypeAnnotation as TSTypeAnnotation,\n  tsTypeParameterInstantiation as TSTypeParameterInstantiation,\n  tsTypeParameterDeclaration as TSTypeParameterDeclaration,\n  tsTypeParameter as TSTypeParameter,\n  numberLiteral as NumberLiteral,\n  regexLiteral as RegexLiteral,\n  restProperty as RestProperty,\n  spreadProperty as SpreadProperty,\n} from \"./index.ts\";\n",null,"import { numericLiteral, unaryExpression } from \"./generated/index.ts\";\n\nexport function buildUndefinedNode() {\n  return unaryExpression(\"void\", numericLiteral(0), true);\n}\n",null,"import { NODE_FIELDS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\nimport { isFile, isIdentifier } from \"../validators/generated/index.ts\";\n\nconst { hasOwn } = process.env.BABEL_8_BREAKING\n  ? Object\n  : { hasOwn: Function.call.bind(Object.prototype.hasOwnProperty) };\n\ntype CommentCache = Map<t.Comment, t.Comment>;\n\n// This function will never be called for comments, only for real nodes.\nfunction cloneIfNode(\n  obj: t.Node | undefined | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (obj && typeof obj.type === \"string\") {\n    return cloneNodeInternal(obj, deep, withoutLoc, commentsCache);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(\n  obj: t.Node | undefined | null | (t.Node | undefined | null)[],\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep, withoutLoc, commentsCache));\n  }\n  return cloneIfNode(obj, deep, withoutLoc, commentsCache);\n}\n\n/**\n * Create a clone of a `node` including only properties belonging to the node.\n * If the second parameter is `false`, cloneNode performs a shallow clone.\n * If the third parameter is true, the cloned nodes exclude location properties.\n */\nexport default function cloneNode<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n): T {\n  return cloneNodeInternal(node, deep, withoutLoc, new Map());\n}\n\nfunction cloneNodeInternal<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n  commentsCache: CommentCache,\n): T {\n  if (!node) return node;\n\n  const { type } = node;\n  const newNode: any = { type: node.type };\n\n  // Special-case identifiers since they are the most cloned nodes.\n  if (isIdentifier(node)) {\n    newNode.name = node.name;\n\n    if (hasOwn(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (hasOwn(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep\n        ? cloneIfNodeOrArray(\n            node.typeAnnotation,\n            true,\n            withoutLoc,\n            commentsCache,\n          )\n        : node.typeAnnotation;\n    }\n  } else if (!hasOwn(NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(NODE_FIELDS[type])) {\n      if (hasOwn(node, field)) {\n        if (deep) {\n          newNode[field] =\n            isFile(node) && field === \"comments\"\n              ? maybeCloneComments(\n                  node.comments,\n                  deep,\n                  withoutLoc,\n                  commentsCache,\n                )\n              : cloneIfNodeOrArray(\n                  // @ts-expect-error node[field] has been guarded by has check\n                  node[field],\n                  true,\n                  withoutLoc,\n                  commentsCache,\n                );\n        } else {\n          newNode[field] =\n            // @ts-expect-error node[field] has been guarded by has check\n            node[field];\n        }\n      }\n    }\n  }\n\n  if (hasOwn(node, \"loc\")) {\n    if (withoutLoc) {\n      newNode.loc = null;\n    } else {\n      newNode.loc = node.loc;\n    }\n  }\n  if (hasOwn(node, \"leadingComments\")) {\n    newNode.leadingComments = maybeCloneComments(\n      node.leadingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (hasOwn(node, \"innerComments\")) {\n    newNode.innerComments = maybeCloneComments(\n      node.innerComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (hasOwn(node, \"trailingComments\")) {\n    newNode.trailingComments = maybeCloneComments(\n      node.trailingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (hasOwn(node, \"extra\")) {\n    newNode.extra = {\n      ...node.extra,\n    };\n  }\n\n  return newNode;\n}\n\nfunction maybeCloneComments<T extends t.Comment>(\n  comments: ReadonlyArray<T> | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: Map<T, T>,\n): ReadonlyArray<T> | null {\n  if (!comments || !deep) {\n    return comments;\n  }\n  return comments.map(comment => {\n    const cache = commentsCache.get(comment);\n    if (cache) return cache;\n\n    const { type, value, loc } = comment;\n\n    const ret = { type, value, loc } as T;\n    if (withoutLoc) {\n      ret.loc = null;\n    }\n\n    commentsCache.set(comment, ret);\n\n    return ret;\n  });\n}\n",null,"import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Create a shallow clone of a `node`, including only\n * properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function clone<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false);\n}\n",null,"import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function cloneDeep<T extends t.Node>(node: T): T {\n  return cloneNode(node);\n}\n",null,"import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * excluding `_private` and location properties.\n */\nexport default function cloneDeepWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ true, /* withoutLoc */ true);\n}\n",null,"import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Create a shallow clone of a `node` excluding `_private` and location properties.\n */\nexport default function cloneWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false, /* withoutLoc */ true);\n}\n",null,"import addComments from \"./addComments.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Add comment of certain type to a node.\n */\nexport default function addComment<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  content: string,\n  line?: boolean,\n): T {\n  return addComments(node, type, [\n    {\n      type: line ? \"CommentLine\" : \"CommentBlock\",\n      value: content,\n    } as t.Comment,\n  ]);\n}\n",null,"import type * as t from \"../index.ts\";\n\n/**\n * Add comments of certain type to a node.\n */\nexport default function addComments<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  comments: Array<t.Comment>,\n): T {\n  if (!comments || !node) return node;\n\n  const key = `${type}Comments` as const;\n\n  if (node[key]) {\n    if (type === \"leading\") {\n      node[key] = comments.concat(node[key]);\n    } else {\n      node[key].push(...comments);\n    }\n  } else {\n    node[key] = comments;\n  }\n\n  return node;\n}\n",null,"import inherit from \"../utils/inherit.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function inheritInnerComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"innerComments\", child, parent);\n}\n",null,"import type * as t from \"../index.ts\";\n\nexport default function inherit<\n  C extends t.Node | undefined,\n  P extends t.Node | undefined,\n>(key: keyof C & keyof P, child: C, parent: P): void {\n  if (child && parent) {\n    // @ts-expect-error Could further refine key definitions\n    child[key] = Array.from(\n      new Set([].concat(child[key], parent[key]).filter(Boolean)),\n    );\n  }\n}\n",null,"import inherit from \"../utils/inherit.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function inheritLeadingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"leadingComments\", child, parent);\n}\n",null,"import inheritTrailingComments from \"./inheritTrailingComments.ts\";\nimport inheritLeadingComments from \"./inheritLeadingComments.ts\";\nimport inheritInnerComments from \"./inheritInnerComments.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Inherit all unique comments from `parent` node to `child` node.\n */\nexport default function inheritsComments<T extends t.Node>(\n  child: T,\n  parent: t.Node,\n): T {\n  inheritTrailingComments(child, parent);\n  inheritLeadingComments(child, parent);\n  inheritInnerComments(child, parent);\n\n  return child;\n}\n",null,"import inherit from \"../utils/inherit.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function inheritTrailingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"trailingComments\", child, parent);\n}\n",null,"import { COMMENT_KEYS } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Remove comment properties from a node.\n */\nexport default function removeComments<T extends t.Node>(node: T): T {\n  COMMENT_KEYS.forEach(key => {\n    node[key] = null;\n  });\n\n  return node;\n}\n",null,"/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport { FLIPPED_ALIAS_KEYS } from \"../../definitions/index.ts\";\n\nexport const STANDARDIZED_TYPES = FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexport const EXPRESSION_TYPES = FLIPPED_ALIAS_KEYS[\"Expression\"];\nexport const BINARY_TYPES = FLIPPED_ALIAS_KEYS[\"Binary\"];\nexport const SCOPABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexport const BLOCKPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexport const BLOCK_TYPES = FLIPPED_ALIAS_KEYS[\"Block\"];\nexport const STATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"Statement\"];\nexport const TERMINATORLESS_TYPES = FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexport const COMPLETIONSTATEMENT_TYPES =\n  FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexport const CONDITIONAL_TYPES = FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexport const LOOP_TYPES = FLIPPED_ALIAS_KEYS[\"Loop\"];\nexport const WHILE_TYPES = FLIPPED_ALIAS_KEYS[\"While\"];\nexport const EXPRESSIONWRAPPER_TYPES = FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexport const FOR_TYPES = FLIPPED_ALIAS_KEYS[\"For\"];\nexport const FORXSTATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexport const FUNCTION_TYPES = FLIPPED_ALIAS_KEYS[\"Function\"];\nexport const FUNCTIONPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexport const PUREISH_TYPES = FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexport const DECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexport const PATTERNLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexport const LVAL_TYPES = FLIPPED_ALIAS_KEYS[\"LVal\"];\nexport const TSENTITYNAME_TYPES = FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexport const LITERAL_TYPES = FLIPPED_ALIAS_KEYS[\"Literal\"];\nexport const IMMUTABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexport const USERWHITESPACABLE_TYPES = FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexport const METHOD_TYPES = FLIPPED_ALIAS_KEYS[\"Method\"];\nexport const OBJECTMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexport const PROPERTY_TYPES = FLIPPED_ALIAS_KEYS[\"Property\"];\nexport const UNARYLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexport const PATTERN_TYPES = FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexport const CLASS_TYPES = FLIPPED_ALIAS_KEYS[\"Class\"];\nexport const IMPORTOREXPORTDECLARATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"ImportOrExportDeclaration\"];\nexport const EXPORTDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexport const MODULESPECIFIER_TYPES = FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexport const ACCESSOR_TYPES = FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexport const PRIVATE_TYPES = FLIPPED_ALIAS_KEYS[\"Private\"];\nexport const FLOW_TYPES = FLIPPED_ALIAS_KEYS[\"Flow\"];\nexport const FLOWTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexport const FLOWBASEANNOTATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexport const FLOWDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexport const FLOWPREDICATE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexport const ENUMBODY_TYPES = FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexport const ENUMMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexport const JSX_TYPES = FLIPPED_ALIAS_KEYS[\"JSX\"];\nexport const MISCELLANEOUS_TYPES = FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexport const TYPESCRIPT_TYPES = FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexport const TSTYPEELEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexport const TSTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSType\"];\nexport const TSBASETYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\n/**\n * @deprecated migrate to IMPORTOREXPORTDECLARATION_TYPES.\n */\nexport const MODULEDECLARATION_TYPES = IMPORTOREXPORTDECLARATION_TYPES;\n",null,"import toBlock from \"./toBlock.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Ensure the `key` (defaults to \"body\") of a `node` is a block.\n * Casting it to a block if it is not.\n *\n * Returns the BlockStatement\n */\nexport default function ensureBlock(\n  node: t.Node,\n  key: string = \"body\",\n): t.BlockStatement {\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  const result = toBlock(node[key], node);\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  node[key] = result;\n  return result;\n}\n",null,"import {\n  isBlockStatement,\n  isFunction,\n  isEmptyStatement,\n  isStatement,\n} from \"../validators/generated/index.ts\";\nimport {\n  returnStatement,\n  expressionStatement,\n  blockStatement,\n} from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toBlock(\n  node: t.Statement | t.Expression,\n  parent?: t.Node,\n): t.BlockStatement {\n  if (isBlockStatement(node)) {\n    return node;\n  }\n\n  let blockNodes: t.Statement[] = [];\n\n  if (isEmptyStatement(node)) {\n    blockNodes = [];\n  } else {\n    if (!isStatement(node)) {\n      if (isFunction(parent)) {\n        node = returnStatement(node);\n      } else {\n        node = expressionStatement(node);\n      }\n    }\n\n    blockNodes = [node];\n  }\n\n  return blockStatement(blockNodes);\n}\n",null,"import toIdentifier from \"./toIdentifier.ts\";\n\nexport default function toBindingIdentifierName(name: string): string {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n\n  return name;\n}\n",null,"import isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport { isIdentifierChar } from \"@babel/helper-validator-identifier\";\n\nexport default function toIdentifier(input: string): string {\n  input = input + \"\";\n\n  // replace all non-valid identifiers with dashes\n  let name = \"\";\n  for (const c of input) {\n    name += isIdentifierChar(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!isValidIdentifier(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}\n",null,"import { isIdentifier } from \"../validators/generated/index.ts\";\nimport { stringLiteral } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toComputedKey(\n  node:\n    | t.ObjectMember\n    | t.ObjectProperty\n    | t.ClassMethod\n    | t.ClassProperty\n    | t.ClassAccessorProperty\n    | t.MemberExpression\n    | t.OptionalMemberExpression,\n  // @ts-expect-error todo(flow->ts): maybe check the type of node before accessing .key and .property\n  key: t.Expression | t.PrivateName = node.key || node.property,\n) {\n  if (!node.computed && isIdentifier(key)) key = stringLiteral(key.name);\n\n  return key;\n}\n",null,"import {\n  isExpression,\n  isFunction,\n  isClass,\n  isExpressionStatement,\n} from \"../validators/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default toExpression as {\n  (node: t.Function): t.FunctionExpression;\n  (node: t.Class): t.ClassExpression;\n  (\n    node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n  ): t.Expression;\n};\n\nfunction toExpression(\n  node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n): t.Expression {\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  // return unmodified node\n  // important for things like ArrowFunctions where\n  // type change from ArrowFunction to FunctionExpression\n  // produces bugs like -> `()=>a` to `function () a`\n  // without generating a BlockStatement for it\n  // ref: https://github.com/babel/babili/issues/130\n  if (isExpression(node)) {\n    return node;\n  }\n\n  // convert all classes and functions\n  // ClassDeclaration -> ClassExpression\n  // FunctionDeclaration, ObjectMethod, ClassMethod -> FunctionExpression\n  if (isClass(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"ClassExpression\";\n  } else if (isFunction(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"FunctionExpression\";\n  }\n\n  // if it's still not an expression\n  if (!isExpression(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}\n",null,"import {\n  isIdentifier,\n  isStringLiteral,\n} from \"../validators/generated/index.ts\";\nimport cloneNode from \"../clone/cloneNode.ts\";\nimport removePropertiesDeep from \"../modifications/removePropertiesDeep.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toKeyAlias(\n  node: t.Method | t.Property,\n  key: t.Node = node.key,\n): string {\n  let alias;\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.kind`\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if (isIdentifier(key)) {\n    alias = key.name;\n  } else if (isStringLiteral(key)) {\n    alias = JSON.stringify(key.value);\n  } else {\n    alias = JSON.stringify(removePropertiesDeep(cloneNode(key)));\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.computed`\n  if (node.computed) {\n    alias = `[${alias}]`;\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.static`\n  if (node.static) {\n    alias = `static:${alias}`;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= Number.MAX_SAFE_INTEGER) {\n    return (toKeyAlias.uid = 0);\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n",null,"import traverseFast from \"../traverse/traverseFast.ts\";\nimport removeProperties from \"./removeProperties.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function removePropertiesDeep<T extends t.Node>(\n  tree: T,\n  opts?: { preserveComments: boolean } | null,\n): T {\n  traverseFast(tree, removeProperties, opts);\n\n  return tree;\n}\n",null,"import { VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * A prefix AST traversal implementation meant for simple searching\n * and processing.\n */\nexport default function traverseFast<Options = {}>(\n  node: t.Node | null | undefined,\n  enter: (node: t.Node, opts?: Options) => void,\n  opts?: Options,\n): void {\n  if (!node) return;\n\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  opts = opts || ({} as Options);\n  enter(node, opts);\n\n  for (const key of keys) {\n    const subNode: t.Node | undefined | null =\n      // @ts-expect-error key must present in node\n      node[key];\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        traverseFast(node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}\n",null,"import { COMMENT_KEYS } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\nconst CLEAR_KEYS = [\n  \"tokens\", // only exist in t.File\n  \"start\",\n  \"end\",\n  \"loc\",\n  // Fixme: should be extra.raw / extra.rawValue?\n  \"raw\",\n  \"rawValue\",\n] as const;\n\nconst CLEAR_KEYS_PLUS_COMMENTS = [\n  ...COMMENT_KEYS,\n  \"comments\",\n  ...CLEAR_KEYS,\n] as const;\n\nexport type Options = { preserveComments?: boolean };\n/**\n * Remove all of the _* properties from a node along with the additional metadata\n * properties like location data and raw token data.\n */\nexport default function removeProperties(\n  node: t.Node,\n  opts: Options = {},\n): void {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n  for (const key of map) {\n    // @ts-expect-error tokens only exist in t.File\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    // @ts-expect-error string can not index node\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols: Array<symbol> = Object.getOwnPropertySymbols(node);\n  for (const sym of symbols) {\n    // @ts-expect-error Fixme: document symbol properties\n    node[sym] = null;\n  }\n}\n",null,"import {\n  isStatement,\n  isFunction,\n  isClass,\n  isAssignmentExpression,\n} from \"../validators/generated/index.ts\";\nimport { expressionStatement } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default toStatement as {\n  (node: t.AssignmentExpression, ignore?: boolean): t.ExpressionStatement;\n\n  <T extends t.Statement>(node: T, ignore: false): T;\n  <T extends t.Statement>(node: T, ignore?: boolean): T | false;\n\n  (node: t.Class, ignore: false): t.ClassDeclaration;\n  (node: t.Class, ignore?: boolean): t.ClassDeclaration | false;\n\n  (node: t.Function, ignore: false): t.FunctionDeclaration;\n  (node: t.Function, ignore?: boolean): t.FunctionDeclaration | false;\n\n  (node: t.Node, ignore: false): t.Statement;\n  (node: t.Node, ignore?: boolean): t.Statement | false;\n};\n\nfunction toStatement(node: t.Node, ignore?: boolean): t.Statement | false {\n  if (isStatement(node)) {\n    return node;\n  }\n\n  let mustHaveId = false;\n  let newType;\n\n  if (isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\" as const;\n  } else if (isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\" as const;\n  } else if (isAssignmentExpression(node)) {\n    return expressionStatement(node);\n  }\n\n  // @ts-expect-error todo(flow->ts): node.id might be missing\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(`cannot turn ${node.type} to a statement`);\n    }\n  }\n\n  // @ts-expect-error manipulating node.type\n  node.type = newType;\n\n  // @ts-expect-error todo(flow->ts) refactor to avoid type unsafe mutations like reassigning node type above\n  return node;\n}\n",null,"import isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport {\n  identifier,\n  booleanLiteral,\n  nullLiteral,\n  stringLiteral,\n  numericLiteral,\n  regExpLiteral,\n  arrayExpression,\n  objectProperty,\n  objectExpression,\n  unaryExpression,\n  binaryExpression,\n} from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default valueToNode as {\n  (value: undefined): t.Identifier; // TODO: This should return \"void 0\"\n  (value: boolean): t.BooleanLiteral;\n  (value: null): t.NullLiteral;\n  (value: string): t.StringLiteral;\n  // Infinities and NaN need to use a BinaryExpression; negative values must be wrapped in UnaryExpression\n  (value: number): t.NumericLiteral | t.BinaryExpression | t.UnaryExpression;\n  (value: RegExp): t.RegExpLiteral;\n  (value: ReadonlyArray<unknown>): t.ArrayExpression;\n\n  // this throws with objects that are not plain objects,\n  // or if there are non-valueToNode-able values\n  (value: object): t.ObjectExpression;\n\n  (value: unknown): t.Expression;\n};\n\n// @ts-expect-error: Object.prototype.toString must return a string\nconst objectToString: (value: unknown) => string = Function.call.bind(\n  Object.prototype.toString,\n);\n\nfunction isRegExp(value: unknown): value is RegExp {\n  return objectToString(value) === \"[object RegExp]\";\n}\n\nfunction isPlainObject(value: unknown): value is object {\n  if (\n    typeof value !== \"object\" ||\n    value === null ||\n    Object.prototype.toString.call(value) !== \"[object Object]\"\n  ) {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(value);\n  // Object.prototype's __proto__ is null. Every other class's __proto__.__proto__ is\n  // not null by default. We cannot check if proto === Object.prototype because it\n  // could come from another realm.\n  return proto === null || Object.getPrototypeOf(proto) === null;\n}\n\nfunction valueToNode(value: unknown): t.Expression {\n  // undefined\n  if (value === undefined) {\n    return identifier(\"undefined\");\n  }\n\n  // boolean\n  if (value === true || value === false) {\n    return booleanLiteral(value);\n  }\n\n  // null\n  if (value === null) {\n    return nullLiteral();\n  }\n\n  // strings\n  if (typeof value === \"string\") {\n    return stringLiteral(value);\n  }\n\n  // numbers\n  if (typeof value === \"number\") {\n    let result;\n    if (Number.isFinite(value)) {\n      result = numericLiteral(Math.abs(value));\n    } else {\n      let numerator;\n      if (Number.isNaN(value)) {\n        // NaN\n        numerator = numericLiteral(0);\n      } else {\n        // Infinity / -Infinity\n        numerator = numericLiteral(1);\n      }\n\n      result = binaryExpression(\"/\", numerator, numericLiteral(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = unaryExpression(\"-\", result);\n    }\n\n    return result;\n  }\n\n  // regexes\n  if (isRegExp(value)) {\n    const pattern = value.source;\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return regExpLiteral(pattern, flags);\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    return arrayExpression(value.map(valueToNode));\n  }\n\n  // object\n  if (isPlainObject(value)) {\n    const props = [];\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n      if (isValidIdentifier(key)) {\n        nodeKey = identifier(key);\n      } else {\n        nodeKey = stringLiteral(key);\n      }\n      props.push(\n        objectProperty(\n          nodeKey,\n          valueToNode(\n            // @ts-expect-error key must present in value\n            value[key],\n          ),\n        ),\n      );\n    }\n    return objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}\n",null,"import { memberExpression } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Append a node to a member expression.\n */\nexport default function appendToMemberExpression(\n  member: t.MemberExpression,\n  append: t.MemberExpression[\"property\"],\n  computed: boolean = false,\n): t.MemberExpression {\n  member.object = memberExpression(\n    member.object,\n    member.property,\n    member.computed,\n  );\n  member.property = append;\n  member.computed = !!computed;\n\n  return member;\n}\n",null,"import { INHERIT_KEYS } from \"../constants/index.ts\";\nimport inheritsComments from \"../comments/inheritsComments.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Inherit all contextual properties from `parent` node to `child` node.\n */\nexport default function inherits<T extends t.Node | null | undefined>(\n  child: T,\n  parent: t.Node | null | undefined,\n): T {\n  if (!child || !parent) return child;\n\n  // optionally inherit specific properties if not null\n  for (const key of INHERIT_KEYS.optional) {\n    // @ts-expect-error Fixme: refine parent types\n    if (child[key] == null) {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit \"private\" properties\n  for (const key of Object.keys(parent)) {\n    if (key[0] === \"_\" && key !== \"__clone\") {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit select properties\n  for (const key of INHERIT_KEYS.force) {\n    // @ts-expect-error Fixme: refine parent types\n    child[key] = parent[key];\n  }\n\n  inheritsComments(child, parent);\n\n  return child;\n}\n",null,"import { memberExpression } from \"../builders/generated/index.ts\";\nimport { isSuper } from \"../index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Prepend a node to a member expression.\n */\nexport default function prependToMemberExpression<\n  T extends Pick<t.MemberExpression, \"object\" | \"property\">,\n>(member: T, prepend: t.MemberExpression[\"object\"]): T {\n  if (isSuper(member.object)) {\n    throw new Error(\n      \"Cannot prepend node to super property access (`super.foo`).\",\n    );\n  }\n  member.object = memberExpression(prepend, member.object);\n\n  return member;\n}\n",null,"import {\n  isExportDeclaration,\n  isIdentifier,\n  isDeclaration,\n  isFunctionDeclaration,\n  isFunctionExpression,\n  isExportAllDeclaration,\n  isAssignmentExpression,\n  isUnaryExpression,\n} from \"../validators/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport { getBindingIdentifiers as default };\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates: true,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, Array<t.Identifier>>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: false,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, t.Identifier>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>>;\n\n/**\n * Return a list of binding identifiers associated with the input `node`.\n */\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  const search: t.Node[] = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n\n    if (\n      newBindingsOnly &&\n      // These two nodes do not introduce _new_ bindings, but they are included\n      // in getBindingIdentifiers.keys for backwards compatibility.\n      // TODO(@nicolo-ribaudo): Check if we can remove them from .keys in a\n      // backward-compatible way, and if not what we need to do to remove them\n      // in Babel 8.\n      (isAssignmentExpression(id) || isUnaryExpression(id))\n    ) {\n      continue;\n    }\n\n    const keys =\n      // @ts-expect-error getBindingIdentifiers.keys do not cover all AST types\n      getBindingIdentifiers.keys[id.type];\n\n    if (isIdentifier(id)) {\n      if (duplicates) {\n        const _ids = (ids[id.name] = ids[id.name] || []);\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n      continue;\n    }\n\n    if (isExportDeclaration(id) && !isExportAllDeclaration(id)) {\n      if (isDeclaration(id.declaration)) {\n        search.push(id.declaration);\n      }\n      continue;\n    }\n\n    if (outerOnly) {\n      if (isFunctionDeclaration(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if (isFunctionExpression(id)) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const nodes =\n          // @ts-expect-error key must present in id\n          id[key] as t.Node[] | t.Node | undefined | null;\n        if (nodes) {\n          Array.isArray(nodes) ? search.push(...nodes) : search.push(nodes);\n        }\n      }\n    }\n  }\n\n  // $FlowIssue Object.create() seems broken\n  return ids;\n}\n\n/**\n * Mapping of types to their identifier keys.\n */\ngetBindingIdentifiers.keys = {\n  DeclareClass: [\"id\"],\n  DeclareFunction: [\"id\"],\n  DeclareModule: [\"id\"],\n  DeclareVariable: [\"id\"],\n  DeclareInterface: [\"id\"],\n  DeclareTypeAlias: [\"id\"],\n  DeclareOpaqueType: [\"id\"],\n  InterfaceDeclaration: [\"id\"],\n  TypeAlias: [\"id\"],\n  OpaqueType: [\"id\"],\n\n  CatchClause: [\"param\"],\n  LabeledStatement: [\"label\"],\n  UnaryExpression: [\"argument\"],\n  AssignmentExpression: [\"left\"],\n\n  ImportSpecifier: [\"local\"],\n  ImportNamespaceSpecifier: [\"local\"],\n  ImportDefaultSpecifier: [\"local\"],\n  ImportDeclaration: [\"specifiers\"],\n\n  ExportSpecifier: [\"exported\"],\n  ExportNamespaceSpecifier: [\"exported\"],\n  ExportDefaultSpecifier: [\"exported\"],\n\n  FunctionDeclaration: [\"id\", \"params\"],\n  FunctionExpression: [\"id\", \"params\"],\n  ArrowFunctionExpression: [\"params\"],\n  ObjectMethod: [\"params\"],\n  ClassMethod: [\"params\"],\n  ClassPrivateMethod: [\"params\"],\n\n  ForInStatement: [\"left\"],\n  ForOfStatement: [\"left\"],\n\n  ClassDeclaration: [\"id\"],\n  ClassExpression: [\"id\"],\n\n  RestElement: [\"argument\"],\n  UpdateExpression: [\"argument\"],\n\n  ObjectProperty: [\"value\"],\n\n  AssignmentPattern: [\"left\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"],\n\n  VariableDeclaration: [\"declarations\"],\n  VariableDeclarator: [\"id\"],\n};\n",null,"import getBindingIdentifiers from \"./getBindingIdentifiers.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default getOuterBindingIdentifiers as {\n  (node: t.Node, duplicates: true): Record<string, Array<t.Identifier>>;\n  (node: t.Node, duplicates?: false): Record<string, t.Identifier>;\n  (\n    node: t.Node,\n    duplicates?: boolean,\n  ): Record<string, t.Identifier> | Record<string, Array<t.Identifier>>;\n};\n\nfunction getOuterBindingIdentifiers(\n  node: t.Node,\n  duplicates: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  return getBindingIdentifiers(node, duplicates, true);\n}\n",null,"import { VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport type TraversalAncestors = Array<{\n  node: t.Node;\n  key: string;\n  index?: number;\n}>;\n\nexport type TraversalHandler<T> = (\n  this: undefined,\n  node: t.Node,\n  parent: TraversalAncestors,\n  state: T,\n) => void;\n\nexport type TraversalHandlers<T> = {\n  enter?: TraversalHandler<T>;\n  exit?: TraversalHandler<T>;\n};\n\n/**\n * A general AST traversal with both prefix and postfix handlers, and a\n * state object. Exposes ancestry data to each handler so that more complex\n * AST data can be taken into account.\n */\nexport default function traverse<T>(\n  node: t.Node,\n  handlers: TraversalHandler<T> | TraversalHandlers<T>,\n  state?: T,\n): void {\n  if (typeof handlers === \"function\") {\n    handlers = { enter: handlers };\n  }\n\n  const { enter, exit } = handlers;\n\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl<T>(\n  node: any,\n  enter: Function | undefined,\n  exit: Function | undefined,\n  state: T | undefined,\n  ancestors: TraversalAncestors,\n) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  if (enter) enter(node, ancestors, state);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        if (!child) continue;\n\n        ancestors.push({\n          node,\n          key,\n          index: i,\n        });\n\n        traverseSimpleImpl(child, enter, exit, state, ancestors);\n\n        ancestors.pop();\n      }\n    } else if (subNode) {\n      ancestors.push({\n        node,\n        key,\n      });\n\n      traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n\n      ancestors.pop();\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}\n",null,"import getBindingIdentifiers from \"../retrievers/getBindingIdentifiers.ts\";\nimport type * as t from \"../index.ts\";\n/**\n * Check if the input `node` is a binding identifier.\n */\nexport default function isBinding(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  if (\n    grandparent &&\n    node.type === \"Identifier\" &&\n    parent.type === \"ObjectProperty\" &&\n    grandparent.type === \"ObjectExpression\"\n  ) {\n    // We need to special-case this, because getBindingIdentifiers\n    // has an ObjectProperty->value entry for destructuring patterns.\n    return false;\n  }\n\n  const keys =\n    // @ts-expect-error getBindingIdentifiers.keys does not cover all AST types\n    getBindingIdentifiers.keys[parent.type];\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const val =\n        // @ts-expect-error key must present in parent\n        parent[key];\n      if (Array.isArray(val)) {\n        if (val.indexOf(node) >= 0) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}\n",null,"import {\n  isClassDeclaration,\n  isFunctionDeclaration,\n} from \"./generated/index.ts\";\nimport isLet from \"./isLet.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is block scoped.\n */\nexport default function isBlockScoped(node: t.Node): boolean {\n  return isFunctionDeclaration(node) || isClassDeclaration(node) || isLet(node);\n}\n",null,"import { isVariableDeclaration } from \"./generated/index.ts\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a `let` variable declaration.\n */\nexport default function isLet(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node) &&\n    (node.kind !== \"var\" ||\n      // @ts-expect-error Fixme: document private properties\n      node[BLOCK_SCOPED_SYMBOL])\n  );\n}\n",null,"import isType from \"./isType.ts\";\nimport { isIdentifier } from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is definitely immutable.\n */\nexport default function isImmutable(node: t.Node): boolean {\n  if (isType(node.type, \"Immutable\")) return true;\n\n  if (isIdentifier(node)) {\n    if (node.name === \"undefined\") {\n      // immutable!\n      return true;\n    } else {\n      // no idea...\n      return false;\n    }\n  }\n\n  return false;\n}\n",null,"import { NODE_FIELDS, VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if two nodes are equivalent\n */\nexport default function isNodesEquivalent<T extends Partial<t.Node>>(\n  a: T,\n  b: any,\n): b is T {\n  if (\n    typeof a !== \"object\" ||\n    typeof b !== \"object\" ||\n    a == null ||\n    b == null\n  ) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    const val_a =\n      // @ts-expect-error field must present in a\n      a[field];\n    const val_b = b[field];\n    if (typeof val_a !== typeof val_b) {\n      return false;\n    }\n    if (val_a == null && val_b == null) {\n      continue;\n    } else if (val_a == null || val_b == null) {\n      return false;\n    }\n\n    if (Array.isArray(val_a)) {\n      if (!Array.isArray(val_b)) {\n        return false;\n      }\n      if (val_a.length !== val_b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < val_a.length; i++) {\n        if (!isNodesEquivalent(val_a[i], val_b[i])) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (typeof val_a === \"object\" && !visitorKeys?.includes(field)) {\n      for (const key of Object.keys(val_a)) {\n        if (val_a[key] !== val_b[key]) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (!isNodesEquivalent(val_a, val_b)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n",null,"import type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a reference to a bound variable.\n */\nexport default function isReferenced(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case \"PrivateName\":\n      return false;\n\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      // parent.value === node\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return false;\n\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      // @ts-expect-error todo(flow->ts): Property 'source' does not exist on type 'AnyTypeAnnotation'.\n      if (grandparent?.source) {\n        return false;\n      }\n      return parent.local === node;\n\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case \"ImportAttribute\":\n      return false;\n\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return false;\n\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case \"TSEnumMember\":\n      return parent.id !== node;\n\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n  }\n\n  return true;\n}\n",null,"import {\n  isFunction,\n  isCatchClause,\n  isBlockStatement,\n  isScopable,\n  isPattern,\n} from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a scope.\n */\nexport default function isScope(node: t.Node, parent: t.Node): boolean {\n  // If a BlockStatement is an immediate descendent of a Function/CatchClause, it must be in the body.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isBlockStatement(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return false;\n  }\n\n  // If a Pattern is an immediate descendent of a Function/CatchClause, it must be in the params.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isPattern(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return true;\n  }\n\n  return isScopable(node);\n}\n",null,"import { isIdentifier, isImportDefaultSpecifier } from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `specifier` is a `default` import or export.\n */\nexport default function isSpecifierDefault(\n  specifier: t.ModuleSpecifier,\n): boolean {\n  return (\n    isImportDefaultSpecifier(specifier) ||\n    // @ts-expect-error todo(flow->ts): stricter type for specifier\n    isIdentifier(specifier.imported || specifier.exported, {\n      name: \"default\",\n    })\n  );\n}\n",null,"import isValidIdentifier from \"./isValidIdentifier.ts\";\n\nconst RESERVED_WORDS_ES3_ONLY: Set<string> = new Set([\n  \"abstract\",\n  \"boolean\",\n  \"byte\",\n  \"char\",\n  \"double\",\n  \"enum\",\n  \"final\",\n  \"float\",\n  \"goto\",\n  \"implements\",\n  \"int\",\n  \"interface\",\n  \"long\",\n  \"native\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"short\",\n  \"static\",\n  \"synchronized\",\n  \"throws\",\n  \"transient\",\n  \"volatile\",\n]);\n\n/**\n * Check if the input `name` is a valid identifier name according to the ES3 specification.\n *\n * Additional ES3 reserved words are\n */\nexport default function isValidES3Identifier(name: string): boolean {\n  return isValidIdentifier(name) && !RESERVED_WORDS_ES3_ONLY.has(name);\n}\n",null,"import { isVariableDeclaration } from \"./generated/index.ts\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a variable declaration.\n */\nexport default function isVar(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node, { kind: \"var\" }) &&\n    !(\n      // @ts-expect-error document private properties\n      node[BLOCK_SCOPED_SYMBOL]\n    )\n  );\n}\n",null,"// TODO(Babel 8) Remove this file\nif (process.env.BABEL_8_BREAKING) {\n  throw new Error(\n    \"Internal Babel error: This file should only be loaded in Babel 7\",\n  );\n}\n\nimport gatherSequenceExpressions from \"./gatherSequenceExpressions.ts\";\nimport type * as t from \"../index.ts\";\nimport type { DeclarationInfo } from \"./gatherSequenceExpressions.ts\";\n\n/**\n * Turn an array of statement `nodes` into a `SequenceExpression`.\n *\n * Variable declarations are turned into simple assignments and their\n * declarations hoisted to the top of the current scope.\n *\n * Expression statements are just resolved to their expression.\n */\nexport default function toSequenceExpression(\n  nodes: ReadonlyArray<t.Node>,\n  scope: any,\n): t.SequenceExpression | undefined {\n  if (!nodes?.length) return;\n\n  const declars: DeclarationInfo[] = [];\n  const result = gatherSequenceExpressions(nodes, scope, declars);\n  if (!result) return;\n\n  for (const declar of declars) {\n    scope.push(declar);\n  }\n\n  // @ts-expect-error fixme: gatherSequenceExpressions will return an Expression when there are only one element\n  return result;\n}\n",null,"// TODO(Babel 8) Remove this file\nif (process.env.BABEL_8_BREAKING) {\n  throw new Error(\n    \"Internal Babel error: This file should only be loaded in Babel 7\",\n  );\n}\n\nimport getBindingIdentifiers from \"../retrievers/getBindingIdentifiers.ts\";\nimport {\n  isExpression,\n  isExpressionStatement,\n  isVariableDeclaration,\n  isIfStatement,\n  isBlockStatement,\n  isEmptyStatement,\n} from \"../validators/generated/index.ts\";\nimport {\n  sequenceExpression,\n  assignmentExpression,\n  conditionalExpression,\n} from \"../builders/generated/index.ts\";\nimport cloneNode from \"../clone/cloneNode.ts\";\nimport type * as t from \"../index.ts\";\nimport type { Scope } from \"@babel/traverse\";\n\nexport type DeclarationInfo = {\n  kind: t.VariableDeclaration[\"kind\"];\n  id: t.Identifier;\n};\n\nexport default function gatherSequenceExpressions(\n  nodes: ReadonlyArray<t.Node>,\n  scope: Scope,\n  declars: Array<DeclarationInfo>,\n) {\n  const exprs: t.Expression[] = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    // if we encounter emptyStatement before a non-emptyStatement\n    // we want to disregard that\n    if (!isEmptyStatement(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if (isExpression(node)) {\n      exprs.push(node);\n    } else if (isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (isVariableDeclaration(node)) {\n      if (node.kind !== \"var\") return; // bailed\n\n      for (const declar of node.declarations) {\n        const bindings = getBindingIdentifiers(declar);\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: cloneNode(bindings[key]),\n          });\n        }\n\n        if (declar.init) {\n          exprs.push(assignmentExpression(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if (isIfStatement(node)) {\n      const consequent = node.consequent\n        ? gatherSequenceExpressions([node.consequent], scope, declars)\n        : scope.buildUndefinedNode();\n      const alternate = node.alternate\n        ? gatherSequenceExpressions([node.alternate], scope, declars)\n        : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return; // bailed\n\n      exprs.push(conditionalExpression(node.test, consequent, alternate));\n    } else if (isBlockStatement(node)) {\n      const body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return; // bailed\n\n      exprs.push(body);\n    } else if (isEmptyStatement(node)) {\n      // empty statement so ensure the last item is undefined if we're last\n      // checks if emptyStatement is first\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      // bailed, we can't turn this statement into an expression\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return sequenceExpression(exprs);\n  }\n}\n","import 'quill/dist/quill.snow.css';\nimport Quill from 'quill';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const options = {\n    module: {\n      toolbar: {\n        container: '#toolbar',\n        formats: ['bold', 'italic', 'link'],\n      },\n    },\n    theme: 'snow',\n    placeholder: 'Write your post here...',\n  };\n\n  new Quill('#editor', options);\n});\n",null,"import Quill, { Parchment, Range } from './core.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core.js';\n\nimport { AlignClass, AlignStyle } from './formats/align.js';\nimport {\n  DirectionAttribute,\n  DirectionClass,\n  DirectionStyle,\n} from './formats/direction.js';\nimport Indent from './formats/indent.js';\n\nimport Blockquote from './formats/blockquote.js';\nimport Header from './formats/header.js';\nimport List from './formats/list.js';\n\nimport { BackgroundClass, BackgroundStyle } from './formats/background.js';\nimport { ColorClass, ColorStyle } from './formats/color.js';\nimport { FontClass, FontStyle } from './formats/font.js';\nimport { SizeClass, SizeStyle } from './formats/size.js';\n\nimport Bold from './formats/bold.js';\nimport Italic from './formats/italic.js';\nimport Link from './formats/link.js';\nimport Script from './formats/script.js';\nimport Strike from './formats/strike.js';\nimport Underline from './formats/underline.js';\n\nimport Formula from './formats/formula.js';\nimport Image from './formats/image.js';\nimport Video from './formats/video.js';\n\nimport CodeBlock, { Code as InlineCode } from './formats/code.js';\n\nimport Syntax from './modules/syntax.js';\nimport Table from './modules/table.js';\nimport Toolbar from './modules/toolbar.js';\n\nimport Icons from './ui/icons.js';\nimport Picker from './ui/picker.js';\nimport ColorPicker from './ui/color-picker.js';\nimport IconPicker from './ui/icon-picker.js';\nimport Tooltip from './ui/tooltip.js';\n\nimport BubbleTheme from './themes/bubble.js';\nimport SnowTheme from './themes/snow.js';\n\nQuill.register(\n  {\n    'attributors/attribute/direction': DirectionAttribute,\n\n    'attributors/class/align': AlignClass,\n    'attributors/class/background': BackgroundClass,\n    'attributors/class/color': ColorClass,\n    'attributors/class/direction': DirectionClass,\n    'attributors/class/font': FontClass,\n    'attributors/class/size': SizeClass,\n\n    'attributors/style/align': AlignStyle,\n    'attributors/style/background': BackgroundStyle,\n    'attributors/style/color': ColorStyle,\n    'attributors/style/direction': DirectionStyle,\n    'attributors/style/font': FontStyle,\n    'attributors/style/size': SizeStyle,\n  },\n  true,\n);\n\nQuill.register(\n  {\n    'formats/align': AlignClass,\n    'formats/direction': DirectionClass,\n    'formats/indent': Indent,\n\n    'formats/background': BackgroundStyle,\n    'formats/color': ColorStyle,\n    'formats/font': FontClass,\n    'formats/size': SizeClass,\n\n    'formats/blockquote': Blockquote,\n    'formats/code-block': CodeBlock,\n    'formats/header': Header,\n    'formats/list': List,\n\n    'formats/bold': Bold,\n    'formats/code': InlineCode,\n    'formats/italic': Italic,\n    'formats/link': Link,\n    'formats/script': Script,\n    'formats/strike': Strike,\n    'formats/underline': Underline,\n\n    'formats/formula': Formula,\n    'formats/image': Image,\n    'formats/video': Video,\n\n    'modules/syntax': Syntax,\n    'modules/table': Table,\n    'modules/toolbar': Toolbar,\n\n    'themes/bubble': BubbleTheme,\n    'themes/snow': SnowTheme,\n\n    'ui/icons': Icons,\n    'ui/picker': Picker,\n    'ui/icon-picker': IconPicker,\n    'ui/color-picker': ColorPicker,\n    'ui/tooltip': Tooltip,\n  },\n  true,\n);\n\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\nexport { Parchment, Range };\n\nexport default Quill;\n",null,"import Quill, { Parchment, Range } from './core/quill.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core/quill.js';\n\nimport Block, { BlockEmbed } from './blots/block.js';\nimport Break from './blots/break.js';\nimport Container from './blots/container.js';\nimport Cursor from './blots/cursor.js';\nimport Embed from './blots/embed.js';\nimport Inline from './blots/inline.js';\nimport Scroll from './blots/scroll.js';\nimport TextBlot from './blots/text.js';\n\nimport Clipboard from './modules/clipboard.js';\nimport History from './modules/history.js';\nimport Keyboard from './modules/keyboard.js';\nimport Uploader from './modules/uploader.js';\nimport Delta, { Op, OpIterator, AttributeMap } from 'quill-delta';\nimport Input from './modules/input.js';\nimport UINode from './modules/uiNode.js';\n\nexport { Delta, Op, OpIterator, AttributeMap, Parchment, Range };\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nQuill.register({\n  'blots/block': Block,\n  'blots/block/embed': BlockEmbed,\n  'blots/break': Break,\n  'blots/container': Container,\n  'blots/cursor': Cursor,\n  'blots/embed': Embed,\n  'blots/inline': Inline,\n  'blots/scroll': Scroll,\n  'blots/text': TextBlot,\n\n  'modules/clipboard': Clipboard,\n  'modules/history': History,\n  'modules/keyboard': Keyboard,\n  'modules/uploader': Uploader,\n  'modules/input': Input,\n  'modules/uiNode': UINode,\n});\n\nexport default Quill;\n",null,"import { merge } from 'lodash-es';\nimport * as Parchment from 'parchment';\nimport type { Op } from 'quill-delta';\nimport Delta from 'quill-delta';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type Block from '../blots/block.js';\nimport type Scroll from '../blots/scroll.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport Editor from './editor.js';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport instances from './instances.js';\nimport logger from './logger.js';\nimport type { DebugLevel } from './logger.js';\nimport Module from './module.js';\nimport Selection, { Range } from './selection.js';\nimport type { Bounds } from './selection.js';\nimport Composition from './composition.js';\nimport Theme from './theme.js';\nimport type { ThemeConstructor } from './theme.js';\nimport scrollRectIntoView from './utils/scrollRectIntoView.js';\nimport type { Rect } from './utils/scrollRectIntoView.js';\nimport createRegistryWithFormats from './utils/createRegistryWithFormats.js';\n\nconst debug = logger('quill');\n\nconst globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\n/**\n * Options for initializing a Quill instance\n */\nexport interface QuillOptions {\n  theme?: string;\n  debug?: DebugLevel | boolean;\n  registry?: Parchment.Registry;\n  /**\n   * Whether to disable the editing\n   * @default false\n   */\n  readOnly?: boolean;\n\n  /**\n   * Placeholder text to display when the editor is empty\n   * @default \"\"\n   */\n  placeholder?: string;\n  bounds?: HTMLElement | string | null;\n  modules?: Record<string, unknown>;\n\n  /**\n   * A list of formats that are recognized and can exist within the editor contents.\n   * `null` means all formats are allowed.\n   * @default null\n   */\n  formats?: string[] | null;\n}\n\n/**\n * Similar to QuillOptions, but with all properties expanded to their default values,\n * and all selectors resolved to HTMLElements.\n */\nexport interface ExpandedQuillOptions\n  extends Omit<QuillOptions, 'theme' | 'formats'> {\n  theme: ThemeConstructor;\n  registry: Parchment.Registry;\n  container: HTMLElement;\n  modules: Record<string, unknown>;\n  bounds?: HTMLElement | null;\n  readOnly: boolean;\n}\n\nclass Quill {\n  static DEFAULTS = {\n    bounds: null,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true,\n      uploader: true,\n    },\n    placeholder: '',\n    readOnly: false,\n    registry: globalRegistry,\n    theme: 'default',\n  } satisfies Partial<QuillOptions>;\n  static events = Emitter.events;\n  static sources = Emitter.sources;\n  static version = typeof QUILL_VERSION === 'undefined' ? 'dev' : QUILL_VERSION;\n\n  static imports: Record<string, unknown> = {\n    delta: Delta,\n    parchment: Parchment,\n    'core/module': Module,\n    'core/theme': Theme,\n  };\n\n  static debug(limit: DebugLevel | boolean) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n\n  static find(node: Node, bubble = false) {\n    return instances.get(node) || globalRegistry.find(node, bubble);\n  }\n\n  static import(name: 'core/module'): typeof Module;\n  static import(name: `themes/${string}`): typeof Theme;\n  static import(name: 'parchment'): typeof Parchment;\n  static import(name: 'delta'): typeof Delta;\n  static import(name: string): unknown;\n  static import(name: string) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n\n  static register(\n    path:\n      | string\n      | Parchment.BlotConstructor\n      | Parchment.Attributor\n      | Record<string, unknown>,\n    target?: Parchment.BlotConstructor | Parchment.Attributor | boolean,\n    overwrite = false,\n  ) {\n    if (typeof path !== 'string') {\n      const name = 'attrName' in path ? path.attrName : path.blotName;\n      if (typeof name === 'string') {\n        // register(Blot | Attributor, overwrite)\n        // @ts-expect-error\n        this.register(`formats/${name}`, path, target);\n      } else {\n        Object.keys(path).forEach((key) => {\n          // @ts-expect-error\n          this.register(key, path[key], target);\n        });\n      }\n    } else {\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if (\n        (path.startsWith('blots/') || path.startsWith('formats/')) &&\n        target &&\n        typeof target !== 'boolean' &&\n        // @ts-expect-error\n        target.blotName !== 'abstract'\n      ) {\n        globalRegistry.register(target);\n      }\n      // @ts-expect-error\n      if (typeof target.register === 'function') {\n        // @ts-expect-error\n        target.register(globalRegistry);\n      }\n    }\n  }\n\n  container: HTMLElement;\n  root: HTMLDivElement;\n  scroll: Scroll;\n  emitter: Emitter;\n  protected allowReadOnlyEdits: boolean;\n  editor: Editor;\n  composition: Composition;\n  selection: Selection;\n\n  theme: Theme;\n  keyboard: Keyboard;\n  clipboard: Clipboard;\n  history: History;\n  uploader: Uploader;\n\n  options: ExpandedQuillOptions;\n\n  constructor(container: HTMLElement | string, options: QuillOptions = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      debug.error('Invalid Quill container', container);\n      return;\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    const html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.emitter = new Emitter();\n    const scrollBlotName = Parchment.ScrollBlot.blotName;\n    const ScrollBlot = this.options.registry.query(scrollBlotName);\n    if (!ScrollBlot || !('blotName' in ScrollBlot)) {\n      throw new Error(\n        `Cannot initialize Quill without \"${scrollBlotName}\" blot`,\n      );\n    }\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter,\n    }) as Scroll;\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.composition = new Composition(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.addModule('input');\n    this.theme.addModule('uiNode');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, (type) => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => this.editor.update(null, mutations, selectionInfo),\n        source,\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_EMBED_UPDATE, (blot, delta) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => {\n          const change = new Delta()\n            .retain(blot.offset(this))\n            .retain({ [blot.statics.blotName]: delta });\n          return this.editor.update(change, [], selectionInfo);\n        },\n        Quill.sources.USER,\n      );\n    });\n    if (html) {\n      const contents = this.clipboard.convert({\n        html: `${html}<p><br></p>`,\n        text: '\\n',\n      });\n      this.setContents(contents);\n    }\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n\n  addContainer(container: string, refNode?: Node | null): HTMLDivElement;\n  addContainer(container: HTMLElement, refNode?: Node | null): HTMLElement;\n  addContainer(\n    container: string | HTMLElement,\n    refNode: Node | null = null,\n  ): HTMLDivElement | HTMLElement {\n    if (typeof container === 'string') {\n      const className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(range: Range, source?: EmitterSource): Delta;\n  deleteText(index: number, length: number, source?: EmitterSource): Delta;\n  deleteText(\n    index: number | Range,\n    length?: number | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    // @ts-expect-error\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.deleteText(index, length);\n      },\n      source,\n      index,\n      -1 * length,\n    );\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  editReadOnly<T>(modifier: () => T): T {\n    this.allowReadOnlyEdits = true;\n    const value = modifier();\n    this.allowReadOnlyEdits = false;\n    return value;\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus(options: { preventScroll?: boolean } = {}) {\n    this.selection.focus();\n    if (!options.preventScroll) {\n      this.scrollSelectionIntoView();\n    }\n  }\n\n  format(\n    name: string,\n    value: unknown,\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        const range = this.getSelection(true);\n        let change = new Delta();\n        if (range == null) return change;\n        if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\n          change = this.editor.formatLine(range.index, range.length, {\n            [name]: value,\n          });\n        } else if (range.length === 0) {\n          this.selection.format(name, value);\n          return change;\n        } else {\n          change = this.editor.formatText(range.index, range.length, {\n            [name]: value,\n          });\n        }\n        this.setSelection(range, Emitter.sources.SILENT);\n        return change;\n      },\n      source,\n    );\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string | Record<string, unknown>,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      index,\n      length,\n      // @ts-expect-error\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatLine(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  formatText(\n    range: Range,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number | Range,\n    length: number | string,\n    name: string | unknown,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      // @ts-expect-error\n      index,\n      length,\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatText(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  getBounds(index: number | Range, length = 0): Bounds | null {\n    let bounds: Bounds | null = null;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    if (!bounds) return null;\n    const containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width,\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index?: number, length?: number): { [format: string]: unknown };\n  getFormat(range?: Range): {\n    [format: string]: unknown;\n  };\n  getFormat(\n    index: Range | number = this.getSelection(true),\n    length = 0,\n  ): { [format: string]: unknown } {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    }\n    return this.editor.getFormat(index.index, index.length);\n  }\n\n  getIndex(blot: Parchment.Blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index: number) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index: number) {\n    return this.scroll.line(index);\n  }\n\n  getLines(range: Range): (Block | BlockEmbed)[];\n  getLines(index?: number, length?: number): (Block | BlockEmbed)[];\n  getLines(\n    index: Range | number = 0,\n    length = Number.MAX_VALUE,\n  ): (Block | BlockEmbed)[] {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    }\n    return this.scroll.lines(index, length);\n  }\n\n  getModule(name: string) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus: true): Range;\n  getSelection(focus?: boolean): Range | null;\n  getSelection(focus = false): Range | null {\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n\n  getSemanticHTML(range: Range): string;\n  getSemanticHTML(index?: number, length?: number): string;\n  getSemanticHTML(index: Range | number = 0, length?: number) {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getHTML(index, length);\n  }\n\n  getText(range?: Range): string;\n  getText(index?: number, length?: number): string;\n  getText(index: Range | number = 0, length?: number): string {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(\n    index: number,\n    embed: string,\n    value: unknown,\n    source: EmitterSource = Quill.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertEmbed(index, embed, value);\n      },\n      source,\n      index,\n    );\n  }\n\n  insertText(index: number, text: string, source?: EmitterSource): Delta;\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name?: string | Record<string, unknown> | EmitterSource,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    // @ts-expect-error\n    [index, , formats, source] = overload(index, 0, name, value, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertText(index, text, formats);\n      },\n      source,\n      index,\n      text.length,\n    );\n  }\n\n  isEnabled() {\n    return this.scroll.isEnabled();\n  }\n\n  off(...args: Parameters<(typeof Emitter)['prototype']['off']>) {\n    return this.emitter.off(...args);\n  }\n\n  on(\n    event: (typeof Emitter)['events']['TEXT_CHANGE'],\n    handler: (delta: Delta, oldContent: Delta, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['SELECTION_CHANGE'],\n    handler: (range: Range, oldRange: Range, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['EDITOR_CHANGE'],\n    handler: (\n      ...args:\n        | [\n            (typeof Emitter)['events']['TEXT_CHANGE'],\n            Delta,\n            Delta,\n            EmitterSource,\n          ]\n        | [\n            (typeof Emitter)['events']['SELECTION_CHANGE'],\n            Range,\n            Range,\n            EmitterSource,\n          ]\n    ) => void,\n  ): Emitter;\n  on(event: string, ...args: unknown[]): Emitter;\n  on(...args: Parameters<(typeof Emitter)['prototype']['on']>): Emitter {\n    return this.emitter.on(...args);\n  }\n\n  once(...args: Parameters<(typeof Emitter)['prototype']['once']>) {\n    return this.emitter.once(...args);\n  }\n\n  removeFormat(index: number, length: number, source?: EmitterSource): Delta {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.removeFormat(index, length);\n      },\n      source,\n      index,\n    );\n  }\n\n  scrollRectIntoView(rect: Rect) {\n    scrollRectIntoView(this.root, rect);\n  }\n\n  /**\n   * @deprecated Use Quill#scrollSelectionIntoView() instead.\n   */\n  scrollIntoView() {\n    console.warn(\n      'Quill#scrollIntoView() has been deprecated and will be removed in the near future. Please use Quill#scrollSelectionIntoView() instead.',\n    );\n    this.scrollSelectionIntoView();\n  }\n\n  /**\n   * Scroll the current selection into the visible area.\n   * If the selection is already visible, no scrolling will occur.\n   */\n  scrollSelectionIntoView() {\n    const range = this.selection.lastRange;\n    const bounds = range && this.selection.getBounds(range.index, range.length);\n    if (bounds) {\n      this.scrollRectIntoView(bounds);\n    }\n  }\n\n  setContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        const length = this.getLength();\n        // Quill will set empty editor to \\n\n        const delete1 = this.editor.deleteText(0, length);\n        const applied = this.editor.insertContents(0, delta);\n        // Remove extra \\n from empty editor initialization\n        const delete2 = this.editor.deleteText(this.getLength() - 1, 1);\n        return delete1.compose(applied).compose(delete2);\n      },\n      source,\n    );\n  }\n  setSelection(range: Range | null, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(index: number, length?: number, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(\n    index: Range | null | number,\n    length?: EmitterSource | number,\n    source?: EmitterSource,\n  ): void {\n    if (index == null) {\n      // @ts-expect-error https://github.com/microsoft/TypeScript/issues/22609\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      // @ts-expect-error\n      [index, length, , source] = overload(index, length, source);\n      this.selection.setRange(new Range(Math.max(0, index), length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.scrollSelectionIntoView();\n      }\n    }\n  }\n\n  setText(text: string, source: EmitterSource = Emitter.sources.API) {\n    const delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    // TODO this is usually undefined\n    return change;\n  }\n\n  updateContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        return this.editor.applyDelta(delta);\n      },\n      source,\n      true,\n    );\n  }\n}\n\nfunction resolveSelector(selector: string | HTMLElement | null | undefined) {\n  return typeof selector === 'string'\n    ? document.querySelector<HTMLElement>(selector)\n    : selector;\n}\n\nfunction expandModuleConfig(config: Record<string, unknown> | undefined) {\n  return Object.entries(config ?? {}).reduce(\n    (expanded, [key, value]) => ({\n      ...expanded,\n      [key]: value === true ? {} : value,\n    }),\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction omitUndefinedValuesFromOptions(obj: QuillOptions) {\n  return Object.fromEntries(\n    Object.entries(obj).filter((entry) => entry[1] !== undefined),\n  );\n}\n\nfunction expandConfig(\n  containerOrSelector: HTMLElement | string,\n  options: QuillOptions,\n): ExpandedQuillOptions {\n  const container = resolveSelector(containerOrSelector);\n  if (!container) {\n    throw new Error('Invalid Quill container');\n  }\n\n  const shouldUseDefaultTheme =\n    !options.theme || options.theme === Quill.DEFAULTS.theme;\n  const theme = shouldUseDefaultTheme\n    ? Theme\n    : Quill.import(`themes/${options.theme}`);\n  if (!theme) {\n    throw new Error(`Invalid theme ${options.theme}. Did you register it?`);\n  }\n\n  const { modules: quillModuleDefaults, ...quillDefaults } = Quill.DEFAULTS;\n  const { modules: themeModuleDefaults, ...themeDefaults } = theme.DEFAULTS;\n\n  let userModuleOptions = expandModuleConfig(options.modules);\n  // Special case toolbar shorthand\n  if (\n    userModuleOptions != null &&\n    userModuleOptions.toolbar &&\n    userModuleOptions.toolbar.constructor !== Object\n  ) {\n    userModuleOptions = {\n      ...userModuleOptions,\n      toolbar: { container: userModuleOptions.toolbar },\n    };\n  }\n\n  const modules: ExpandedQuillOptions['modules'] = merge(\n    {},\n    expandModuleConfig(quillModuleDefaults),\n    expandModuleConfig(themeModuleDefaults),\n    userModuleOptions,\n  );\n\n  const config = {\n    ...quillDefaults,\n    ...omitUndefinedValuesFromOptions(themeDefaults),\n    ...omitUndefinedValuesFromOptions(options),\n  };\n\n  let registry = options.registry;\n  if (registry) {\n    if (options.formats) {\n      debug.warn('Ignoring \"formats\" option because \"registry\" is specified');\n    }\n  } else {\n    registry = options.formats\n      ? createRegistryWithFormats(options.formats, config.registry, debug)\n      : config.registry;\n  }\n\n  return {\n    ...config,\n    registry,\n    container,\n    theme,\n    modules: Object.entries(modules).reduce(\n      (modulesWithDefaults, [name, value]) => {\n        if (!value) return modulesWithDefaults;\n\n        const moduleClass = Quill.import(`modules/${name}`);\n        if (moduleClass == null) {\n          debug.error(\n            `Cannot load ${name} module. Are you sure you registered it?`,\n          );\n          return modulesWithDefaults;\n        }\n        return {\n          ...modulesWithDefaults,\n          // @ts-expect-error\n          [name]: merge({}, moduleClass.DEFAULTS || {}, value),\n        };\n      },\n      {},\n    ),\n    bounds: resolveSelector(config.bounds),\n  };\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(\n  modifier: () => Delta,\n  source: EmitterSource,\n  index: number | boolean,\n  shift: number | null,\n) {\n  if (\n    !this.isEnabled() &&\n    source === Emitter.sources.USER &&\n    !this.allowReadOnlyEdits\n  ) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  const oldDelta = this.editor.delta;\n  const change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      // @ts-expect-error index should always be number\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    const args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\n\ntype NormalizedIndexLength = [\n  number,\n  number,\n  Record<string, unknown>,\n  EmitterSource,\n];\nfunction overload(index: number, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(range: Range, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: Range | number,\n  length?: number | string | Record<string, unknown> | EmitterSource,\n  name?: string | unknown | Record<string, unknown> | EmitterSource,\n  value?: unknown | EmitterSource,\n  source?: EmitterSource,\n): NormalizedIndexLength {\n  let formats: Record<string, unknown> = {};\n  // @ts-expect-error\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      // @ts-expect-error\n      source = value;\n      value = name;\n      name = length;\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    // @ts-expect-error\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    // @ts-expect-error Fix me later\n    formats = name;\n    // @ts-expect-error\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      // @ts-expect-error\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  // @ts-expect-error\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range: Range, change: Delta, source?: EmitterSource): Range;\nfunction shiftRange(\n  range: Range,\n  index: number,\n  length?: number,\n  source?: EmitterSource,\n): Range;\nfunction shiftRange(\n  range: Range,\n  index: number | Delta,\n  lengthOrSource?: number | EmitterSource,\n  source?: EmitterSource,\n) {\n  const length = typeof lengthOrSource === 'number' ? lengthOrSource : 0;\n  if (range == null) return null;\n  let start;\n  let end;\n  // @ts-expect-error -- TODO: add a better type guard around `index`\n  if (index && typeof index.transformPosition === 'function') {\n    [start, end] = [range.index, range.index + range.length].map((pos) =>\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      index.transformPosition(pos, source !== Emitter.sources.USER),\n    );\n  } else {\n    [start, end] = [range.index, range.index + range.length].map((pos) => {\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      if (pos < index || (pos === index && source === Emitter.sources.USER))\n        return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      return Math.max(index, pos + length);\n    });\n  }\n  return new Range(start, end - start);\n}\n\nexport type { Bounds, DebugLevel, EmitterSource };\nexport { Parchment, Range };\n\nexport { globalRegistry, expandConfig, overload, Quill as default };\n","/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"es\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nexport { default as add } from './add.js';\nexport { default as after } from './after.js';\nexport { default as ary } from './ary.js';\nexport { default as assign } from './assign.js';\nexport { default as assignIn } from './assignIn.js';\nexport { default as assignInWith } from './assignInWith.js';\nexport { default as assignWith } from './assignWith.js';\nexport { default as at } from './at.js';\nexport { default as attempt } from './attempt.js';\nexport { default as before } from './before.js';\nexport { default as bind } from './bind.js';\nexport { default as bindAll } from './bindAll.js';\nexport { default as bindKey } from './bindKey.js';\nexport { default as camelCase } from './camelCase.js';\nexport { default as capitalize } from './capitalize.js';\nexport { default as castArray } from './castArray.js';\nexport { default as ceil } from './ceil.js';\nexport { default as chain } from './chain.js';\nexport { default as chunk } from './chunk.js';\nexport { default as clamp } from './clamp.js';\nexport { default as clone } from './clone.js';\nexport { default as cloneDeep } from './cloneDeep.js';\nexport { default as cloneDeepWith } from './cloneDeepWith.js';\nexport { default as cloneWith } from './cloneWith.js';\nexport { default as commit } from './commit.js';\nexport { default as compact } from './compact.js';\nexport { default as concat } from './concat.js';\nexport { default as cond } from './cond.js';\nexport { default as conforms } from './conforms.js';\nexport { default as conformsTo } from './conformsTo.js';\nexport { default as constant } from './constant.js';\nexport { default as countBy } from './countBy.js';\nexport { default as create } from './create.js';\nexport { default as curry } from './curry.js';\nexport { default as curryRight } from './curryRight.js';\nexport { default as debounce } from './debounce.js';\nexport { default as deburr } from './deburr.js';\nexport { default as defaultTo } from './defaultTo.js';\nexport { default as defaults } from './defaults.js';\nexport { default as defaultsDeep } from './defaultsDeep.js';\nexport { default as defer } from './defer.js';\nexport { default as delay } from './delay.js';\nexport { default as difference } from './difference.js';\nexport { default as differenceBy } from './differenceBy.js';\nexport { default as differenceWith } from './differenceWith.js';\nexport { default as divide } from './divide.js';\nexport { default as drop } from './drop.js';\nexport { default as dropRight } from './dropRight.js';\nexport { default as dropRightWhile } from './dropRightWhile.js';\nexport { default as dropWhile } from './dropWhile.js';\nexport { default as each } from './each.js';\nexport { default as eachRight } from './eachRight.js';\nexport { default as endsWith } from './endsWith.js';\nexport { default as entries } from './entries.js';\nexport { default as entriesIn } from './entriesIn.js';\nexport { default as eq } from './eq.js';\nexport { default as escape } from './escape.js';\nexport { default as escapeRegExp } from './escapeRegExp.js';\nexport { default as every } from './every.js';\nexport { default as extend } from './extend.js';\nexport { default as extendWith } from './extendWith.js';\nexport { default as fill } from './fill.js';\nexport { default as filter } from './filter.js';\nexport { default as find } from './find.js';\nexport { default as findIndex } from './findIndex.js';\nexport { default as findKey } from './findKey.js';\nexport { default as findLast } from './findLast.js';\nexport { default as findLastIndex } from './findLastIndex.js';\nexport { default as findLastKey } from './findLastKey.js';\nexport { default as first } from './first.js';\nexport { default as flatMap } from './flatMap.js';\nexport { default as flatMapDeep } from './flatMapDeep.js';\nexport { default as flatMapDepth } from './flatMapDepth.js';\nexport { default as flatten } from './flatten.js';\nexport { default as flattenDeep } from './flattenDeep.js';\nexport { default as flattenDepth } from './flattenDepth.js';\nexport { default as flip } from './flip.js';\nexport { default as floor } from './floor.js';\nexport { default as flow } from './flow.js';\nexport { default as flowRight } from './flowRight.js';\nexport { default as forEach } from './forEach.js';\nexport { default as forEachRight } from './forEachRight.js';\nexport { default as forIn } from './forIn.js';\nexport { default as forInRight } from './forInRight.js';\nexport { default as forOwn } from './forOwn.js';\nexport { default as forOwnRight } from './forOwnRight.js';\nexport { default as fromPairs } from './fromPairs.js';\nexport { default as functions } from './functions.js';\nexport { default as functionsIn } from './functionsIn.js';\nexport { default as get } from './get.js';\nexport { default as groupBy } from './groupBy.js';\nexport { default as gt } from './gt.js';\nexport { default as gte } from './gte.js';\nexport { default as has } from './has.js';\nexport { default as hasIn } from './hasIn.js';\nexport { default as head } from './head.js';\nexport { default as identity } from './identity.js';\nexport { default as inRange } from './inRange.js';\nexport { default as includes } from './includes.js';\nexport { default as indexOf } from './indexOf.js';\nexport { default as initial } from './initial.js';\nexport { default as intersection } from './intersection.js';\nexport { default as intersectionBy } from './intersectionBy.js';\nexport { default as intersectionWith } from './intersectionWith.js';\nexport { default as invert } from './invert.js';\nexport { default as invertBy } from './invertBy.js';\nexport { default as invoke } from './invoke.js';\nexport { default as invokeMap } from './invokeMap.js';\nexport { default as isArguments } from './isArguments.js';\nexport { default as isArray } from './isArray.js';\nexport { default as isArrayBuffer } from './isArrayBuffer.js';\nexport { default as isArrayLike } from './isArrayLike.js';\nexport { default as isArrayLikeObject } from './isArrayLikeObject.js';\nexport { default as isBoolean } from './isBoolean.js';\nexport { default as isBuffer } from './isBuffer.js';\nexport { default as isDate } from './isDate.js';\nexport { default as isElement } from './isElement.js';\nexport { default as isEmpty } from './isEmpty.js';\nexport { default as isEqual } from './isEqual.js';\nexport { default as isEqualWith } from './isEqualWith.js';\nexport { default as isError } from './isError.js';\nexport { default as isFinite } from './isFinite.js';\nexport { default as isFunction } from './isFunction.js';\nexport { default as isInteger } from './isInteger.js';\nexport { default as isLength } from './isLength.js';\nexport { default as isMap } from './isMap.js';\nexport { default as isMatch } from './isMatch.js';\nexport { default as isMatchWith } from './isMatchWith.js';\nexport { default as isNaN } from './isNaN.js';\nexport { default as isNative } from './isNative.js';\nexport { default as isNil } from './isNil.js';\nexport { default as isNull } from './isNull.js';\nexport { default as isNumber } from './isNumber.js';\nexport { default as isObject } from './isObject.js';\nexport { default as isObjectLike } from './isObjectLike.js';\nexport { default as isPlainObject } from './isPlainObject.js';\nexport { default as isRegExp } from './isRegExp.js';\nexport { default as isSafeInteger } from './isSafeInteger.js';\nexport { default as isSet } from './isSet.js';\nexport { default as isString } from './isString.js';\nexport { default as isSymbol } from './isSymbol.js';\nexport { default as isTypedArray } from './isTypedArray.js';\nexport { default as isUndefined } from './isUndefined.js';\nexport { default as isWeakMap } from './isWeakMap.js';\nexport { default as isWeakSet } from './isWeakSet.js';\nexport { default as iteratee } from './iteratee.js';\nexport { default as join } from './join.js';\nexport { default as kebabCase } from './kebabCase.js';\nexport { default as keyBy } from './keyBy.js';\nexport { default as keys } from './keys.js';\nexport { default as keysIn } from './keysIn.js';\nexport { default as last } from './last.js';\nexport { default as lastIndexOf } from './lastIndexOf.js';\nexport { default as lodash } from './wrapperLodash.js';\nexport { default as lowerCase } from './lowerCase.js';\nexport { default as lowerFirst } from './lowerFirst.js';\nexport { default as lt } from './lt.js';\nexport { default as lte } from './lte.js';\nexport { default as map } from './map.js';\nexport { default as mapKeys } from './mapKeys.js';\nexport { default as mapValues } from './mapValues.js';\nexport { default as matches } from './matches.js';\nexport { default as matchesProperty } from './matchesProperty.js';\nexport { default as max } from './max.js';\nexport { default as maxBy } from './maxBy.js';\nexport { default as mean } from './mean.js';\nexport { default as meanBy } from './meanBy.js';\nexport { default as memoize } from './memoize.js';\nexport { default as merge } from './merge.js';\nexport { default as mergeWith } from './mergeWith.js';\nexport { default as method } from './method.js';\nexport { default as methodOf } from './methodOf.js';\nexport { default as min } from './min.js';\nexport { default as minBy } from './minBy.js';\nexport { default as mixin } from './mixin.js';\nexport { default as multiply } from './multiply.js';\nexport { default as negate } from './negate.js';\nexport { default as next } from './next.js';\nexport { default as noop } from './noop.js';\nexport { default as now } from './now.js';\nexport { default as nth } from './nth.js';\nexport { default as nthArg } from './nthArg.js';\nexport { default as omit } from './omit.js';\nexport { default as omitBy } from './omitBy.js';\nexport { default as once } from './once.js';\nexport { default as orderBy } from './orderBy.js';\nexport { default as over } from './over.js';\nexport { default as overArgs } from './overArgs.js';\nexport { default as overEvery } from './overEvery.js';\nexport { default as overSome } from './overSome.js';\nexport { default as pad } from './pad.js';\nexport { default as padEnd } from './padEnd.js';\nexport { default as padStart } from './padStart.js';\nexport { default as parseInt } from './parseInt.js';\nexport { default as partial } from './partial.js';\nexport { default as partialRight } from './partialRight.js';\nexport { default as partition } from './partition.js';\nexport { default as pick } from './pick.js';\nexport { default as pickBy } from './pickBy.js';\nexport { default as plant } from './plant.js';\nexport { default as property } from './property.js';\nexport { default as propertyOf } from './propertyOf.js';\nexport { default as pull } from './pull.js';\nexport { default as pullAll } from './pullAll.js';\nexport { default as pullAllBy } from './pullAllBy.js';\nexport { default as pullAllWith } from './pullAllWith.js';\nexport { default as pullAt } from './pullAt.js';\nexport { default as random } from './random.js';\nexport { default as range } from './range.js';\nexport { default as rangeRight } from './rangeRight.js';\nexport { default as rearg } from './rearg.js';\nexport { default as reduce } from './reduce.js';\nexport { default as reduceRight } from './reduceRight.js';\nexport { default as reject } from './reject.js';\nexport { default as remove } from './remove.js';\nexport { default as repeat } from './repeat.js';\nexport { default as replace } from './replace.js';\nexport { default as rest } from './rest.js';\nexport { default as result } from './result.js';\nexport { default as reverse } from './reverse.js';\nexport { default as round } from './round.js';\nexport { default as sample } from './sample.js';\nexport { default as sampleSize } from './sampleSize.js';\nexport { default as set } from './set.js';\nexport { default as setWith } from './setWith.js';\nexport { default as shuffle } from './shuffle.js';\nexport { default as size } from './size.js';\nexport { default as slice } from './slice.js';\nexport { default as snakeCase } from './snakeCase.js';\nexport { default as some } from './some.js';\nexport { default as sortBy } from './sortBy.js';\nexport { default as sortedIndex } from './sortedIndex.js';\nexport { default as sortedIndexBy } from './sortedIndexBy.js';\nexport { default as sortedIndexOf } from './sortedIndexOf.js';\nexport { default as sortedLastIndex } from './sortedLastIndex.js';\nexport { default as sortedLastIndexBy } from './sortedLastIndexBy.js';\nexport { default as sortedLastIndexOf } from './sortedLastIndexOf.js';\nexport { default as sortedUniq } from './sortedUniq.js';\nexport { default as sortedUniqBy } from './sortedUniqBy.js';\nexport { default as split } from './split.js';\nexport { default as spread } from './spread.js';\nexport { default as startCase } from './startCase.js';\nexport { default as startsWith } from './startsWith.js';\nexport { default as stubArray } from './stubArray.js';\nexport { default as stubFalse } from './stubFalse.js';\nexport { default as stubObject } from './stubObject.js';\nexport { default as stubString } from './stubString.js';\nexport { default as stubTrue } from './stubTrue.js';\nexport { default as subtract } from './subtract.js';\nexport { default as sum } from './sum.js';\nexport { default as sumBy } from './sumBy.js';\nexport { default as tail } from './tail.js';\nexport { default as take } from './take.js';\nexport { default as takeRight } from './takeRight.js';\nexport { default as takeRightWhile } from './takeRightWhile.js';\nexport { default as takeWhile } from './takeWhile.js';\nexport { default as tap } from './tap.js';\nexport { default as template } from './template.js';\nexport { default as templateSettings } from './templateSettings.js';\nexport { default as throttle } from './throttle.js';\nexport { default as thru } from './thru.js';\nexport { default as times } from './times.js';\nexport { default as toArray } from './toArray.js';\nexport { default as toFinite } from './toFinite.js';\nexport { default as toInteger } from './toInteger.js';\nexport { default as toIterator } from './toIterator.js';\nexport { default as toJSON } from './toJSON.js';\nexport { default as toLength } from './toLength.js';\nexport { default as toLower } from './toLower.js';\nexport { default as toNumber } from './toNumber.js';\nexport { default as toPairs } from './toPairs.js';\nexport { default as toPairsIn } from './toPairsIn.js';\nexport { default as toPath } from './toPath.js';\nexport { default as toPlainObject } from './toPlainObject.js';\nexport { default as toSafeInteger } from './toSafeInteger.js';\nexport { default as toString } from './toString.js';\nexport { default as toUpper } from './toUpper.js';\nexport { default as transform } from './transform.js';\nexport { default as trim } from './trim.js';\nexport { default as trimEnd } from './trimEnd.js';\nexport { default as trimStart } from './trimStart.js';\nexport { default as truncate } from './truncate.js';\nexport { default as unary } from './unary.js';\nexport { default as unescape } from './unescape.js';\nexport { default as union } from './union.js';\nexport { default as unionBy } from './unionBy.js';\nexport { default as unionWith } from './unionWith.js';\nexport { default as uniq } from './uniq.js';\nexport { default as uniqBy } from './uniqBy.js';\nexport { default as uniqWith } from './uniqWith.js';\nexport { default as uniqueId } from './uniqueId.js';\nexport { default as unset } from './unset.js';\nexport { default as unzip } from './unzip.js';\nexport { default as unzipWith } from './unzipWith.js';\nexport { default as update } from './update.js';\nexport { default as updateWith } from './updateWith.js';\nexport { default as upperCase } from './upperCase.js';\nexport { default as upperFirst } from './upperFirst.js';\nexport { default as value } from './value.js';\nexport { default as valueOf } from './valueOf.js';\nexport { default as values } from './values.js';\nexport { default as valuesIn } from './valuesIn.js';\nexport { default as without } from './without.js';\nexport { default as words } from './words.js';\nexport { default as wrap } from './wrap.js';\nexport { default as wrapperAt } from './wrapperAt.js';\nexport { default as wrapperChain } from './wrapperChain.js';\nexport { default as wrapperCommit } from './commit.js';\nexport { default as wrapperLodash } from './wrapperLodash.js';\nexport { default as wrapperNext } from './next.js';\nexport { default as wrapperPlant } from './plant.js';\nexport { default as wrapperReverse } from './wrapperReverse.js';\nexport { default as wrapperToIterator } from './toIterator.js';\nexport { default as wrapperValue } from './wrapperValue.js';\nexport { default as xor } from './xor.js';\nexport { default as xorBy } from './xorBy.js';\nexport { default as xorWith } from './xorWith.js';\nexport { default as zip } from './zip.js';\nexport { default as zipObject } from './zipObject.js';\nexport { default as zipObjectDeep } from './zipObjectDeep.js';\nexport { default as zipWith } from './zipWith.js';\nexport { default } from './lodash.default.js';\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n","import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n",null,"enum Scope {\n  TYPE = (1 << 2) - 1, // 0011 Lower two bits\n  LEVEL = ((1 << 2) - 1) << 2, // 1100 Higher two bits\n\n  ATTRIBUTE = (1 << 0) | LEVEL, // 1101\n  BLOT = (1 << 1) | LEVEL, // 1110\n  INLINE = (1 << 2) | TYPE, // 0111\n  BLOCK = (1 << 3) | TYPE, // 1011\n\n  BLOCK_BLOT = BLOCK & BLOT, // 1010\n  INLINE_BLOT = INLINE & BLOT, // 0110\n  BLOCK_ATTRIBUTE = BLOCK & ATTRIBUTE, // 1001\n  INLINE_ATTRIBUTE = INLINE & ATTRIBUTE, // 0101\n\n  ANY = TYPE | LEVEL,\n}\n\nexport default Scope;\n","import Scope from '../scope.js';\n\nexport interface AttributorOptions {\n  scope?: Scope;\n  whitelist?: string[];\n}\n\nexport default class Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return Array.from(node.attributes).map((item: Attr) => item.name);\n  }\n\n  public scope: Scope;\n  public whitelist: string[] | undefined;\n\n  constructor(\n    public readonly attrName: string,\n    public readonly keyName: string,\n    options: AttributorOptions = {},\n  ) {\n    const attributeBit = Scope.TYPE & Scope.ATTRIBUTE;\n    this.scope =\n      options.scope != null\n        ? // Ignore type bits, force attribute bit\n          (options.scope & Scope.LEVEL) | attributeBit\n        : Scope.ATTRIBUTE;\n    if (options.whitelist != null) {\n      this.whitelist = options.whitelist;\n    }\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    node.setAttribute(this.keyName, value);\n    return true;\n  }\n\n  public canAdd(_node: HTMLElement, value: any): boolean {\n    if (this.whitelist == null) {\n      return true;\n    }\n    if (typeof value === 'string') {\n      return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n    } else {\n      return this.whitelist.indexOf(value) > -1;\n    }\n  }\n\n  public remove(node: HTMLElement): void {\n    node.removeAttribute(this.keyName);\n  }\n\n  public value(node: HTMLElement): any {\n    const value = node.getAttribute(this.keyName);\n    if (this.canAdd(node, value) && value) {\n      return value;\n    }\n    return '';\n  }\n}\n","export default class ParchmentError extends Error {\n  public message: string;\n  public name: string;\n  public stack!: string;\n\n  constructor(message: string) {\n    message = '[Parchment] ' + message;\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n}\n","import Attributor from './attributor/attributor.js';\nimport {\n  type Blot,\n  type BlotConstructor,\n  type Root,\n} from './blot/abstract/blot.js';\nimport ParchmentError from './error.js';\nimport Scope from './scope.js';\n\nexport type RegistryDefinition = Attributor | BlotConstructor;\n\nexport interface RegistryInterface {\n  create(scroll: Root, input: Node | string | Scope, value?: any): Blot;\n  query(query: string | Node | Scope, scope: Scope): RegistryDefinition | null;\n  register(...definitions: any[]): any;\n}\n\nexport default class Registry implements RegistryInterface {\n  public static blots = new WeakMap<Node, Blot>();\n\n  public static find(node?: Node | null, bubble = false): Blot | null {\n    if (node == null) {\n      return null;\n    }\n    if (this.blots.has(node)) {\n      return this.blots.get(node) || null;\n    }\n    if (bubble) {\n      let parentNode: Node | null = null;\n      try {\n        parentNode = node.parentNode;\n      } catch (err) {\n        // Probably hit a permission denied error.\n        // A known case is in Firefox, event targets can be anonymous DIVs\n        // inside an input element.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return null;\n      }\n      return this.find(parentNode, bubble);\n    }\n    return null;\n  }\n\n  private attributes: { [key: string]: Attributor } = {};\n  private classes: { [key: string]: BlotConstructor } = {};\n  private tags: { [key: string]: BlotConstructor } = {};\n  private types: { [key: string]: RegistryDefinition } = {};\n\n  public create(scroll: Root, input: Node | string | Scope, value?: any): Blot {\n    const match = this.query(input);\n    if (match == null) {\n      throw new ParchmentError(`Unable to create ${input} blot`);\n    }\n    const blotClass = match as BlotConstructor;\n    const node =\n      // @ts-expect-error Fix me later\n      input instanceof Node || input.nodeType === Node.TEXT_NODE\n        ? input\n        : blotClass.create(value);\n\n    const blot = new blotClass(scroll, node as Node, value);\n    Registry.blots.set(blot.domNode, blot);\n    return blot;\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    return Registry.find(node, bubble);\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    let match;\n    if (typeof query === 'string') {\n      match = this.types[query] || this.attributes[query];\n      // @ts-expect-error Fix me later\n    } else if (query instanceof Text || query.nodeType === Node.TEXT_NODE) {\n      match = this.types.text;\n    } else if (typeof query === 'number') {\n      if (query & Scope.LEVEL & Scope.BLOCK) {\n        match = this.types.block;\n      } else if (query & Scope.LEVEL & Scope.INLINE) {\n        match = this.types.inline;\n      }\n    } else if (query instanceof Element) {\n      const names = (query.getAttribute('class') || '').split(/\\s+/);\n      names.some((name) => {\n        match = this.classes[name];\n        if (match) {\n          return true;\n        }\n        return false;\n      });\n      match = match || this.tags[query.tagName];\n    }\n    if (match == null) {\n      return null;\n    }\n    if (\n      'scope' in match &&\n      scope & Scope.LEVEL & match.scope &&\n      scope & Scope.TYPE & match.scope\n    ) {\n      return match;\n    }\n    return null;\n  }\n\n  public register(...definitions: RegistryDefinition[]): RegistryDefinition[] {\n    return definitions.map((definition) => {\n      const isBlot = 'blotName' in definition;\n      const isAttr = 'attrName' in definition;\n      if (!isBlot && !isAttr) {\n        throw new ParchmentError('Invalid definition');\n      } else if (isBlot && definition.blotName === 'abstract') {\n        throw new ParchmentError('Cannot register abstract class');\n      }\n      const key = isBlot\n        ? definition.blotName\n        : isAttr\n          ? definition.attrName\n          : (undefined as never); // already handled by above checks\n      this.types[key] = definition;\n\n      if (isAttr) {\n        if (typeof definition.keyName === 'string') {\n          this.attributes[definition.keyName] = definition;\n        }\n      } else if (isBlot) {\n        if (definition.className) {\n          this.classes[definition.className] = definition;\n        }\n        if (definition.tagName) {\n          if (Array.isArray(definition.tagName)) {\n            definition.tagName = definition.tagName.map((tagName: string) => {\n              return tagName.toUpperCase();\n            });\n          } else {\n            definition.tagName = definition.tagName.toUpperCase();\n          }\n          const tagNames = Array.isArray(definition.tagName)\n            ? definition.tagName\n            : [definition.tagName];\n          tagNames.forEach((tag: string) => {\n            if (this.tags[tag] == null || definition.className == null) {\n              this.tags[tag] = definition;\n            }\n          });\n        }\n      }\n      return definition;\n    });\n  }\n}\n","import Attributor from './attributor.js';\n\nfunction match(node: HTMLElement, prefix: string): string[] {\n  const className = node.getAttribute('class') || '';\n  return className\n    .split(/\\s+/)\n    .filter((name) => name.indexOf(`${prefix}-`) === 0);\n}\n\nclass ClassAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('class') || '')\n      .split(/\\s+/)\n      .map((name) => name.split('-').slice(0, -1).join('-'));\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    this.remove(node);\n    node.classList.add(`${this.keyName}-${value}`);\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    const matches = match(node, this.keyName);\n    matches.forEach((name) => {\n      node.classList.remove(name);\n    });\n    if (node.classList.length === 0) {\n      node.removeAttribute('class');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    const result = match(node, this.keyName)[0] || '';\n    const value = result.slice(this.keyName.length + 1); // +1 for hyphen\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default ClassAttributor;\n","import Attributor from './attributor.js';\n\nfunction camelize(name: string): string {\n  const parts = name.split('-');\n  const rest = parts\n    .slice(1)\n    .map((part: string) => part[0].toUpperCase() + part.slice(1))\n    .join('');\n  return parts[0] + rest;\n}\n\nclass StyleAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('style') || '').split(';').map((value) => {\n      const arr = value.split(':');\n      return arr[0].trim();\n    });\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = value;\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = '';\n    if (!node.getAttribute('style')) {\n      node.removeAttribute('style');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    // @ts-expect-error Fix me later\n    const value = node.style[camelize(this.keyName)];\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default StyleAttributor;\n","import type { Formattable } from '../blot/abstract/blot.js';\nimport Registry from '../registry.js';\nimport Scope from '../scope.js';\nimport Attributor from './attributor.js';\nimport ClassAttributor from './class.js';\nimport StyleAttributor from './style.js';\n\nclass AttributorStore {\n  private attributes: { [key: string]: Attributor } = {};\n  private domNode: HTMLElement;\n\n  constructor(domNode: HTMLElement) {\n    this.domNode = domNode;\n    this.build();\n  }\n\n  public attribute(attribute: Attributor, value: any): void {\n    // verb\n    if (value) {\n      if (attribute.add(this.domNode, value)) {\n        if (attribute.value(this.domNode) != null) {\n          this.attributes[attribute.attrName] = attribute;\n        } else {\n          delete this.attributes[attribute.attrName];\n        }\n      }\n    } else {\n      attribute.remove(this.domNode);\n      delete this.attributes[attribute.attrName];\n    }\n  }\n\n  public build(): void {\n    this.attributes = {};\n    const blot = Registry.find(this.domNode);\n    if (blot == null) {\n      return;\n    }\n    const attributes = Attributor.keys(this.domNode);\n    const classes = ClassAttributor.keys(this.domNode);\n    const styles = StyleAttributor.keys(this.domNode);\n    attributes\n      .concat(classes)\n      .concat(styles)\n      .forEach((name) => {\n        const attr = blot.scroll.query(name, Scope.ATTRIBUTE);\n        if (attr instanceof Attributor) {\n          this.attributes[attr.attrName] = attr;\n        }\n      });\n  }\n\n  public copy(target: Formattable): void {\n    Object.keys(this.attributes).forEach((key) => {\n      const value = this.attributes[key].value(this.domNode);\n      target.format(key, value);\n    });\n  }\n\n  public move(target: Formattable): void {\n    this.copy(target);\n    Object.keys(this.attributes).forEach((key) => {\n      this.attributes[key].remove(this.domNode);\n    });\n    this.attributes = {};\n  }\n\n  public values(): { [key: string]: any } {\n    return Object.keys(this.attributes).reduce(\n      (attributes: { [key: string]: any }, name: string) => {\n        attributes[name] = this.attributes[name].value(this.domNode);\n        return attributes;\n      },\n      {},\n    );\n  }\n}\n\nexport default AttributorStore;\n","import ParchmentError from '../../error.js';\nimport Registry from '../../registry.js';\nimport Scope from '../../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './blot.js';\n\nclass ShadowBlot implements Blot {\n  public static blotName = 'abstract';\n  public static className: string;\n  public static requiredContainer: BlotConstructor;\n  public static scope: Scope;\n  public static tagName: string | string[];\n\n  public static create(rawValue?: unknown): Node {\n    if (this.tagName == null) {\n      throw new ParchmentError('Blot definition missing tagName');\n    }\n    let node: HTMLElement;\n    let value: string | number | undefined;\n    if (Array.isArray(this.tagName)) {\n      if (typeof rawValue === 'string') {\n        value = rawValue.toUpperCase();\n        if (parseInt(value, 10).toString() === value) {\n          value = parseInt(value, 10);\n        }\n      } else if (typeof rawValue === 'number') {\n        value = rawValue;\n      }\n      if (typeof value === 'number') {\n        node = document.createElement(this.tagName[value - 1]);\n      } else if (value && this.tagName.indexOf(value) > -1) {\n        node = document.createElement(value);\n      } else {\n        node = document.createElement(this.tagName[0]);\n      }\n    } else {\n      node = document.createElement(this.tagName);\n    }\n    if (this.className) {\n      node.classList.add(this.className);\n    }\n    return node;\n  }\n\n  public prev: Blot | null;\n  public next: Blot | null;\n  // @ts-expect-error Fix me later\n  public parent: Parent;\n\n  // Hack for accessing inherited static methods\n  get statics(): any {\n    return this.constructor;\n  }\n  constructor(\n    public scroll: Root,\n    public domNode: Node,\n  ) {\n    Registry.blots.set(domNode, this);\n    this.prev = null;\n    this.next = null;\n  }\n\n  public attach(): void {\n    // Nothing to do\n  }\n\n  public clone(): Blot {\n    const domNode = this.domNode.cloneNode(false);\n    return this.scroll.create(domNode);\n  }\n\n  public detach(): void {\n    if (this.parent != null) {\n      this.parent.removeChild(this);\n    }\n    Registry.blots.delete(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    const blot = this.isolate(index, length);\n    blot.remove();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    const blot = this.isolate(index, length);\n    if (this.scroll.query(name, Scope.BLOT) != null && value) {\n      blot.wrap(name, value);\n    } else if (this.scroll.query(name, Scope.ATTRIBUTE) != null) {\n      const parent = this.scroll.create(this.statics.scope) as Parent &\n        Formattable;\n      blot.wrap(parent);\n      parent.format(name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const blot =\n      def == null\n        ? this.scroll.create('text', value)\n        : this.scroll.create(value, def);\n    const ref = this.split(index);\n    this.parent.insertBefore(blot, ref || undefined);\n  }\n\n  public isolate(index: number, length: number): Blot {\n    const target = this.split(index);\n    if (target == null) {\n      throw new Error('Attempt to isolate at end');\n    }\n    target.split(length);\n    return target;\n  }\n\n  public length(): number {\n    return 1;\n  }\n\n  public offset(root: Blot = this.parent): number {\n    if (this.parent == null || this === root) {\n      return 0;\n    }\n    return this.parent.children.offset(this) + this.parent.offset(root);\n  }\n\n  public optimize(_context?: { [key: string]: any }): void {\n    if (\n      this.statics.requiredContainer &&\n      !(this.parent instanceof this.statics.requiredContainer)\n    ) {\n      this.wrap(this.statics.requiredContainer.blotName);\n    }\n  }\n\n  public remove(): void {\n    if (this.domNode.parentNode != null) {\n      this.domNode.parentNode.removeChild(this.domNode);\n    }\n    this.detach();\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(replacement, this.next || undefined);\n      this.remove();\n    }\n    return replacement;\n  }\n\n  public split(index: number, _force?: boolean): Blot | null {\n    return index === 0 ? this : this.next;\n  }\n\n  public update(\n    _mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    // Nothing to do by default\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper =\n      typeof name === 'string'\n        ? (this.scroll.create(name, value) as Parent)\n        : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(wrapper, this.next || undefined);\n    }\n    if (typeof wrapper.appendChild !== 'function') {\n      throw new ParchmentError(`Cannot wrap ${name}`);\n    }\n    wrapper.appendChild(this);\n    return wrapper;\n  }\n}\n\nexport default ShadowBlot;\n","import Scope from '../../scope.js';\nimport type { Leaf } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nclass LeafBlot extends ShadowBlot implements Leaf {\n  public static scope = Scope.INLINE_BLOT;\n\n  /**\n   * Returns the value represented by domNode if it is this Blot's type\n   * No checking that domNode can represent this Blot type is required so\n   * applications needing it should check externally before calling.\n   */\n  public static value(_domNode: Node): any {\n    return true;\n  }\n\n  /**\n   * Given location represented by node and offset from DOM Selection Range,\n   * return index to that location.\n   */\n  public index(node: Node, offset: number): number {\n    if (\n      this.domNode === node ||\n      this.domNode.compareDocumentPosition(node) &\n        Node.DOCUMENT_POSITION_CONTAINED_BY\n    ) {\n      return Math.min(offset, 1);\n    }\n    return -1;\n  }\n\n  /**\n   * Given index to location within blot, return node and offset representing\n   * that location, consumable by DOM Selection Range\n   */\n  public position(index: number, _inclusive?: boolean): [Node, number] {\n    const childNodes: Node[] = Array.from(this.parent.domNode.childNodes);\n    let offset = childNodes.indexOf(this.domNode);\n    if (index > 0) {\n      offset += 1;\n    }\n    return [this.parent.domNode, offset];\n  }\n\n  /**\n   * Return value represented by this blot\n   * Should not change without interaction from API or\n   * user change detectable by update()\n   */\n  public value(): any {\n    return {\n      [this.statics.blotName]: this.statics.value(this.domNode) || true,\n    };\n  }\n}\n\nexport default LeafBlot;\n","import type LinkedNode from './linked-node.js';\n\nclass LinkedList<T extends LinkedNode> {\n  public head: T | null;\n  public tail: T | null;\n  public length: number;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  public append(...nodes: T[]): void {\n    this.insertBefore(nodes[0], null);\n    if (nodes.length > 1) {\n      const rest = nodes.slice(1);\n      this.append(...rest);\n    }\n  }\n\n  public at(index: number): T | null {\n    const next = this.iterator();\n    let cur = next();\n    while (cur && index > 0) {\n      index -= 1;\n      cur = next();\n    }\n    return cur;\n  }\n\n  public contains(node: T): boolean {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      if (cur === node) {\n        return true;\n      }\n      cur = next();\n    }\n    return false;\n  }\n\n  public indexOf(node: T): number {\n    const next = this.iterator();\n    let cur = next();\n    let index = 0;\n    while (cur) {\n      if (cur === node) {\n        return index;\n      }\n      index += 1;\n      cur = next();\n    }\n    return -1;\n  }\n\n  public insertBefore(node: T | null, refNode: T | null): void {\n    if (node == null) {\n      return;\n    }\n    this.remove(node);\n    node.next = refNode;\n    if (refNode != null) {\n      node.prev = refNode.prev;\n      if (refNode.prev != null) {\n        refNode.prev.next = node;\n      }\n      refNode.prev = node;\n      if (refNode === this.head) {\n        this.head = node;\n      }\n    } else if (this.tail != null) {\n      this.tail.next = node;\n      node.prev = this.tail;\n      this.tail = node;\n    } else {\n      node.prev = null;\n      this.head = this.tail = node;\n    }\n    this.length += 1;\n  }\n\n  public offset(target: T): number {\n    let index = 0;\n    let cur = this.head;\n    while (cur != null) {\n      if (cur === target) {\n        return index;\n      }\n      index += cur.length();\n      cur = cur.next as T;\n    }\n    return -1;\n  }\n\n  public remove(node: T): void {\n    if (!this.contains(node)) {\n      return;\n    }\n    if (node.prev != null) {\n      node.prev.next = node.next;\n    }\n    if (node.next != null) {\n      node.next.prev = node.prev;\n    }\n    if (node === this.head) {\n      this.head = node.next as T;\n    }\n    if (node === this.tail) {\n      this.tail = node.prev as T;\n    }\n    this.length -= 1;\n  }\n\n  public iterator(curNode: T | null = this.head): () => T | null {\n    // TODO use yield when we can\n    return (): T | null => {\n      const ret = curNode;\n      if (curNode != null) {\n        curNode = curNode.next as T;\n      }\n      return ret;\n    };\n  }\n\n  public find(index: number, inclusive = false): [T | null, number] {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      const length = cur.length();\n      if (\n        index < length ||\n        (inclusive &&\n          index === length &&\n          (cur.next == null || cur.next.length() !== 0))\n      ) {\n        return [cur, index];\n      }\n      index -= length;\n      cur = next();\n    }\n    return [null, 0];\n  }\n\n  public forEach(callback: (cur: T) => void): void {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      callback(cur);\n      cur = next();\n    }\n  }\n\n  public forEachAt(\n    index: number,\n    length: number,\n    callback: (cur: T, offset: number, length: number) => void,\n  ): void {\n    if (length <= 0) {\n      return;\n    }\n    const [startNode, offset] = this.find(index);\n    let curIndex = index - offset;\n    const next = this.iterator(startNode);\n    let cur = next();\n    while (cur && curIndex < index + length) {\n      const curLength = cur.length();\n      if (index > curIndex) {\n        callback(\n          cur,\n          index - curIndex,\n          Math.min(length, curIndex + curLength - index),\n        );\n      } else {\n        callback(cur, 0, Math.min(curLength, index + length - curIndex));\n      }\n      curIndex += curLength;\n      cur = next();\n    }\n  }\n\n  public map(callback: (cur: T) => any): any[] {\n    return this.reduce((memo: T[], cur: T) => {\n      memo.push(callback(cur));\n      return memo;\n    }, []);\n  }\n\n  public reduce<M>(callback: (memo: M, cur: T) => M, memo: M): M {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      memo = callback(memo, cur);\n      cur = next();\n    }\n    return memo;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from '../../collection/linked-list.js';\nimport ParchmentError from '../../error.js';\nimport Scope from '../../scope.js';\nimport type { Blot, BlotConstructor, Parent, Root } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nfunction makeAttachedBlot(node: Node, scroll: Root): Blot {\n  const found = scroll.find(node);\n  if (found) return found;\n  try {\n    return scroll.create(node);\n  } catch (e) {\n    const blot = scroll.create(Scope.INLINE);\n    Array.from(node.childNodes).forEach((child: Node) => {\n      blot.domNode.appendChild(child);\n    });\n    if (node.parentNode) {\n      node.parentNode.replaceChild(blot.domNode, node);\n    }\n    blot.attach();\n    return blot;\n  }\n}\n\nclass ParentBlot extends ShadowBlot implements Parent {\n  /**\n   * Whitelist array of Blots that can be direct children.\n   */\n  public static allowedChildren?: BlotConstructor[];\n\n  /**\n   * Default child blot to be inserted if this blot becomes empty.\n   */\n  public static defaultChild?: BlotConstructor;\n  public static uiClass = '';\n\n  public children!: LinkedList<Blot>;\n  public domNode!: HTMLElement;\n  public uiNode: HTMLElement | null = null;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.build();\n  }\n\n  public appendChild(other: Blot): void {\n    this.insertBefore(other);\n  }\n\n  public attach(): void {\n    super.attach();\n    this.children.forEach((child) => {\n      child.attach();\n    });\n  }\n\n  public attachUI(node: HTMLElement): void {\n    if (this.uiNode != null) {\n      this.uiNode.remove();\n    }\n    this.uiNode = node;\n    if (ParentBlot.uiClass) {\n      this.uiNode.classList.add(ParentBlot.uiClass);\n    }\n    this.uiNode.setAttribute('contenteditable', 'false');\n    this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n  }\n\n  /**\n   * Called during construction, should fill its own children LinkedList.\n   */\n  public build(): void {\n    this.children = new LinkedList<Blot>();\n    // Need to be reversed for if DOM nodes already in order\n    Array.from(this.domNode.childNodes)\n      .filter((node: Node) => node !== this.uiNode)\n      .reverse()\n      .forEach((node: Node) => {\n        try {\n          const child = makeAttachedBlot(node, this.scroll);\n          this.insertBefore(child, this.children.head || undefined);\n        } catch (err) {\n          if (err instanceof ParchmentError) {\n            return;\n          } else {\n            throw err;\n          }\n        }\n      });\n  }\n\n  public deleteAt(index: number, length: number): void {\n    if (index === 0 && length === this.length()) {\n      return this.remove();\n    }\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.deleteAt(offset, childLength);\n    });\n  }\n\n  public descendant<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index: number,\n  ): [T | null, number];\n  public descendant(\n    criteria: (blot: Blot) => boolean,\n    index: number,\n  ): [Blot | null, number];\n  public descendant(criteria: any, index = 0): [Blot | null, number] {\n    const [child, offset] = this.children.find(index);\n    if (\n      (criteria.blotName == null && criteria(child)) ||\n      (criteria.blotName != null && child instanceof criteria)\n    ) {\n      return [child as any, offset];\n    } else if (child instanceof ParentBlot) {\n      return child.descendant(criteria, offset);\n    } else {\n      return [null, -1];\n    }\n  }\n\n  public descendants<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index?: number,\n    length?: number,\n  ): T[];\n  public descendants(\n    criteria: (blot: Blot) => boolean,\n    index?: number,\n    length?: number,\n  ): Blot[];\n  public descendants(\n    criteria: any,\n    index = 0,\n    length: number = Number.MAX_VALUE,\n  ): Blot[] {\n    let descendants: Blot[] = [];\n    let lengthLeft = length;\n    this.children.forEachAt(\n      index,\n      length,\n      (child: Blot, childIndex: number, childLength: number) => {\n        if (\n          (criteria.blotName == null && criteria(child)) ||\n          (criteria.blotName != null && child instanceof criteria)\n        ) {\n          descendants.push(child);\n        }\n        if (child instanceof ParentBlot) {\n          descendants = descendants.concat(\n            child.descendants(criteria, childIndex, lengthLeft),\n          );\n        }\n        lengthLeft -= childLength;\n      },\n    );\n    return descendants;\n  }\n\n  public detach(): void {\n    this.children.forEach((child) => {\n      child.detach();\n    });\n    super.detach();\n  }\n\n  public enforceAllowedChildren(): void {\n    let done = false;\n    this.children.forEach((child: Blot) => {\n      if (done) {\n        return;\n      }\n      const allowed = this.statics.allowedChildren.some(\n        (def: BlotConstructor) => child instanceof def,\n      );\n      if (allowed) {\n        return;\n      }\n      if (child.statics.scope === Scope.BLOCK_BLOT) {\n        if (child.next != null) {\n          this.splitAfter(child);\n        }\n        if (child.prev != null) {\n          this.splitAfter(child.prev);\n        }\n        child.parent.unwrap();\n        done = true;\n      } else if (child instanceof ParentBlot) {\n        child.unwrap();\n      } else {\n        child.remove();\n      }\n    });\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.formatAt(offset, childLength, name, value);\n    });\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const [child, offset] = this.children.find(index);\n    if (child) {\n      child.insertAt(offset, value, def);\n    } else {\n      const blot =\n        def == null\n          ? this.scroll.create('text', value)\n          : this.scroll.create(value, def);\n      this.appendChild(blot);\n    }\n  }\n\n  public insertBefore(childBlot: Blot, refBlot?: Blot | null): void {\n    if (childBlot.parent != null) {\n      childBlot.parent.children.remove(childBlot);\n    }\n    let refDomNode: Node | null = null;\n    this.children.insertBefore(childBlot, refBlot || null);\n    childBlot.parent = this;\n    if (refBlot != null) {\n      refDomNode = refBlot.domNode;\n    }\n    if (\n      this.domNode.parentNode !== childBlot.domNode ||\n      this.domNode.nextSibling !== refDomNode\n    ) {\n      this.domNode.insertBefore(childBlot.domNode, refDomNode);\n    }\n    childBlot.attach();\n  }\n\n  public length(): number {\n    return this.children.reduce((memo, child) => {\n      return memo + child.length();\n    }, 0);\n  }\n\n  public moveChildren(targetParent: Parent, refNode?: Blot | null): void {\n    this.children.forEach((child) => {\n      targetParent.insertBefore(child, refNode);\n    });\n  }\n\n  public optimize(context?: { [key: string]: any }): void {\n    super.optimize(context);\n    this.enforceAllowedChildren();\n    if (this.uiNode != null && this.uiNode !== this.domNode.firstChild) {\n      this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n    }\n    if (this.children.length === 0) {\n      if (this.statics.defaultChild != null) {\n        const child = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(child);\n        // TODO double check if necessary\n        // child.optimize(context);\n      } else {\n        this.remove();\n      }\n    }\n  }\n\n  public path(index: number, inclusive = false): [Blot, number][] {\n    const [child, offset] = this.children.find(index, inclusive);\n    const position: [Blot, number][] = [[this, index]];\n    if (child instanceof ParentBlot) {\n      return position.concat(child.path(offset, inclusive));\n    } else if (child != null) {\n      position.push([child, offset]);\n    }\n    return position;\n  }\n\n  public removeChild(child: Blot): void {\n    this.children.remove(child);\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (replacement instanceof ParentBlot) {\n      this.moveChildren(replacement);\n    }\n    return super.replaceWith(replacement);\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.clone() as ParentBlot;\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    this.children.forEachAt(index, this.length(), (child, offset, _length) => {\n      const split = child.split(offset, force);\n      if (split != null) {\n        after.appendChild(split);\n      }\n    });\n    return after;\n  }\n\n  public splitAfter(child: Blot): Parent {\n    const after = this.clone() as ParentBlot;\n    while (child.next != null) {\n      after.appendChild(child.next);\n    }\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    return after;\n  }\n\n  public unwrap(): void {\n    if (this.parent) {\n      this.moveChildren(this.parent, this.next || undefined);\n    }\n    this.remove();\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    const addedNodes: Node[] = [];\n    const removedNodes: Node[] = [];\n    mutations.forEach((mutation) => {\n      if (mutation.target === this.domNode && mutation.type === 'childList') {\n        addedNodes.push(...mutation.addedNodes);\n        removedNodes.push(...mutation.removedNodes);\n      }\n    });\n    removedNodes.forEach((node: Node) => {\n      // Check node has actually been removed\n      // One exception is Chrome does not immediately remove IFRAMEs\n      // from DOM but MutationRecord is correct in its reported removal\n      if (\n        node.parentNode != null &&\n        // @ts-expect-error Fix me later\n        node.tagName !== 'IFRAME' &&\n        document.body.compareDocumentPosition(node) &\n          Node.DOCUMENT_POSITION_CONTAINED_BY\n      ) {\n        return;\n      }\n      const blot = this.scroll.find(node);\n      if (blot == null) {\n        return;\n      }\n      if (\n        blot.domNode.parentNode == null ||\n        blot.domNode.parentNode === this.domNode\n      ) {\n        blot.detach();\n      }\n    });\n    addedNodes\n      .filter((node) => {\n        return node.parentNode === this.domNode && node !== this.uiNode;\n      })\n      .sort((a, b) => {\n        if (a === b) {\n          return 0;\n        }\n        if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n          return 1;\n        }\n        return -1;\n      })\n      .forEach((node) => {\n        let refBlot: Blot | null = null;\n        if (node.nextSibling != null) {\n          refBlot = this.scroll.find(node.nextSibling);\n        }\n        const blot = makeAttachedBlot(node, this.scroll);\n        if (blot.next !== refBlot || blot.next == null) {\n          if (blot.parent != null) {\n            blot.parent.removeChild(this);\n          }\n          this.insertBefore(blot, refBlot || undefined);\n        }\n      });\n    this.enforceAllowedChildren();\n  }\n}\n\nexport default ParentBlot;\n","import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\n\n// Shallow object comparison\nfunction isEqual(\n  obj1: Record<string, unknown>,\n  obj2: Record<string, unknown>,\n): boolean {\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  for (const prop in obj1) {\n    if (obj1[prop] !== obj2[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass InlineBlot extends ParentBlot implements Formattable {\n  public static allowedChildren: BlotConstructor[] = [InlineBlot, LeafBlot];\n  public static blotName = 'inline';\n  public static scope = Scope.INLINE_BLOT;\n  public static tagName: string | string[] = 'SPAN';\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(InlineBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n    return undefined;\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    if (name === this.statics.blotName && !value) {\n      this.children.forEach((child) => {\n        if (!(child instanceof InlineBlot)) {\n          child = child.wrap(InlineBlot.blotName, true);\n        }\n        this.attributes.copy(child as InlineBlot);\n      });\n      this.unwrap();\n    } else {\n      const format = this.scroll.query(name, Scope.INLINE);\n      if (format == null) {\n        return;\n      }\n      if (format instanceof Attributor) {\n        this.attributes.attribute(format, value);\n      } else if (\n        value &&\n        (name !== this.statics.blotName || this.formats()[name] !== value)\n      ) {\n        this.replaceWith(name, value);\n      }\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (\n      this.formats()[name] != null ||\n      this.scroll.query(name, Scope.ATTRIBUTE)\n    ) {\n      const blot = this.isolate(index, length) as InlineBlot;\n      blot.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    const formats = this.formats();\n    if (Object.keys(formats).length === 0) {\n      return this.unwrap(); // unformatted span\n    }\n    const next = this.next;\n    if (\n      next instanceof InlineBlot &&\n      next.prev === this &&\n      isEqual(formats, next.formats())\n    ) {\n      next.moveChildren(this);\n      next.remove();\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as InlineBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper = super.wrap(name, value);\n    if (wrapper instanceof InlineBlot) {\n      this.attributes.move(wrapper);\n    }\n    return wrapper;\n  }\n}\n\nexport default InlineBlot;\n","import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\nimport InlineBlot from './inline.js';\n\nclass BlockBlot extends ParentBlot implements Formattable {\n  public static blotName = 'block';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[] = 'P';\n  public static allowedChildren: BlotConstructor[] = [\n    InlineBlot,\n    BlockBlot,\n    LeafBlot,\n  ];\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(BlockBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    const format = this.scroll.query(name, Scope.BLOCK);\n    if (format == null) {\n      return;\n    } else if (format instanceof Attributor) {\n      this.attributes.attribute(format, value);\n    } else if (name === this.statics.blotName && !value) {\n      this.replaceWith(BlockBlot.blotName);\n    } else if (\n      value &&\n      (name !== this.statics.blotName || this.formats()[name] !== value)\n    ) {\n      this.replaceWith(name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (this.scroll.query(name, Scope.BLOCK) != null) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null || this.scroll.query(value, Scope.INLINE) != null) {\n      // Insert text or inline\n      super.insertAt(index, value, def);\n    } else {\n      const after = this.split(index);\n      if (after != null) {\n        const blot = this.scroll.create(value, def);\n        after.parent.insertBefore(blot, after);\n      } else {\n        throw new Error('Attempt to insertAt after block boundaries');\n      }\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as BlockBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n}\n\nexport default BlockBlot;\n","import Scope from '../../scope.js';\nimport BlockBlot from '../block.js';\nimport ParentBlot from './parent.js';\n\nclass ContainerBlot extends ParentBlot {\n  public static blotName = 'container';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[];\n\n  public prev!: BlockBlot | ContainerBlot | null;\n  public next!: BlockBlot | ContainerBlot | null;\n\n  public checkMerge(): boolean {\n    return (\n      this.next !== null && this.next.statics.blotName === this.statics.blotName\n    );\n  }\n\n  public deleteAt(index: number, length: number): void {\n    super.deleteAt(index, length);\n    this.enforceAllowedChildren();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    super.formatAt(index, length, name, value);\n    this.enforceAllowedChildren();\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    super.insertAt(index, value, def);\n    this.enforceAllowedChildren();\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    if (this.children.length > 0 && this.next != null && this.checkMerge()) {\n      this.next.moveChildren(this);\n      this.next.remove();\n    }\n  }\n}\n\nexport default ContainerBlot;\n","import type { Formattable, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass EmbedBlot extends LeafBlot implements Formattable {\n  public static formats(_domNode: HTMLElement, _scroll: Root): any {\n    return undefined;\n  }\n\n  public format(name: string, value: any): void {\n    // super.formatAt wraps, which is what we want in general,\n    // but this allows subclasses to overwrite for formats\n    // that just apply to particular embeds\n    super.formatAt(0, this.length(), name, value);\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (index === 0 && length === this.length()) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    return this.statics.formats(this.domNode, this.scroll);\n  }\n}\n\nexport default EmbedBlot;\n","import Registry, { type RegistryDefinition } from '../registry.js';\nimport Scope from '../scope.js';\nimport type { Blot, BlotConstructor, Root } from './abstract/blot.js';\nimport ContainerBlot from './abstract/container.js';\nimport ParentBlot from './abstract/parent.js';\nimport BlockBlot from './block.js';\n\nconst OBSERVER_CONFIG = {\n  attributes: true,\n  characterData: true,\n  characterDataOldValue: true,\n  childList: true,\n  subtree: true,\n};\n\nconst MAX_OPTIMIZE_ITERATIONS = 100;\n\nclass ScrollBlot extends ParentBlot implements Root {\n  public static blotName = 'scroll';\n  public static defaultChild = BlockBlot;\n  public static allowedChildren: BlotConstructor[] = [BlockBlot, ContainerBlot];\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName = 'DIV';\n\n  public observer: MutationObserver;\n\n  constructor(\n    public registry: Registry,\n    node: HTMLDivElement,\n  ) {\n    // @ts-expect-error scroll is the root with no parent\n    super(null, node);\n    this.scroll = this;\n    this.build();\n    this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n      this.update(mutations);\n    });\n    this.observer.observe(this.domNode, OBSERVER_CONFIG);\n    this.attach();\n  }\n\n  public create(input: Node | string | Scope, value?: any): Blot {\n    return this.registry.create(this, input, value);\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    const blot = this.registry.find(node, bubble);\n    if (!blot) {\n      return null;\n    }\n    if (blot.scroll === this) {\n      return blot;\n    }\n    return bubble ? this.find(blot.scroll.domNode.parentNode, true) : null;\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    return this.registry.query(query, scope);\n  }\n\n  public register(...definitions: RegistryDefinition[]) {\n    return this.registry.register(...definitions);\n  }\n\n  public build(): void {\n    if (this.scroll == null) {\n      return;\n    }\n    super.build();\n  }\n\n  public detach(): void {\n    super.detach();\n    this.observer.disconnect();\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.update();\n    if (index === 0 && length === this.length()) {\n      this.children.forEach((child) => {\n        child.remove();\n      });\n    } else {\n      super.deleteAt(index, length);\n    }\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.update();\n    super.formatAt(index, length, name, value);\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    this.update();\n    super.insertAt(index, value, def);\n  }\n\n  public optimize(context?: { [key: string]: any }): void;\n  public optimize(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void;\n  public optimize(mutations: any = [], context: any = {}): void {\n    super.optimize(context);\n    const mutationsMap = context.mutationsMap || new WeakMap();\n    // We must modify mutations directly, cannot make copy and then modify\n    let records = Array.from(this.observer.takeRecords());\n    // Array.push currently seems to be implemented by a non-tail recursive function\n    // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n    while (records.length > 0) {\n      mutations.push(records.pop());\n    }\n    const mark = (blot: Blot | null, markParent = true): void => {\n      if (blot == null || blot === this) {\n        return;\n      }\n      if (blot.domNode.parentNode == null) {\n        return;\n      }\n      if (!mutationsMap.has(blot.domNode)) {\n        mutationsMap.set(blot.domNode, []);\n      }\n      if (markParent) {\n        mark(blot.parent);\n      }\n    };\n    const optimize = (blot: Blot): void => {\n      // Post-order traversal\n      if (!mutationsMap.has(blot.domNode)) {\n        return;\n      }\n      if (blot instanceof ParentBlot) {\n        blot.children.forEach(optimize);\n      }\n      mutationsMap.delete(blot.domNode);\n      blot.optimize(context);\n    };\n    let remaining = mutations;\n    for (let i = 0; remaining.length > 0; i += 1) {\n      if (i >= MAX_OPTIMIZE_ITERATIONS) {\n        throw new Error('[Parchment] Maximum optimize iterations reached');\n      }\n      remaining.forEach((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return;\n        }\n        if (blot.domNode === mutation.target) {\n          if (mutation.type === 'childList') {\n            mark(this.find(mutation.previousSibling, false));\n            Array.from(mutation.addedNodes).forEach((node: Node) => {\n              const child = this.find(node, false);\n              mark(child, false);\n              if (child instanceof ParentBlot) {\n                child.children.forEach((grandChild: Blot) => {\n                  mark(grandChild, false);\n                });\n              }\n            });\n          } else if (mutation.type === 'attributes') {\n            mark(blot.prev);\n          }\n        }\n        mark(blot);\n      });\n      this.children.forEach(optimize);\n      remaining = Array.from(this.observer.takeRecords());\n      records = remaining.slice();\n      while (records.length > 0) {\n        mutations.push(records.pop());\n      }\n    }\n  }\n\n  public update(\n    mutations?: MutationRecord[],\n    context: { [key: string]: any } = {},\n  ): void {\n    mutations = mutations || this.observer.takeRecords();\n    const mutationsMap = new WeakMap();\n    mutations\n      .map((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return null;\n        }\n        if (mutationsMap.has(blot.domNode)) {\n          mutationsMap.get(blot.domNode).push(mutation);\n          return null;\n        } else {\n          mutationsMap.set(blot.domNode, [mutation]);\n          return blot;\n        }\n      })\n      .forEach((blot: Blot | null) => {\n        if (blot != null && blot !== this && mutationsMap.has(blot.domNode)) {\n          blot.update(mutationsMap.get(blot.domNode) || [], context);\n        }\n      });\n    context.mutationsMap = mutationsMap;\n    if (mutationsMap.has(this.domNode)) {\n      super.update(mutationsMap.get(this.domNode), context);\n    }\n    this.optimize(mutations, context);\n  }\n}\n\nexport default ScrollBlot;\n","import Scope from '../scope.js';\nimport type { Blot, Leaf, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass TextBlot extends LeafBlot implements Leaf {\n  public static readonly blotName = 'text';\n  public static scope = Scope.INLINE_BLOT;\n\n  public static create(value: string): Text {\n    return document.createTextNode(value);\n  }\n\n  public static value(domNode: Text): string {\n    return domNode.data;\n  }\n\n  public domNode!: Text;\n  protected text: string;\n\n  constructor(scroll: Root, node: Node) {\n    super(scroll, node);\n    this.text = this.statics.value(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.domNode.data = this.text =\n      this.text.slice(0, index) + this.text.slice(index + length);\n  }\n\n  public index(node: Node, offset: number): number {\n    if (this.domNode === node) {\n      return offset;\n    }\n    return -1;\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null) {\n      this.text = this.text.slice(0, index) + value + this.text.slice(index);\n      this.domNode.data = this.text;\n    } else {\n      super.insertAt(index, value, def);\n    }\n  }\n\n  public length(): number {\n    return this.text.length;\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    this.text = this.statics.value(this.domNode);\n    if (this.text.length === 0) {\n      this.remove();\n    } else if (this.next instanceof TextBlot && this.next.prev === this) {\n      this.insertAt(this.length(), (this.next as TextBlot).value());\n      this.next.remove();\n    }\n  }\n\n  public position(index: number, _inclusive = false): [Node, number] {\n    return [this.domNode, index];\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.scroll.create(this.domNode.splitText(index));\n    this.parent.insertBefore(after, this.next || undefined);\n    this.text = this.statics.value(this.domNode);\n    return after;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.domNode\n        );\n      })\n    ) {\n      this.text = this.statics.value(this.domNode);\n    }\n  }\n\n  public value(): string {\n    return this.text;\n  }\n}\n\nexport default TextBlot;\n",null,null,"/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @param {boolean} [cleanup] Apply semantic cleanup before returning.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, cleanup, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  if (cleanup) {\n    diff_cleanupSemantic(diffs);\n  }\n  return diffs;\n}\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)],\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2],\n    ];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n}\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = delta % 2 !== 0;\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length &&\n        y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length &&\n        y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) ===\n          text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2],\n  ];\n}\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n}\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\nfunction diff_commonOverlap_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (\n      found == 0 ||\n      text1.substring(text_length - length) == text2.substring(0, length)\n    ) {\n      best = length;\n      length++;\n    }\n  }\n}\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null; // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = \"\";\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i),\n        shorttext.substring(j)\n      );\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i),\n        shorttext.substring(0, j)\n      );\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common =\n          shorttext.substring(j - suffixLength, j) +\n          shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a,\n        best_longtext_b,\n        best_shorttext_a,\n        best_shorttext_b,\n        best_common,\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 4)\n  );\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 2)\n  );\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n}\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemantic(diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0; // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (\n        lastequality &&\n        lastequality.length <=\n          Math.max(length_insertions1, length_deletions1) &&\n        lastequality.length <= Math.max(length_insertions2, length_deletions2)\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [\n          DIFF_DELETE,\n          lastequality,\n        ]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0; // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n  diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (\n      diffs[pointer - 1][0] == DIFF_DELETE &&\n      diffs[pointer][0] == DIFF_INSERT\n    ) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (\n          overlap_length1 >= deletion.length / 2 ||\n          overlap_length1 >= insertion.length / 2\n        ) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            insertion.substring(0, overlap_length1),\n          ]);\n          diffs[pointer - 1][1] = deletion.substring(\n            0,\n            deletion.length - overlap_length1\n          );\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (\n          overlap_length2 >= deletion.length / 2 ||\n          overlap_length2 >= insertion.length / 2\n        ) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            deletion.substring(0, overlap_length2),\n          ]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(\n            0,\n            insertion.length - overlap_length2\n          );\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n}\n\nvar nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\nvar whitespaceRegex_ = /\\s/;\nvar linebreakRegex_ = /[\\r\\n]/;\nvar blanklineEndRegex_ = /\\n\\r?\\n$/;\nvar blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemanticLossless(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n    var lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n    var lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n    var blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n    var blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] == DIFF_EQUAL &&\n      diffs[pointer + 1][0] == DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore =\n        diff_cleanupSemanticScore_(equality1, edit) +\n        diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score =\n          diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n}\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = \"\";\n  var text_insert = \"\";\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (\n            previous_equality >= 0 &&\n            ends_with_pair_start(diffs[previous_equality][1])\n          ) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(\n              0,\n              -1\n            );\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(\n                  0,\n                  commonlength\n                );\n              } else {\n                diffs.splice(0, 0, [\n                  DIFF_EQUAL,\n                  text_insert.substring(0, commonlength),\n                ]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) +\n                diffs[pointer][1];\n              text_insert = text_insert.substring(\n                0,\n                text_insert.length - commonlength\n              );\n              text_delete = text_delete.substring(\n                0,\n                text_delete.length - commonlength\n              );\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(\n              pointer - n,\n              n,\n              [DIFF_DELETE, text_delete],\n              [DIFF_INSERT, text_insert]\n            );\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = \"\";\n        text_insert = \"\";\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop(); // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      if (\n        diffs[pointer][1].substring(\n          diffs[pointer][1].length - diffs[pointer - 1][1].length\n        ) === diffs[pointer - 1][1]\n      ) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] =\n          diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(\n            0,\n            diffs[pointer][1].length - diffs[pointer - 1][1].length\n          );\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (\n        diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]\n      ) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n}\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xd800 && charCode <= 0xdbff;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xdc00 && charCode <= 0xdfff;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after],\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange =\n    typeof cursor_pos === \"number\"\n      ? { index: cursor_pos, length: 0 }\n      : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === \"number\" ? null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos, cleanup) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, cleanup, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n",null,null,null,null,null,null,null,"import { cloneDeep, isEqual, merge } from 'lodash-es';\nimport { LeafBlot, EmbedBlot, Scope, ParentBlot } from 'parchment';\nimport type { Blot } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Block, { BlockEmbed, bubbleFormats } from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport { Range } from './selection.js';\n\nconst ASCII = /^[ -~]*$/;\n\ntype SelectionInfo = {\n  newRange: Range;\n  oldRange: Range;\n};\n\nclass Editor {\n  scroll: Scroll;\n  delta: Delta;\n\n  constructor(scroll: Scroll) {\n    this.scroll = scroll;\n    this.delta = this.getDelta();\n  }\n\n  applyDelta(delta: Delta): Delta {\n    this.scroll.update();\n    let scrollLength = this.scroll.length();\n    this.scroll.batchStart();\n    const normalizedDelta = normalizeDelta(delta);\n    const deleteDelta = new Delta();\n    const normalizedOps = splitOpLines(normalizedDelta.ops.slice());\n    normalizedOps.reduce((index, op) => {\n      const length = Op.length(op);\n      let attributes = op.attributes || {};\n      let isImplicitNewlinePrepended = false;\n      let isImplicitNewlineAppended = false;\n      if (op.insert != null) {\n        deleteDelta.retain(length);\n        if (typeof op.insert === 'string') {\n          const text = op.insert;\n          isImplicitNewlineAppended =\n            !text.endsWith('\\n') &&\n            (scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]);\n          this.scroll.insertAt(index, text);\n          const [line, offset] = this.scroll.line(index);\n          let formats = merge({}, bubbleFormats(line));\n          if (line instanceof Block) {\n            const [leaf] = line.descendant(LeafBlot, offset);\n            if (leaf) {\n              formats = merge(formats, bubbleFormats(leaf));\n            }\n          }\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        } else if (typeof op.insert === 'object') {\n          const key = Object.keys(op.insert)[0]; // There should only be one key\n          if (key == null) return index;\n          const isInlineEmbed = this.scroll.query(key, Scope.INLINE) != null;\n          if (isInlineEmbed) {\n            if (\n              scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]\n            ) {\n              isImplicitNewlineAppended = true;\n            }\n          } else if (index > 0) {\n            const [leaf, offset] = this.scroll.descendant(LeafBlot, index - 1);\n            if (leaf instanceof TextBlot) {\n              const text = leaf.value();\n              if (text[offset] !== '\\n') {\n                isImplicitNewlinePrepended = true;\n              }\n            } else if (\n              leaf instanceof EmbedBlot &&\n              leaf.statics.scope === Scope.INLINE_BLOT\n            ) {\n              isImplicitNewlinePrepended = true;\n            }\n          }\n          this.scroll.insertAt(index, key, op.insert[key]);\n\n          if (isInlineEmbed) {\n            const [leaf] = this.scroll.descendant(LeafBlot, index);\n            if (leaf) {\n              const formats = merge({}, bubbleFormats(leaf));\n              attributes = AttributeMap.diff(formats, attributes) || {};\n            }\n          }\n        }\n        scrollLength += length;\n      } else {\n        deleteDelta.push(op);\n\n        if (op.retain !== null && typeof op.retain === 'object') {\n          const key = Object.keys(op.retain)[0];\n          if (key == null) return index;\n          this.scroll.updateEmbedAt(index, key, op.retain[key]);\n        }\n      }\n      Object.keys(attributes).forEach((name) => {\n        this.scroll.formatAt(index, length, name, attributes[name]);\n      });\n      const prependedLength = isImplicitNewlinePrepended ? 1 : 0;\n      const addedLength = isImplicitNewlineAppended ? 1 : 0;\n      scrollLength += prependedLength + addedLength;\n      deleteDelta.retain(prependedLength);\n      deleteDelta.delete(addedLength);\n      return index + length + prependedLength + addedLength;\n    }, 0);\n    deleteDelta.reduce((index, op) => {\n      if (typeof op.delete === 'number') {\n        this.scroll.deleteAt(index, op.delete);\n        return index;\n      }\n      return index + Op.length(op);\n    }, 0);\n    this.scroll.batchEnd();\n    this.scroll.optimize();\n    return this.update(normalizedDelta);\n  }\n\n  deleteText(index: number, length: number): Delta {\n    this.scroll.deleteAt(index, length);\n    return this.update(new Delta().retain(index).delete(length));\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    this.scroll.update();\n    Object.keys(formats).forEach((format) => {\n      this.scroll.lines(index, Math.max(length, 1)).forEach((line) => {\n        line.format(format, formats[format]);\n      });\n    });\n    this.scroll.optimize();\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, length, format, formats[format]);\n    });\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  getContents(index: number, length: number): Delta {\n    return this.delta.slice(index, index + length);\n  }\n\n  getDelta(): Delta {\n    return this.scroll.lines().reduce((delta, line) => {\n      return delta.concat(line.delta());\n    }, new Delta());\n  }\n\n  getFormat(index: number, length = 0): Record<string, unknown> {\n    let lines: (Block | BlockEmbed)[] = [];\n    let leaves: LeafBlot[] = [];\n    if (length === 0) {\n      this.scroll.path(index).forEach((path) => {\n        const [blot] = path;\n        if (blot instanceof Block) {\n          lines.push(blot);\n        } else if (blot instanceof LeafBlot) {\n          leaves.push(blot);\n        }\n      });\n    } else {\n      lines = this.scroll.lines(index, length);\n      leaves = this.scroll.descendants(LeafBlot, index, length);\n    }\n    const [lineFormats, leafFormats] = [lines, leaves].map((blots) => {\n      const blot = blots.shift();\n      if (blot == null) return {};\n      let formats = bubbleFormats(blot);\n      while (Object.keys(formats).length > 0) {\n        const blot = blots.shift();\n        if (blot == null) return formats;\n        formats = combineFormats(bubbleFormats(blot), formats);\n      }\n      return formats;\n    });\n    return { ...lineFormats, ...leafFormats };\n  }\n\n  getHTML(index: number, length: number): string {\n    const [line, lineOffset] = this.scroll.line(index);\n    if (line) {\n      const lineLength = line.length();\n      const isWithinLine = line.length() >= lineOffset + length;\n      if (isWithinLine && !(lineOffset === 0 && length === lineLength)) {\n        return convertHTML(line, lineOffset, length, true);\n      }\n      return convertHTML(this.scroll, index, length, true);\n    }\n    return '';\n  }\n\n  getText(index: number, length: number): string {\n    return this.getContents(index, length)\n      .filter((op) => typeof op.insert === 'string')\n      .map((op) => op.insert)\n      .join('');\n  }\n\n  insertContents(index: number, contents: Delta): Delta {\n    const normalizedDelta = normalizeDelta(contents);\n    const change = new Delta().retain(index).concat(normalizedDelta);\n    this.scroll.insertContents(index, normalizedDelta);\n    return this.update(change);\n  }\n\n  insertEmbed(index: number, embed: string, value: unknown): Delta {\n    this.scroll.insertAt(index, embed, value);\n    return this.update(new Delta().retain(index).insert({ [embed]: value }));\n  }\n\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    this.scroll.insertAt(index, text);\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, text.length, format, formats[format]);\n    });\n    return this.update(\n      new Delta().retain(index).insert(text, cloneDeep(formats)),\n    );\n  }\n\n  isBlank(): boolean {\n    if (this.scroll.children.length === 0) return true;\n    if (this.scroll.children.length > 1) return false;\n    const blot = this.scroll.children.head;\n    if (blot?.statics.blotName !== Block.blotName) return false;\n    const block = blot as Block;\n    if (block.children.length > 1) return false;\n    return block.children.head instanceof Break;\n  }\n\n  removeFormat(index: number, length: number): Delta {\n    const text = this.getText(index, length);\n    const [line, offset] = this.scroll.line(index + length);\n    let suffixLength = 0;\n    let suffix = new Delta();\n    if (line != null) {\n      suffixLength = line.length() - offset;\n      suffix = line\n        .delta()\n        .slice(offset, offset + suffixLength - 1)\n        .insert('\\n');\n    }\n    const contents = this.getContents(index, length + suffixLength);\n    const diff = contents.diff(new Delta().insert(text).concat(suffix));\n    const delta = new Delta().retain(index).concat(diff);\n    return this.applyDelta(delta);\n  }\n\n  update(\n    change: Delta | null,\n    mutations: MutationRecord[] = [],\n    selectionInfo: SelectionInfo | undefined = undefined,\n  ): Delta {\n    const oldDelta = this.delta;\n    if (\n      mutations.length === 1 &&\n      mutations[0].type === 'characterData' &&\n      // @ts-expect-error Fix me later\n      mutations[0].target.data.match(ASCII) &&\n      this.scroll.find(mutations[0].target)\n    ) {\n      // Optimization for character changes\n      const textBlot = this.scroll.find(mutations[0].target) as Blot;\n      const formats = bubbleFormats(textBlot);\n      const index = textBlot.offset(this.scroll);\n      // @ts-expect-error Fix me later\n      const oldValue = mutations[0].oldValue.replace(CursorBlot.CONTENTS, '');\n      const oldText = new Delta().insert(oldValue);\n      // @ts-expect-error\n      const newText = new Delta().insert(textBlot.value());\n      const relativeSelectionInfo = selectionInfo && {\n        oldRange: shiftRange(selectionInfo.oldRange, -index),\n        newRange: shiftRange(selectionInfo.newRange, -index),\n      };\n      const diffDelta = new Delta()\n        .retain(index)\n        .concat(oldText.diff(newText, relativeSelectionInfo));\n      change = diffDelta.reduce((delta, op) => {\n        if (op.insert) {\n          return delta.insert(op.insert, formats);\n        }\n        return delta.push(op);\n      }, new Delta());\n      this.delta = oldDelta.compose(change);\n    } else {\n      this.delta = this.getDelta();\n      if (!change || !isEqual(oldDelta.compose(change), this.delta)) {\n        change = oldDelta.diff(this.delta, selectionInfo);\n      }\n    }\n    return change;\n  }\n}\n\ninterface ListItem {\n  child: Blot;\n  offset: number;\n  length: number;\n  indent: number;\n  type: string;\n}\nfunction convertListHTML(\n  items: ListItem[],\n  lastIndent: number,\n  types: string[],\n): string {\n  if (items.length === 0) {\n    const [endTag] = getListType(types.pop());\n    if (lastIndent <= 0) {\n      return `</li></${endTag}>`;\n    }\n    return `</li></${endTag}>${convertListHTML([], lastIndent - 1, types)}`;\n  }\n  const [{ child, offset, length, indent, type }, ...rest] = items;\n  const [tag, attribute] = getListType(type);\n  if (indent > lastIndent) {\n    types.push(type);\n    if (indent === lastIndent + 1) {\n      return `<${tag}><li${attribute}>${convertHTML(\n        child,\n        offset,\n        length,\n      )}${convertListHTML(rest, indent, types)}`;\n    }\n    return `<${tag}><li>${convertListHTML(items, lastIndent + 1, types)}`;\n  }\n  const previousType = types[types.length - 1];\n  if (indent === lastIndent && type === previousType) {\n    return `</li><li${attribute}>${convertHTML(\n      child,\n      offset,\n      length,\n    )}${convertListHTML(rest, indent, types)}`;\n  }\n  const [endTag] = getListType(types.pop());\n  return `</li></${endTag}>${convertListHTML(items, lastIndent - 1, types)}`;\n}\n\nfunction convertHTML(\n  blot: Blot,\n  index: number,\n  length: number,\n  isRoot = false,\n): string {\n  if ('html' in blot && typeof blot.html === 'function') {\n    return blot.html(index, length);\n  }\n  if (blot instanceof TextBlot) {\n    return escapeText(blot.value().slice(index, index + length));\n  }\n  if (blot instanceof ParentBlot) {\n    // TODO fix API\n    if (blot.statics.blotName === 'list-container') {\n      const items: any[] = [];\n      blot.children.forEachAt(index, length, (child, offset, childLength) => {\n        const formats =\n          'formats' in child && typeof child.formats === 'function'\n            ? child.formats()\n            : {};\n        items.push({\n          child,\n          offset,\n          length: childLength,\n          indent: formats.indent || 0,\n          type: formats.list,\n        });\n      });\n      return convertListHTML(items, -1, []);\n    }\n    const parts: string[] = [];\n    blot.children.forEachAt(index, length, (child, offset, childLength) => {\n      parts.push(convertHTML(child, offset, childLength));\n    });\n    if (isRoot || blot.statics.blotName === 'list') {\n      return parts.join('');\n    }\n    const { outerHTML, innerHTML } = blot.domNode as Element;\n    const [start, end] = outerHTML.split(`>${innerHTML}<`);\n    // TODO cleanup\n    if (start === '<table') {\n      return `<table style=\"border: 1px solid #000;\">${parts.join('')}<${end}`;\n    }\n    return `${start}>${parts.join('')}<${end}`;\n  }\n  return blot.domNode instanceof Element ? blot.domNode.outerHTML : '';\n}\n\nfunction combineFormats(\n  formats: Record<string, unknown>,\n  combined: Record<string, unknown>,\n): Record<string, unknown> {\n  return Object.keys(combined).reduce(\n    (merged, name) => {\n      if (formats[name] == null) return merged;\n      const combinedValue = combined[name];\n      if (combinedValue === formats[name]) {\n        merged[name] = combinedValue;\n      } else if (Array.isArray(combinedValue)) {\n        if (combinedValue.indexOf(formats[name]) < 0) {\n          merged[name] = combinedValue.concat([formats[name]]);\n        } else {\n          // If style already exists, don't add to an array, but don't lose other styles\n          merged[name] = combinedValue;\n        }\n      } else {\n        merged[name] = [combinedValue, formats[name]];\n      }\n      return merged;\n    },\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction getListType(type: string | undefined) {\n  const tag = type === 'ordered' ? 'ol' : 'ul';\n  switch (type) {\n    case 'checked':\n      return [tag, ' data-list=\"checked\"'];\n    case 'unchecked':\n      return [tag, ' data-list=\"unchecked\"'];\n    default:\n      return [tag, ''];\n  }\n}\n\nfunction normalizeDelta(delta: Delta) {\n  return delta.reduce((normalizedDelta, op) => {\n    if (typeof op.insert === 'string') {\n      const text = op.insert.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      return normalizedDelta.insert(text, op.attributes);\n    }\n    return normalizedDelta.push(op);\n  }, new Delta());\n}\n\nfunction shiftRange({ index, length }: Range, amount: number) {\n  return new Range(index + amount, length);\n}\n\nfunction splitOpLines(ops: Op[]) {\n  const split: Op[] = [];\n  ops.forEach((op) => {\n    if (typeof op.insert === 'string') {\n      const lines = op.insert.split('\\n');\n      lines.forEach((line, index) => {\n        if (index) split.push({ insert: '\\n', attributes: op.attributes });\n        if (line) split.push({ insert: line, attributes: op.attributes });\n      });\n    } else {\n      split.push(op);\n    }\n  });\n\n  return split;\n}\n\nexport default Editor;\n",null,"import {\n  AttributorStore,\n  BlockBlot,\n  EmbedBlot,\n  LeafBlot,\n  Scope,\n} from 'parchment';\nimport type { Blot, Parent } from 'parchment';\nimport Delta from 'quill-delta';\nimport Break from './break.js';\nimport Inline from './inline.js';\nimport TextBlot from './text.js';\n\nconst NEWLINE_LENGTH = 1;\n\nclass Block extends BlockBlot {\n  cache: { delta?: Delta | null; length?: number } = {};\n\n  delta(): Delta {\n    if (this.cache.delta == null) {\n      this.cache.delta = blockDelta(this);\n    }\n    return this.cache.delta;\n  }\n\n  deleteAt(index: number, length: number) {\n    super.deleteAt(index, length);\n    this.cache = {};\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (length <= 0) return;\n    if (this.scroll.query(name, Scope.BLOCK)) {\n      if (index + length === this.length()) {\n        this.format(name, value);\n      }\n    } else {\n      super.formatAt(\n        index,\n        Math.min(length, this.length() - index - 1),\n        name,\n        value,\n      );\n    }\n    this.cache = {};\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      this.cache = {};\n      return;\n    }\n    if (value.length === 0) return;\n    const lines = value.split('\\n');\n    const text = lines.shift() as string;\n    if (text.length > 0) {\n      if (index < this.length() - 1 || this.children.tail == null) {\n        super.insertAt(Math.min(index, this.length() - 1), text);\n      } else {\n        this.children.tail.insertAt(this.children.tail.length(), text);\n      }\n      this.cache = {};\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let block: Blot | this = this;\n    lines.reduce((lineIndex, line) => {\n      // @ts-expect-error Fix me later\n      block = block.split(lineIndex, true);\n      block.insertAt(0, line);\n      return line.length;\n    }, index + text.length);\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    const { head } = this.children;\n    super.insertBefore(blot, ref);\n    if (head instanceof Break) {\n      head.remove();\n    }\n    this.cache = {};\n  }\n\n  length() {\n    if (this.cache.length == null) {\n      this.cache.length = super.length() + NEWLINE_LENGTH;\n    }\n    return this.cache.length;\n  }\n\n  moveChildren(target: Parent, ref?: Blot | null) {\n    super.moveChildren(target, ref);\n    this.cache = {};\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.cache = {};\n  }\n\n  path(index: number) {\n    return super.path(index, true);\n  }\n\n  removeChild(child: Blot) {\n    super.removeChild(child);\n    this.cache = {};\n  }\n\n  split(index: number, force: boolean | undefined = false): Blot | null {\n    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\n      const clone = this.clone();\n      if (index === 0) {\n        this.parent.insertBefore(clone, this);\n        return this;\n      }\n      this.parent.insertBefore(clone, this.next);\n      return clone;\n    }\n    const next = super.split(index, force);\n    this.cache = {};\n    return next;\n  }\n}\nBlock.blotName = 'block';\nBlock.tagName = 'P';\nBlock.defaultChild = Break;\nBlock.allowedChildren = [Break, Inline, EmbedBlot, TextBlot];\n\nclass BlockEmbed extends EmbedBlot {\n  attributes: AttributorStore;\n  domNode: HTMLElement;\n\n  attach() {\n    super.attach();\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  delta() {\n    return new Delta().insert(this.value(), {\n      ...this.formats(),\n      ...this.attributes.values(),\n    });\n  }\n\n  format(name: string, value: unknown) {\n    const attribute = this.scroll.query(name, Scope.BLOCK_ATTRIBUTE);\n    if (attribute != null) {\n      // @ts-expect-error TODO: Scroll#query() should return Attributor when scope is attribute\n      this.attributes.attribute(attribute, value);\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    this.format(name, value);\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      return;\n    }\n    const lines = value.split('\\n');\n    const text = lines.pop();\n    const blocks = lines.map((line) => {\n      const block = this.scroll.create(Block.blotName);\n      block.insertAt(0, line);\n      return block;\n    });\n    const ref = this.split(index);\n    blocks.forEach((block) => {\n      this.parent.insertBefore(block, ref);\n    });\n    if (text) {\n      this.parent.insertBefore(this.scroll.create('text', text), ref);\n    }\n  }\n}\nBlockEmbed.scope = Scope.BLOCK_BLOT;\n// It is important for cursor behavior BlockEmbeds use tags that are block level elements\n\nfunction blockDelta(blot: BlockBlot, filter = true) {\n  return blot\n    .descendants(LeafBlot)\n    .reduce((delta, leaf) => {\n      if (leaf.length() === 0) {\n        return delta;\n      }\n      return delta.insert(leaf.value(), bubbleFormats(leaf, {}, filter));\n    }, new Delta())\n    .insert('\\n', bubbleFormats(blot));\n}\n\nfunction bubbleFormats(\n  blot: Blot | null,\n  formats: Record<string, unknown> = {},\n  filter = true,\n): Record<string, unknown> {\n  if (blot == null) return formats;\n  if ('formats' in blot && typeof blot.formats === 'function') {\n    formats = {\n      ...formats,\n      ...blot.formats(),\n    };\n    if (filter) {\n      // exclude syntax highlighting from deltas and getFormat()\n      delete formats['code-token'];\n    }\n  }\n  if (\n    blot.parent == null ||\n    blot.parent.statics.blotName === 'scroll' ||\n    blot.parent.statics.scope !== blot.statics.scope\n  ) {\n    return formats;\n  }\n  return bubbleFormats(blot.parent, formats, filter);\n}\n\nexport { blockDelta, bubbleFormats, BlockEmbed, Block as default };\n",null,"import { EmbedBlot } from 'parchment';\n\nclass Break extends EmbedBlot {\n  static value() {\n    return undefined;\n  }\n\n  optimize() {\n    if (this.prev || this.next) {\n      this.remove();\n    }\n  }\n\n  length() {\n    return 0;\n  }\n\n  value() {\n    return '';\n  }\n}\nBreak.blotName = 'break';\nBreak.tagName = 'BR';\n\nexport default Break;\n",null,"import { EmbedBlot, InlineBlot, Scope } from 'parchment';\nimport type { BlotConstructor } from 'parchment';\nimport Break from './break.js';\nimport Text from './text.js';\n\nclass Inline extends InlineBlot {\n  static allowedChildren: BlotConstructor[] = [Inline, Break, EmbedBlot, Text];\n  // Lower index means deeper in the DOM tree, since not found (-1) is for embeds\n  static order = [\n    'cursor',\n    'inline', // Must be lower\n    'link', // Chrome wants <a> to be lower\n    'underline',\n    'strike',\n    'italic',\n    'bold',\n    'script',\n    'code', // Must be higher\n  ];\n\n  static compare(self: string, other: string) {\n    const selfIndex = Inline.order.indexOf(self);\n    const otherIndex = Inline.order.indexOf(other);\n    if (selfIndex >= 0 || otherIndex >= 0) {\n      return selfIndex - otherIndex;\n    }\n    if (self === other) {\n      return 0;\n    }\n    if (self < other) {\n      return -1;\n    }\n    return 1;\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (\n      Inline.compare(this.statics.blotName, name) < 0 &&\n      this.scroll.query(name, Scope.BLOT)\n    ) {\n      const blot = this.isolate(index, length);\n      if (value) {\n        blot.wrap(name, value);\n      }\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (\n      this.parent instanceof Inline &&\n      Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0\n    ) {\n      const parent = this.parent.isolate(this.offset(), this.length());\n      // @ts-expect-error TODO: make isolate generic\n      this.moveChildren(parent);\n      parent.wrap(this);\n    }\n  }\n}\n\nexport default Inline;\n",null,"import { TextBlot } from 'parchment';\n\nclass Text extends TextBlot {}\n\nfunction escapeText(text: string) {\n  return text.replace(/[&<>\"']/g, (s) => {\n    // https://lodash.com/docs#escape\n    const entityMap: Record<string, string> = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;',\n    };\n    return entityMap[s];\n  });\n}\n\nexport { Text as default, escapeText };\n",null,"import { EmbedBlot, Scope } from 'parchment';\nimport type { Parent, ScrollBlot } from 'parchment';\nimport type Selection from '../core/selection.js';\nimport TextBlot from './text.js';\nimport type { EmbedContextRange } from './embed.js';\n\nclass Cursor extends EmbedBlot {\n  static blotName = 'cursor';\n  static className = 'ql-cursor';\n  static tagName = 'span';\n  static CONTENTS = '\\uFEFF'; // Zero width no break space\n\n  static value() {\n    return undefined;\n  }\n\n  selection: Selection;\n  textNode: Text;\n  savedLength: number;\n\n  constructor(scroll: ScrollBlot, domNode: HTMLElement, selection: Selection) {\n    super(scroll, domNode);\n    this.selection = selection;\n    this.textNode = document.createTextNode(Cursor.CONTENTS);\n    this.domNode.appendChild(this.textNode);\n    this.savedLength = 0;\n  }\n\n  detach() {\n    // super.detach() will also clear domNode.__blot\n    if (this.parent != null) this.parent.removeChild(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (this.savedLength !== 0) {\n      super.format(name, value);\n      return;\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let target: Parent | this = this;\n    let index = 0;\n    while (target != null && target.statics.scope !== Scope.BLOCK_BLOT) {\n      index += target.offset(target.parent);\n      target = target.parent;\n    }\n    if (target != null) {\n      this.savedLength = Cursor.CONTENTS.length;\n      // @ts-expect-error TODO: allow empty context in Parchment\n      target.optimize();\n      target.formatAt(index, Cursor.CONTENTS.length, name, value);\n      this.savedLength = 0;\n    }\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.textNode) return 0;\n    return super.index(node, offset);\n  }\n\n  length() {\n    return this.savedLength;\n  }\n\n  position(): [Text, number] {\n    return [this.textNode, this.textNode.data.length];\n  }\n\n  remove() {\n    super.remove();\n    // @ts-expect-error Fix me later\n    this.parent = null;\n  }\n\n  restore(): EmbedContextRange | null {\n    if (this.selection.composing || this.parent == null) return null;\n    const range = this.selection.getNativeRange();\n    // Browser may push down styles/nodes inside the cursor blot.\n    // https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#push-down-values\n    while (\n      this.domNode.lastChild != null &&\n      this.domNode.lastChild !== this.textNode\n    ) {\n      // @ts-expect-error Fix me later\n      this.domNode.parentNode.insertBefore(\n        this.domNode.lastChild,\n        this.domNode,\n      );\n    }\n\n    const prevTextBlot = this.prev instanceof TextBlot ? this.prev : null;\n    const prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\n    const nextTextBlot = this.next instanceof TextBlot ? this.next : null;\n    // @ts-expect-error TODO: make TextBlot.text public\n    const nextText = nextTextBlot ? nextTextBlot.text : '';\n    const { textNode } = this;\n    // take text from inside this blot and reset it\n    const newText = textNode.data.split(Cursor.CONTENTS).join('');\n    textNode.data = Cursor.CONTENTS;\n\n    // proactively merge TextBlots around cursor so that optimization\n    // doesn't lose the cursor.  the reason we are here in cursor.restore\n    // could be that the user clicked in prevTextBlot or nextTextBlot, or\n    // the user typed something.\n    let mergedTextBlot;\n    if (prevTextBlot) {\n      mergedTextBlot = prevTextBlot;\n      if (newText || nextTextBlot) {\n        prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\n        if (nextTextBlot) {\n          nextTextBlot.remove();\n        }\n      }\n    } else if (nextTextBlot) {\n      mergedTextBlot = nextTextBlot;\n      nextTextBlot.insertAt(0, newText);\n    } else {\n      const newTextNode = document.createTextNode(newText);\n      mergedTextBlot = this.scroll.create(newTextNode);\n      this.parent.insertBefore(mergedTextBlot, this);\n    }\n\n    this.remove();\n    if (range) {\n      // calculate selection to restore\n      const remapOffset = (node: Node, offset: number) => {\n        if (prevTextBlot && node === prevTextBlot.domNode) {\n          return offset;\n        }\n        if (node === textNode) {\n          return prevTextLength + offset - 1;\n        }\n        if (nextTextBlot && node === nextTextBlot.domNode) {\n          return prevTextLength + newText.length + offset;\n        }\n        return null;\n      };\n\n      const start = remapOffset(range.start.node, range.start.offset);\n      const end = remapOffset(range.end.node, range.end.offset);\n      if (start !== null && end !== null) {\n        return {\n          startNode: mergedTextBlot.domNode,\n          startOffset: start,\n          endNode: mergedTextBlot.domNode,\n          endOffset: end,\n        };\n      }\n    }\n    return null;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.textNode\n        );\n      })\n    ) {\n      const range = this.restore();\n      if (range) context.range = range;\n    }\n  }\n\n  // Avoid .ql-cursor being a descendant of `<a/>`.\n  // The reason is Safari pushes down `<a/>` on text insertion.\n  // That will cause DOM nodes not sync with the model.\n  //\n  // For example ({I} is the caret), given the markup:\n  //    <a><span class=\"ql-cursor\">\\uFEFF{I}</span></a>\n  // When typing a char \"x\", `<a/>` will be pushed down inside the `<span>` first:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF{I}</a></span>\n  // And then \"x\" will be inserted after `<a/>`:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF</a>d{I}</span>\n  optimize(context?: unknown) {\n    // @ts-expect-error Fix me later\n    super.optimize(context);\n\n    let { parent } = this;\n    while (parent) {\n      if (parent.domNode.tagName === 'A') {\n        this.savedLength = Cursor.CONTENTS.length;\n        // @ts-expect-error TODO: make isolate generic\n        parent.isolate(this.offset(parent), this.length()).unwrap();\n        this.savedLength = 0;\n        break;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  value() {\n    return '';\n  }\n}\n\nexport default Cursor;\n",null,"import { LeafBlot, Scope } from 'parchment';\nimport { cloneDeep, isEqual } from 'lodash-es';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport logger from './logger.js';\nimport type Cursor from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\n\nconst debug = logger('quill:selection');\n\ntype NativeRange = AbstractRange;\n\ninterface NormalizedRange {\n  start: {\n    node: NativeRange['startContainer'];\n    offset: NativeRange['startOffset'];\n  };\n  end: { node: NativeRange['endContainer']; offset: NativeRange['endOffset'] };\n  native: NativeRange;\n}\n\nexport interface Bounds {\n  bottom: number;\n  height: number;\n  left: number;\n  right: number;\n  top: number;\n  width: number;\n}\n\nexport class Range {\n  constructor(\n    public index: number,\n    public length = 0,\n  ) {}\n}\n\nclass Selection {\n  scroll: Scroll;\n  emitter: Emitter;\n  composing: boolean;\n  mouseDown: boolean;\n\n  root: HTMLElement;\n  cursor: Cursor;\n  savedRange: Range;\n  lastRange: Range | null;\n  lastNative: NormalizedRange | null;\n\n  constructor(scroll: Scroll, emitter: Emitter) {\n    this.emitter = emitter;\n    this.scroll = scroll;\n    this.composing = false;\n    this.mouseDown = false;\n    this.root = this.scroll.domNode;\n    // @ts-expect-error\n    this.cursor = this.scroll.create('cursor', this);\n    // savedRange is last non-null range\n    this.savedRange = new Range(0, 0);\n    this.lastRange = this.savedRange;\n    this.lastNative = null;\n    this.handleComposition();\n    this.handleDragging();\n    this.emitter.listenDOM('selectionchange', document, () => {\n      if (!this.mouseDown && !this.composing) {\n        setTimeout(this.update.bind(this, Emitter.sources.USER), 1);\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_BEFORE_UPDATE, () => {\n      if (!this.hasFocus()) return;\n      const native = this.getNativeRange();\n      if (native == null) return;\n      if (native.start.node === this.cursor.textNode) return; // cursor.restore() will handle\n      this.emitter.once(\n        Emitter.events.SCROLL_UPDATE,\n        (source, mutations: MutationRecord[]) => {\n          try {\n            if (\n              this.root.contains(native.start.node) &&\n              this.root.contains(native.end.node)\n            ) {\n              this.setNativeRange(\n                native.start.node,\n                native.start.offset,\n                native.end.node,\n                native.end.offset,\n              );\n            }\n            const triggeredByTyping = mutations.some(\n              (mutation) =>\n                mutation.type === 'characterData' ||\n                mutation.type === 'childList' ||\n                (mutation.type === 'attributes' &&\n                  mutation.target === this.root),\n            );\n            this.update(triggeredByTyping ? Emitter.sources.SILENT : source);\n          } catch (ignored) {\n            // ignore\n          }\n        },\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_OPTIMIZE, (mutations, context) => {\n      if (context.range) {\n        const { startNode, startOffset, endNode, endOffset } = context.range;\n        this.setNativeRange(startNode, startOffset, endNode, endOffset);\n        this.update(Emitter.sources.SILENT);\n      }\n    });\n    this.update(Emitter.sources.SILENT);\n  }\n\n  handleComposition() {\n    this.emitter.on(Emitter.events.COMPOSITION_BEFORE_START, () => {\n      this.composing = true;\n    });\n    this.emitter.on(Emitter.events.COMPOSITION_END, () => {\n      this.composing = false;\n      if (this.cursor.parent) {\n        const range = this.cursor.restore();\n        if (!range) return;\n        setTimeout(() => {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }, 1);\n      }\n    });\n  }\n\n  handleDragging() {\n    this.emitter.listenDOM('mousedown', document.body, () => {\n      this.mouseDown = true;\n    });\n    this.emitter.listenDOM('mouseup', document.body, () => {\n      this.mouseDown = false;\n      this.update(Emitter.sources.USER);\n    });\n  }\n\n  focus() {\n    if (this.hasFocus()) return;\n    this.root.focus({ preventScroll: true });\n    this.setRange(this.savedRange);\n  }\n\n  format(format: string, value: unknown) {\n    this.scroll.update();\n    const nativeRange = this.getNativeRange();\n    if (\n      nativeRange == null ||\n      !nativeRange.native.collapsed ||\n      this.scroll.query(format, Scope.BLOCK)\n    )\n      return;\n    if (nativeRange.start.node !== this.cursor.textNode) {\n      const blot = this.scroll.find(nativeRange.start.node, false);\n      if (blot == null) return;\n      // TODO Give blot ability to not split\n      if (blot instanceof LeafBlot) {\n        const after = blot.split(nativeRange.start.offset);\n        blot.parent.insertBefore(this.cursor, after);\n      } else {\n        // @ts-expect-error TODO: nativeRange.start.node doesn't seem to match function signature\n        blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\n      }\n      this.cursor.attach();\n    }\n    this.cursor.format(format, value);\n    this.scroll.optimize();\n    this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\n    this.update();\n  }\n\n  getBounds(index: number, length = 0) {\n    const scrollLength = this.scroll.length();\n    index = Math.min(index, scrollLength - 1);\n    length = Math.min(index + length, scrollLength - 1) - index;\n    let node: Node;\n    let [leaf, offset] = this.scroll.leaf(index);\n    if (leaf == null) return null;\n    if (length > 0 && offset === leaf.length()) {\n      const [next] = this.scroll.leaf(index + 1);\n      if (next) {\n        const [line] = this.scroll.line(index);\n        const [nextLine] = this.scroll.line(index + 1);\n        if (line === nextLine) {\n          leaf = next;\n          offset = 0;\n        }\n      }\n    }\n    [node, offset] = leaf.position(offset, true);\n    const range = document.createRange();\n    if (length > 0) {\n      range.setStart(node, offset);\n      [leaf, offset] = this.scroll.leaf(index + length);\n      if (leaf == null) return null;\n      [node, offset] = leaf.position(offset, true);\n      range.setEnd(node, offset);\n      return range.getBoundingClientRect();\n    }\n    let side: 'left' | 'right' = 'left';\n    let rect: DOMRect;\n    if (node instanceof Text) {\n      // Return null if the text node is empty because it is\n      // not able to get a useful client rect:\n      // https://github.com/w3c/csswg-drafts/issues/2514.\n      // Empty text nodes are most likely caused by TextBlot#optimize()\n      // not getting called when editor content changes.\n      if (!node.data.length) {\n        return null;\n      }\n      if (offset < node.data.length) {\n        range.setStart(node, offset);\n        range.setEnd(node, offset + 1);\n      } else {\n        range.setStart(node, offset - 1);\n        range.setEnd(node, offset);\n        side = 'right';\n      }\n      rect = range.getBoundingClientRect();\n    } else {\n      if (!(leaf.domNode instanceof Element)) return null;\n      rect = leaf.domNode.getBoundingClientRect();\n      if (offset > 0) side = 'right';\n    }\n    return {\n      bottom: rect.top + rect.height,\n      height: rect.height,\n      left: rect[side],\n      right: rect[side],\n      top: rect.top,\n      width: 0,\n    };\n  }\n\n  getNativeRange(): NormalizedRange | null {\n    const selection = document.getSelection();\n    if (selection == null || selection.rangeCount <= 0) return null;\n    const nativeRange = selection.getRangeAt(0);\n    if (nativeRange == null) return null;\n    const range = this.normalizeNative(nativeRange);\n    debug.info('getNativeRange', range);\n    return range;\n  }\n\n  getRange(): [Range, NormalizedRange] | [null, null] {\n    const root = this.scroll.domNode;\n    if ('isConnected' in root && !root.isConnected) {\n      // document.getSelection() forces layout on Blink, so we trend to\n      // not calling it.\n      return [null, null];\n    }\n    const normalized = this.getNativeRange();\n    if (normalized == null) return [null, null];\n    const range = this.normalizedToRange(normalized);\n    return [range, normalized];\n  }\n\n  hasFocus(): boolean {\n    return (\n      document.activeElement === this.root ||\n      (document.activeElement != null &&\n        contains(this.root, document.activeElement))\n    );\n  }\n\n  normalizedToRange(range: NormalizedRange) {\n    const positions: [Node, number][] = [\n      [range.start.node, range.start.offset],\n    ];\n    if (!range.native.collapsed) {\n      positions.push([range.end.node, range.end.offset]);\n    }\n    const indexes = positions.map((position) => {\n      const [node, offset] = position;\n      const blot = this.scroll.find(node, true);\n      // @ts-expect-error Fix me later\n      const index = blot.offset(this.scroll);\n      if (offset === 0) {\n        return index;\n      }\n      if (blot instanceof LeafBlot) {\n        return index + blot.index(node, offset);\n      }\n      // @ts-expect-error Fix me later\n      return index + blot.length();\n    });\n    const end = Math.min(Math.max(...indexes), this.scroll.length() - 1);\n    const start = Math.min(end, ...indexes);\n    return new Range(start, end - start);\n  }\n\n  normalizeNative(nativeRange: NativeRange) {\n    if (\n      !contains(this.root, nativeRange.startContainer) ||\n      (!nativeRange.collapsed && !contains(this.root, nativeRange.endContainer))\n    ) {\n      return null;\n    }\n    const range = {\n      start: {\n        node: nativeRange.startContainer,\n        offset: nativeRange.startOffset,\n      },\n      end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },\n      native: nativeRange,\n    };\n    [range.start, range.end].forEach((position) => {\n      let { node, offset } = position;\n      while (!(node instanceof Text) && node.childNodes.length > 0) {\n        if (node.childNodes.length > offset) {\n          node = node.childNodes[offset];\n          offset = 0;\n        } else if (node.childNodes.length === offset) {\n          // @ts-expect-error Fix me later\n          node = node.lastChild;\n          if (node instanceof Text) {\n            offset = node.data.length;\n          } else if (node.childNodes.length > 0) {\n            // Container case\n            offset = node.childNodes.length;\n          } else {\n            // Embed case\n            offset = node.childNodes.length + 1;\n          }\n        } else {\n          break;\n        }\n      }\n      position.node = node;\n      position.offset = offset;\n    });\n    return range;\n  }\n\n  rangeToNative(range: Range): [Node | null, number, Node | null, number] {\n    const scrollLength = this.scroll.length();\n\n    const getPosition = (\n      index: number,\n      inclusive: boolean,\n    ): [Node | null, number] => {\n      index = Math.min(scrollLength - 1, index);\n      const [leaf, leafOffset] = this.scroll.leaf(index);\n      return leaf ? leaf.position(leafOffset, inclusive) : [null, -1];\n    };\n    return [\n      ...getPosition(range.index, false),\n      ...getPosition(range.index + range.length, true),\n    ];\n  }\n\n  setNativeRange(\n    startNode: Node | null,\n    startOffset?: number,\n    endNode = startNode,\n    endOffset = startOffset,\n    force = false,\n  ) {\n    debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);\n    if (\n      startNode != null &&\n      (this.root.parentNode == null ||\n        startNode.parentNode == null ||\n        // @ts-expect-error Fix me later\n        endNode.parentNode == null)\n    ) {\n      return;\n    }\n    const selection = document.getSelection();\n    if (selection == null) return;\n    if (startNode != null) {\n      if (!this.hasFocus()) this.root.focus({ preventScroll: true });\n      const { native } = this.getNativeRange() || {};\n      if (\n        native == null ||\n        force ||\n        startNode !== native.startContainer ||\n        startOffset !== native.startOffset ||\n        endNode !== native.endContainer ||\n        endOffset !== native.endOffset\n      ) {\n        if (startNode instanceof Element && startNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          startOffset = Array.from(startNode.parentNode.childNodes).indexOf(\n            startNode,\n          );\n          startNode = startNode.parentNode;\n        }\n        if (endNode instanceof Element && endNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          endOffset = Array.from(endNode.parentNode.childNodes).indexOf(\n            endNode,\n          );\n          endNode = endNode.parentNode;\n        }\n        const range = document.createRange();\n        // @ts-expect-error Fix me later\n        range.setStart(startNode, startOffset);\n        // @ts-expect-error Fix me later\n        range.setEnd(endNode, endOffset);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    } else {\n      selection.removeAllRanges();\n      this.root.blur();\n    }\n  }\n\n  setRange(range: Range | null, force: boolean, source?: EmitterSource): void;\n  setRange(range: Range | null, source?: EmitterSource): void;\n  setRange(\n    range: Range | null,\n    force: boolean | EmitterSource = false,\n    source: EmitterSource = Emitter.sources.API,\n  ): void {\n    if (typeof force === 'string') {\n      source = force;\n      force = false;\n    }\n    debug.info('setRange', range);\n    if (range != null) {\n      const args = this.rangeToNative(range);\n      this.setNativeRange(...args, force);\n    } else {\n      this.setNativeRange(null);\n    }\n    this.update(source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const oldRange = this.lastRange;\n    const [lastRange, nativeRange] = this.getRange();\n    this.lastRange = lastRange;\n    this.lastNative = nativeRange;\n    if (this.lastRange != null) {\n      this.savedRange = this.lastRange;\n    }\n    if (!isEqual(oldRange, this.lastRange)) {\n      if (\n        !this.composing &&\n        nativeRange != null &&\n        nativeRange.native.collapsed &&\n        nativeRange.start.node !== this.cursor.textNode\n      ) {\n        const range = this.cursor.restore();\n        if (range) {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }\n      }\n      const args = [\n        Emitter.events.SELECTION_CHANGE,\n        cloneDeep(this.lastRange),\n        cloneDeep(oldRange),\n        source,\n      ];\n      this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n      if (source !== Emitter.sources.SILENT) {\n        this.emitter.emit(...args);\n      }\n    }\n  }\n}\n\nfunction contains(parent: Node, descendant: Node) {\n  try {\n    // Firefox inserts inaccessible nodes around video elements\n    descendant.parentNode; // eslint-disable-line @typescript-eslint/no-unused-expressions\n  } catch (e) {\n    return false;\n  }\n  return parent.contains(descendant);\n}\n\nexport default Selection;\n",null,"import { EventEmitter } from 'eventemitter3';\nimport instances from './instances.js';\nimport logger from './logger.js';\n\nconst debug = logger('quill:events');\nconst EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];\n\nEVENTS.forEach((eventName) => {\n  document.addEventListener(eventName, (...args) => {\n    Array.from(document.querySelectorAll('.ql-container')).forEach((node) => {\n      const quill = instances.get(node);\n      if (quill && quill.emitter) {\n        quill.emitter.handleDOM(...args);\n      }\n    });\n  });\n});\n\nclass Emitter extends EventEmitter<string> {\n  static events = {\n    EDITOR_CHANGE: 'editor-change',\n    SCROLL_BEFORE_UPDATE: 'scroll-before-update',\n    SCROLL_BLOT_MOUNT: 'scroll-blot-mount',\n    SCROLL_BLOT_UNMOUNT: 'scroll-blot-unmount',\n    SCROLL_OPTIMIZE: 'scroll-optimize',\n    SCROLL_UPDATE: 'scroll-update',\n    SCROLL_EMBED_UPDATE: 'scroll-embed-update',\n    SELECTION_CHANGE: 'selection-change',\n    TEXT_CHANGE: 'text-change',\n    COMPOSITION_BEFORE_START: 'composition-before-start',\n    COMPOSITION_START: 'composition-start',\n    COMPOSITION_BEFORE_END: 'composition-before-end',\n    COMPOSITION_END: 'composition-end',\n  } as const;\n\n  static sources = {\n    API: 'api',\n    SILENT: 'silent',\n    USER: 'user',\n  } as const;\n\n  protected domListeners: Record<string, { node: Node; handler: Function }[]>;\n\n  constructor() {\n    super();\n    this.domListeners = {};\n    this.on('error', debug.error);\n  }\n\n  emit(...args: unknown[]): boolean {\n    debug.log.call(debug, ...args);\n    // @ts-expect-error\n    return super.emit(...args);\n  }\n\n  handleDOM(event: Event, ...args: unknown[]) {\n    (this.domListeners[event.type] || []).forEach(({ node, handler }) => {\n      if (event.target === node || node.contains(event.target as Node)) {\n        handler(event, ...args);\n      }\n    });\n  }\n\n  listenDOM(eventName: string, node: Node, handler: EventListener) {\n    if (!this.domListeners[eventName]) {\n      this.domListeners[eventName] = [];\n    }\n    this.domListeners[eventName].push({ node, handler });\n  }\n}\n\nexport type EmitterSource =\n  (typeof Emitter.sources)[keyof typeof Emitter.sources];\n\nexport default Emitter;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n",null,"import type Quill from '../core.js';\n\nexport default new WeakMap<Node, Quill>();\n",null,"const levels = ['error', 'warn', 'log', 'info'] as const;\nexport type DebugLevel = (typeof levels)[number];\nlet level: DebugLevel | false = 'warn';\n\nfunction debug(method: DebugLevel, ...args: unknown[]) {\n  if (level) {\n    if (levels.indexOf(method) <= levels.indexOf(level)) {\n      console[method](...args); // eslint-disable-line no-console\n    }\n  }\n}\n\nfunction namespace(\n  ns: string,\n): Record<DebugLevel, (...args: unknown[]) => void> {\n  return levels.reduce(\n    (logger, method) => {\n      logger[method] = debug.bind(console, method, ns);\n      return logger;\n    },\n    {} as Record<DebugLevel, (...args: unknown[]) => void>,\n  );\n}\n\nnamespace.level = (newLevel: DebugLevel | false) => {\n  level = newLevel;\n};\ndebug.level = namespace.level;\n\nexport default namespace;\n",null,"import type Quill from './quill.js';\n\nabstract class Module<T extends {} = {}> {\n  static DEFAULTS = {};\n\n  constructor(\n    protected quill: Quill,\n    protected options: Partial<T> = {},\n  ) {}\n}\n\nexport default Module;\n",null,"import Embed from '../blots/embed.js';\nimport type Scroll from '../blots/scroll.js';\nimport Emitter from './emitter.js';\n\nclass Composition {\n  isComposing = false;\n\n  constructor(\n    private scroll: Scroll,\n    private emitter: Emitter,\n  ) {\n    this.setupListeners();\n  }\n\n  private setupListeners() {\n    this.scroll.domNode.addEventListener('compositionstart', (event) => {\n      if (!this.isComposing) {\n        this.handleCompositionStart(event);\n      }\n    });\n\n    this.scroll.domNode.addEventListener('compositionend', (event) => {\n      if (this.isComposing) {\n        // Webkit makes DOM changes after compositionend, so we use microtask to\n        // ensure the order.\n        // https://bugs.webkit.org/show_bug.cgi?id=31902\n        queueMicrotask(() => {\n          this.handleCompositionEnd(event);\n        });\n      }\n    });\n  }\n\n  private handleCompositionStart(event: CompositionEvent) {\n    const blot =\n      event.target instanceof Node\n        ? this.scroll.find(event.target, true)\n        : null;\n\n    if (blot && !(blot instanceof Embed)) {\n      this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_START, event);\n      this.scroll.batchStart();\n      this.emitter.emit(Emitter.events.COMPOSITION_START, event);\n      this.isComposing = true;\n    }\n  }\n\n  private handleCompositionEnd(event: CompositionEvent) {\n    this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_END, event);\n    this.scroll.batchEnd();\n    this.emitter.emit(Emitter.events.COMPOSITION_END, event);\n    this.isComposing = false;\n  }\n}\n\nexport default Composition;\n",null,"import type { ScrollBlot } from 'parchment';\nimport { EmbedBlot } from 'parchment';\nimport TextBlot from './text.js';\n\nconst GUARD_TEXT = '\\uFEFF';\n\nexport interface EmbedContextRange {\n  startNode: Node | Text;\n  startOffset: number;\n  endNode?: Node | Text;\n  endOffset?: number;\n}\n\nclass Embed extends EmbedBlot {\n  contentNode: HTMLSpanElement;\n  leftGuard: Text;\n  rightGuard: Text;\n\n  constructor(scroll: ScrollBlot, node: Node) {\n    super(scroll, node);\n    this.contentNode = document.createElement('span');\n    this.contentNode.setAttribute('contenteditable', 'false');\n    Array.from(this.domNode.childNodes).forEach((childNode) => {\n      this.contentNode.appendChild(childNode);\n    });\n    this.leftGuard = document.createTextNode(GUARD_TEXT);\n    this.rightGuard = document.createTextNode(GUARD_TEXT);\n    this.domNode.appendChild(this.leftGuard);\n    this.domNode.appendChild(this.contentNode);\n    this.domNode.appendChild(this.rightGuard);\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.leftGuard) return 0;\n    if (node === this.rightGuard) return 1;\n    return super.index(node, offset);\n  }\n\n  restore(node: Text): EmbedContextRange | null {\n    let range: EmbedContextRange | null = null;\n    let textNode: Text;\n    const text = node.data.split(GUARD_TEXT).join('');\n    if (node === this.leftGuard) {\n      if (this.prev instanceof TextBlot) {\n        const prevLength = this.prev.length();\n        this.prev.insertAt(prevLength, text);\n        range = {\n          startNode: this.prev.domNode,\n          startOffset: prevLength + text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    } else if (node === this.rightGuard) {\n      if (this.next instanceof TextBlot) {\n        this.next.insertAt(0, text);\n        range = {\n          startNode: this.next.domNode,\n          startOffset: text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this.next);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    }\n    node.data = GUARD_TEXT;\n    return range;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    mutations.forEach((mutation) => {\n      if (\n        mutation.type === 'characterData' &&\n        (mutation.target === this.leftGuard ||\n          mutation.target === this.rightGuard)\n      ) {\n        const range = this.restore(mutation.target as Text);\n        if (range) context.range = range;\n      }\n    });\n  }\n}\n\nexport default Embed;\n",null,"import type Quill from '../core.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type { ToolbarProps } from '../modules/toolbar.js';\nimport type Uploader from '../modules/uploader.js';\n\nexport interface ThemeOptions {\n  modules: Record<string, unknown> & {\n    toolbar?: null | ToolbarProps;\n  };\n}\n\nclass Theme {\n  static DEFAULTS: ThemeOptions = {\n    modules: {},\n  };\n\n  static themes = {\n    default: Theme,\n  };\n\n  modules: ThemeOptions['modules'] = {};\n\n  constructor(\n    protected quill: Quill,\n    protected options: ThemeOptions,\n  ) {}\n\n  init() {\n    Object.keys(this.options.modules).forEach((name) => {\n      if (this.modules[name] == null) {\n        this.addModule(name);\n      }\n    });\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    // @ts-expect-error\n    const ModuleClass = this.quill.constructor.import(`modules/${name}`);\n    this.modules[name] = new ModuleClass(\n      this.quill,\n      this.options.modules[name] || {},\n    );\n    return this.modules[name];\n  }\n}\n\nexport interface ThemeConstructor {\n  new (quill: Quill, options: unknown): Theme;\n  DEFAULTS: ThemeOptions;\n}\n\nexport default Theme;\n",null,"export type Rect = {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n};\n\nconst getParentElement = (element: Node): Element | null =>\n  element.parentElement || (element.getRootNode() as ShadowRoot).host || null;\n\nconst getElementRect = (element: Element): Rect => {\n  const rect = element.getBoundingClientRect();\n  const scaleX =\n    ('offsetWidth' in element &&\n      Math.abs(rect.width) / (element as HTMLElement).offsetWidth) ||\n    1;\n  const scaleY =\n    ('offsetHeight' in element &&\n      Math.abs(rect.height) / (element as HTMLElement).offsetHeight) ||\n    1;\n  return {\n    top: rect.top,\n    right: rect.left + element.clientWidth * scaleX,\n    bottom: rect.top + element.clientHeight * scaleY,\n    left: rect.left,\n  };\n};\n\nconst paddingValueToInt = (value: string) => {\n  const number = parseInt(value, 10);\n  return Number.isNaN(number) ? 0 : number;\n};\n\n// Follow the steps described in https://www.w3.org/TR/cssom-view-1/#element-scrolling-members,\n// assuming that the scroll option is set to 'nearest'.\nconst getScrollDistance = (\n  targetStart: number,\n  targetEnd: number,\n  scrollStart: number,\n  scrollEnd: number,\n  scrollPaddingStart: number,\n  scrollPaddingEnd: number,\n) => {\n  if (targetStart < scrollStart && targetEnd > scrollEnd) {\n    return 0;\n  }\n\n  if (targetStart < scrollStart) {\n    return -(scrollStart - targetStart + scrollPaddingStart);\n  }\n\n  if (targetEnd > scrollEnd) {\n    return targetEnd - targetStart > scrollEnd - scrollStart\n      ? targetStart + scrollPaddingStart - scrollStart\n      : targetEnd - scrollEnd + scrollPaddingEnd;\n  }\n  return 0;\n};\n\nconst scrollRectIntoView = (root: HTMLElement, targetRect: Rect) => {\n  const document = root.ownerDocument;\n\n  let rect = targetRect;\n\n  let current: Element | null = root;\n  while (current) {\n    const isDocumentBody: boolean = current === document.body;\n    const bounding = isDocumentBody\n      ? {\n          top: 0,\n          right:\n            window.visualViewport?.width ??\n            document.documentElement.clientWidth,\n          bottom:\n            window.visualViewport?.height ??\n            document.documentElement.clientHeight,\n          left: 0,\n        }\n      : getElementRect(current);\n\n    const style = getComputedStyle(current);\n    const scrollDistanceX = getScrollDistance(\n      rect.left,\n      rect.right,\n      bounding.left,\n      bounding.right,\n      paddingValueToInt(style.scrollPaddingLeft),\n      paddingValueToInt(style.scrollPaddingRight),\n    );\n    const scrollDistanceY = getScrollDistance(\n      rect.top,\n      rect.bottom,\n      bounding.top,\n      bounding.bottom,\n      paddingValueToInt(style.scrollPaddingTop),\n      paddingValueToInt(style.scrollPaddingBottom),\n    );\n    if (scrollDistanceX || scrollDistanceY) {\n      if (isDocumentBody) {\n        document.defaultView?.scrollBy(scrollDistanceX, scrollDistanceY);\n      } else {\n        const { scrollLeft, scrollTop } = current;\n        if (scrollDistanceY) {\n          current.scrollTop += scrollDistanceY;\n        }\n        if (scrollDistanceX) {\n          current.scrollLeft += scrollDistanceX;\n        }\n        const scrolledLeft = current.scrollLeft - scrollLeft;\n        const scrolledTop = current.scrollTop - scrollTop;\n        rect = {\n          left: rect.left - scrolledLeft,\n          top: rect.top - scrolledTop,\n          right: rect.right - scrolledLeft,\n          bottom: rect.bottom - scrolledTop,\n        };\n      }\n    }\n\n    current =\n      isDocumentBody || style.position === 'fixed'\n        ? null\n        : getParentElement(current);\n  }\n};\n\nexport default scrollRectIntoView;\n",null,"import { Registry } from 'parchment';\n\nconst MAX_REGISTER_ITERATIONS = 100;\nconst CORE_FORMATS = ['block', 'break', 'cursor', 'inline', 'scroll', 'text'];\n\nconst createRegistryWithFormats = (\n  formats: string[],\n  sourceRegistry: Registry,\n  debug: { error: (errorMessage: string) => void },\n) => {\n  const registry = new Registry();\n  CORE_FORMATS.forEach((name) => {\n    const coreBlot = sourceRegistry.query(name);\n    if (coreBlot) registry.register(coreBlot);\n  });\n\n  formats.forEach((name) => {\n    let format = sourceRegistry.query(name);\n    if (!format) {\n      debug.error(\n        `Cannot register \"${name}\" specified in \"formats\" config. Are you sure it was registered?`,\n      );\n    }\n    let iterations = 0;\n    while (format) {\n      registry.register(format);\n      format = 'blotName' in format ? format.requiredContainer ?? null : null;\n\n      iterations += 1;\n      if (iterations > MAX_REGISTER_ITERATIONS) {\n        debug.error(\n          `Cycle detected in registering blot requiredContainer: \"${name}\"`,\n        );\n        break;\n      }\n    }\n  });\n\n  return registry;\n};\n\nexport default createRegistryWithFormats;\n",null,"import { ContainerBlot } from 'parchment';\n\nclass Container extends ContainerBlot {}\n\nexport default Container;\n",null,"import { ContainerBlot, LeafBlot, Scope, ScrollBlot } from 'parchment';\nimport type { Blot, Parent, EmbedBlot, ParentBlot, Registry } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Emitter from '../core/emitter.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport Block, { BlockEmbed, bubbleFormats } from './block.js';\nimport Break from './break.js';\nimport Container from './container.js';\n\ntype RenderBlock =\n  | {\n      type: 'blockEmbed';\n      attributes: AttributeMap;\n      key: string;\n      value: unknown;\n    }\n  | { type: 'block'; attributes: AttributeMap; delta: Delta };\n\nfunction isLine(blot: unknown): blot is Block | BlockEmbed {\n  return blot instanceof Block || blot instanceof BlockEmbed;\n}\n\ninterface UpdatableEmbed {\n  updateContent(change: unknown): void;\n}\n\nfunction isUpdatable(blot: Blot): blot is Blot & UpdatableEmbed {\n  return typeof (blot as unknown as any).updateContent === 'function';\n}\n\nclass Scroll extends ScrollBlot {\n  static blotName = 'scroll';\n  static className = 'ql-editor';\n  static tagName = 'DIV';\n  static defaultChild = Block;\n  static allowedChildren = [Block, BlockEmbed, Container];\n\n  emitter: Emitter;\n  batch: false | MutationRecord[];\n\n  constructor(\n    registry: Registry,\n    domNode: HTMLDivElement,\n    { emitter }: { emitter: Emitter },\n  ) {\n    super(registry, domNode);\n    this.emitter = emitter;\n    this.batch = false;\n    this.optimize();\n    this.enable();\n    this.domNode.addEventListener('dragstart', (e) => this.handleDragStart(e));\n  }\n\n  batchStart() {\n    if (!Array.isArray(this.batch)) {\n      this.batch = [];\n    }\n  }\n\n  batchEnd() {\n    if (!this.batch) return;\n    const mutations = this.batch;\n    this.batch = false;\n    this.update(mutations);\n  }\n\n  emitMount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_MOUNT, blot);\n  }\n\n  emitUnmount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_UNMOUNT, blot);\n  }\n\n  emitEmbedUpdate(blot: Blot, change: unknown) {\n    this.emitter.emit(Emitter.events.SCROLL_EMBED_UPDATE, blot, change);\n  }\n\n  deleteAt(index: number, length: number) {\n    const [first, offset] = this.line(index);\n    const [last] = this.line(index + length);\n    super.deleteAt(index, length);\n    if (last != null && first !== last && offset > 0) {\n      if (first instanceof BlockEmbed || last instanceof BlockEmbed) {\n        this.optimize();\n        return;\n      }\n      const ref =\n        last.children.head instanceof Break ? null : last.children.head;\n      // @ts-expect-error\n      first.moveChildren(last, ref);\n      // @ts-expect-error\n      first.remove();\n    }\n    this.optimize();\n  }\n\n  enable(enabled = true) {\n    this.domNode.setAttribute('contenteditable', enabled ? 'true' : 'false');\n  }\n\n  formatAt(index: number, length: number, format: string, value: unknown) {\n    super.formatAt(index, length, format, value);\n    this.optimize();\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (index >= this.length()) {\n      if (def == null || this.scroll.query(value, Scope.BLOCK) == null) {\n        const blot = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(blot);\n        if (def == null && value.endsWith('\\n')) {\n          blot.insertAt(0, value.slice(0, -1), def);\n        } else {\n          blot.insertAt(0, value, def);\n        }\n      } else {\n        const embed = this.scroll.create(value, def);\n        this.appendChild(embed);\n      }\n    } else {\n      super.insertAt(index, value, def);\n    }\n    this.optimize();\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    if (blot.statics.scope === Scope.INLINE_BLOT) {\n      const wrapper = this.scroll.create(\n        this.statics.defaultChild.blotName,\n      ) as Parent;\n      wrapper.appendChild(blot);\n      super.insertBefore(wrapper, ref);\n    } else {\n      super.insertBefore(blot, ref);\n    }\n  }\n\n  insertContents(index: number, delta: Delta) {\n    const renderBlocks = this.deltaToRenderBlocks(\n      delta.concat(new Delta().insert('\\n')),\n    );\n    const last = renderBlocks.pop();\n    if (last == null) return;\n\n    this.batchStart();\n\n    const first = renderBlocks.shift();\n    if (first) {\n      const shouldInsertNewlineChar =\n        first.type === 'block' &&\n        (first.delta.length() === 0 ||\n          (!this.descendant(BlockEmbed, index)[0] && index < this.length()));\n      const delta =\n        first.type === 'block'\n          ? first.delta\n          : new Delta().insert({ [first.key]: first.value });\n      insertInlineContents(this, index, delta);\n      const newlineCharLength = first.type === 'block' ? 1 : 0;\n      const lineEndIndex = index + delta.length() + newlineCharLength;\n      if (shouldInsertNewlineChar) {\n        this.insertAt(lineEndIndex - 1, '\\n');\n      }\n\n      const formats = bubbleFormats(this.line(index)[0]);\n      const attributes = AttributeMap.diff(formats, first.attributes) || {};\n      Object.keys(attributes).forEach((name) => {\n        this.formatAt(lineEndIndex - 1, 1, name, attributes[name]);\n      });\n\n      index = lineEndIndex;\n    }\n\n    let [refBlot, refBlotOffset] = this.children.find(index);\n    if (renderBlocks.length) {\n      if (refBlot) {\n        refBlot = refBlot.split(refBlotOffset);\n        refBlotOffset = 0;\n      }\n\n      renderBlocks.forEach((renderBlock) => {\n        if (renderBlock.type === 'block') {\n          const block = this.createBlock(\n            renderBlock.attributes,\n            refBlot || undefined,\n          );\n          insertInlineContents(block, 0, renderBlock.delta);\n        } else {\n          const blockEmbed = this.create(\n            renderBlock.key,\n            renderBlock.value,\n          ) as EmbedBlot;\n          this.insertBefore(blockEmbed, refBlot || undefined);\n          Object.keys(renderBlock.attributes).forEach((name) => {\n            blockEmbed.format(name, renderBlock.attributes[name]);\n          });\n        }\n      });\n    }\n\n    if (last.type === 'block' && last.delta.length()) {\n      const offset = refBlot\n        ? refBlot.offset(refBlot.scroll) + refBlotOffset\n        : this.length();\n      insertInlineContents(this, offset, last.delta);\n    }\n\n    this.batchEnd();\n    this.optimize();\n  }\n\n  isEnabled() {\n    return this.domNode.getAttribute('contenteditable') === 'true';\n  }\n\n  leaf(index: number): [LeafBlot | null, number] {\n    const last = this.path(index).pop();\n    if (!last) {\n      return [null, -1];\n    }\n\n    const [blot, offset] = last;\n    return blot instanceof LeafBlot ? [blot, offset] : [null, -1];\n  }\n\n  line(index: number): [Block | BlockEmbed | null, number] {\n    if (index === this.length()) {\n      return this.line(index - 1);\n    }\n    // @ts-expect-error TODO: make descendant() generic\n    return this.descendant(isLine, index);\n  }\n\n  lines(index = 0, length = Number.MAX_VALUE): (Block | BlockEmbed)[] {\n    const getLines = (\n      blot: ParentBlot,\n      blotIndex: number,\n      blotLength: number,\n    ) => {\n      let lines: (Block | BlockEmbed)[] = [];\n      let lengthLeft = blotLength;\n      blot.children.forEachAt(\n        blotIndex,\n        blotLength,\n        (child, childIndex, childLength) => {\n          if (isLine(child)) {\n            lines.push(child);\n          } else if (child instanceof ContainerBlot) {\n            lines = lines.concat(getLines(child, childIndex, lengthLeft));\n          }\n          lengthLeft -= childLength;\n        },\n      );\n      return lines;\n    };\n    return getLines(this, index, length);\n  }\n\n  optimize(context?: { [key: string]: any }): void;\n  optimize(\n    mutations?: MutationRecord[],\n    context?: { [key: string]: any },\n  ): void;\n  optimize(mutations = [], context = {}) {\n    if (this.batch) return;\n    super.optimize(mutations, context);\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_OPTIMIZE, mutations, context);\n    }\n  }\n\n  path(index: number) {\n    return super.path(index).slice(1); // Exclude self\n  }\n\n  remove() {\n    // Never remove self\n  }\n\n  update(source?: EmitterSource): void;\n  update(mutations?: MutationRecord[]): void;\n  update(mutations?: MutationRecord[] | EmitterSource): void {\n    if (this.batch) {\n      if (Array.isArray(mutations)) {\n        this.batch = this.batch.concat(mutations);\n      }\n      return;\n    }\n    let source: EmitterSource = Emitter.sources.USER;\n    if (typeof mutations === 'string') {\n      source = mutations;\n    }\n    if (!Array.isArray(mutations)) {\n      mutations = this.observer.takeRecords();\n    }\n    mutations = mutations.filter(({ target }) => {\n      const blot = this.find(target, true);\n      return blot && !isUpdatable(blot);\n    });\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_BEFORE_UPDATE, source, mutations);\n    }\n    super.update(mutations.concat([])); // pass copy\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_UPDATE, source, mutations);\n    }\n  }\n\n  updateEmbedAt(index: number, key: string, change: unknown) {\n    // Currently it only supports top-level embeds (BlockEmbed).\n    // We can update `ParentBlot` in parchment to support inline embeds.\n    const [blot] = this.descendant((b: Blot) => b instanceof BlockEmbed, index);\n    if (blot && blot.statics.blotName === key && isUpdatable(blot)) {\n      blot.updateContent(change);\n    }\n  }\n\n  protected handleDragStart(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  private deltaToRenderBlocks(delta: Delta) {\n    const renderBlocks: RenderBlock[] = [];\n\n    let currentBlockDelta = new Delta();\n    delta.forEach((op) => {\n      const insert = op?.insert;\n      if (!insert) return;\n      if (typeof insert === 'string') {\n        const splitted = insert.split('\\n');\n        splitted.slice(0, -1).forEach((text) => {\n          currentBlockDelta.insert(text, op.attributes);\n          renderBlocks.push({\n            type: 'block',\n            delta: currentBlockDelta,\n            attributes: op.attributes ?? {},\n          });\n          currentBlockDelta = new Delta();\n        });\n        const last = splitted[splitted.length - 1];\n        if (last) {\n          currentBlockDelta.insert(last, op.attributes);\n        }\n      } else {\n        const key = Object.keys(insert)[0];\n        if (!key) return;\n        if (this.query(key, Scope.INLINE)) {\n          currentBlockDelta.push(op);\n        } else {\n          if (currentBlockDelta.length()) {\n            renderBlocks.push({\n              type: 'block',\n              delta: currentBlockDelta,\n              attributes: {},\n            });\n          }\n          currentBlockDelta = new Delta();\n          renderBlocks.push({\n            type: 'blockEmbed',\n            key,\n            value: insert[key],\n            attributes: op.attributes ?? {},\n          });\n        }\n      }\n    });\n\n    if (currentBlockDelta.length()) {\n      renderBlocks.push({\n        type: 'block',\n        delta: currentBlockDelta,\n        attributes: {},\n      });\n    }\n\n    return renderBlocks;\n  }\n\n  private createBlock(attributes: AttributeMap, refBlot?: Blot) {\n    let blotName: string | undefined;\n    const formats: AttributeMap = {};\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      const isBlockBlot = this.query(key, Scope.BLOCK & Scope.BLOT) != null;\n      if (isBlockBlot) {\n        blotName = key;\n      } else {\n        formats[key] = value;\n      }\n    });\n\n    const block = this.create(\n      blotName || this.statics.defaultChild.blotName,\n      blotName ? attributes[blotName] : undefined,\n    ) as ParentBlot;\n\n    this.insertBefore(block, refBlot || undefined);\n\n    const length = block.length();\n    Object.entries(formats).forEach(([key, value]) => {\n      block.formatAt(0, length, key, value);\n    });\n\n    return block;\n  }\n}\n\nfunction insertInlineContents(\n  parent: ParentBlot,\n  index: number,\n  inlineContents: Delta,\n) {\n  inlineContents.reduce((index, op) => {\n    const length = Op.length(op);\n    let attributes = op.attributes || {};\n    if (op.insert != null) {\n      if (typeof op.insert === 'string') {\n        const text = op.insert;\n        parent.insertAt(index, text);\n        const [leaf] = parent.descendant(LeafBlot, index);\n        const formats = bubbleFormats(leaf);\n        attributes = AttributeMap.diff(formats, attributes) || {};\n      } else if (typeof op.insert === 'object') {\n        const key = Object.keys(op.insert)[0]; // There should only be one key\n        if (key == null) return index;\n        parent.insertAt(index, key, op.insert[key]);\n        const isInlineEmbed = parent.scroll.query(key, Scope.INLINE) != null;\n        if (isInlineEmbed) {\n          const [leaf] = parent.descendant(LeafBlot, index);\n          const formats = bubbleFormats(leaf);\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        }\n      }\n    }\n    Object.keys(attributes).forEach((key) => {\n      parent.formatAt(index, length, key, attributes[key]);\n    });\n    return index + length;\n  }, index);\n}\n\nexport default Scroll;\n",null,"import type { ScrollBlot } from 'parchment';\nimport {\n  Attributor,\n  BlockBlot,\n  ClassAttributor,\n  EmbedBlot,\n  Scope,\n  StyleAttributor,\n} from 'parchment';\nimport Delta from 'quill-delta';\nimport { BlockEmbed } from '../blots/block.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { AlignAttribute, AlignStyle } from '../formats/align.js';\nimport { BackgroundStyle } from '../formats/background.js';\nimport CodeBlock from '../formats/code.js';\nimport { ColorStyle } from '../formats/color.js';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction.js';\nimport { FontStyle } from '../formats/font.js';\nimport { SizeStyle } from '../formats/size.js';\nimport { deleteRange } from './keyboard.js';\nimport normalizeExternalHTML from './normalizeExternalHTML/index.js';\n\nconst debug = logger('quill:clipboard');\n\ntype Selector = string | Node['TEXT_NODE'] | Node['ELEMENT_NODE'];\ntype Matcher = (node: Node, delta: Delta, scroll: ScrollBlot) => Delta;\n\nconst CLIPBOARD_CONFIG: [Selector, Matcher][] = [\n  [Node.TEXT_NODE, matchText],\n  [Node.TEXT_NODE, matchNewline],\n  ['br', matchBreak],\n  [Node.ELEMENT_NODE, matchNewline],\n  [Node.ELEMENT_NODE, matchBlot],\n  [Node.ELEMENT_NODE, matchAttributor],\n  [Node.ELEMENT_NODE, matchStyles],\n  ['li', matchIndent],\n  ['ol, ul', matchList],\n  ['pre', matchCodeBlock],\n  ['tr', matchTable],\n  ['b', createMatchAlias('bold')],\n  ['i', createMatchAlias('italic')],\n  ['strike', createMatchAlias('strike')],\n  ['style', matchIgnore],\n];\n\nconst ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(\n  (memo: Record<string, Attributor>, attr) => {\n    memo[attr.keyName] = attr;\n    return memo;\n  },\n  {},\n);\n\nconst STYLE_ATTRIBUTORS = [\n  AlignStyle,\n  BackgroundStyle,\n  ColorStyle,\n  DirectionStyle,\n  FontStyle,\n  SizeStyle,\n].reduce((memo: Record<string, Attributor>, attr) => {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\ninterface ClipboardOptions {\n  matchers: [Selector, Matcher][];\n}\n\nclass Clipboard extends Module<ClipboardOptions> {\n  static DEFAULTS: ClipboardOptions = {\n    matchers: [],\n  };\n\n  matchers: [Selector, Matcher][];\n\n  constructor(quill: Quill, options: Partial<ClipboardOptions>) {\n    super(quill, options);\n    this.quill.root.addEventListener('copy', (e) =>\n      this.onCaptureCopy(e, false),\n    );\n    this.quill.root.addEventListener('cut', (e) => this.onCaptureCopy(e, true));\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\n    this.matchers = [];\n    CLIPBOARD_CONFIG.concat(this.options.matchers ?? []).forEach(\n      ([selector, matcher]) => {\n        this.addMatcher(selector, matcher);\n      },\n    );\n  }\n\n  addMatcher(selector: Selector, matcher: Matcher) {\n    this.matchers.push([selector, matcher]);\n  }\n\n  convert(\n    { html, text }: { html?: string; text?: string },\n    formats: Record<string, unknown> = {},\n  ) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text || '', {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName],\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || '', formats);\n    }\n    const delta = this.convertHTML(html);\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, '\\n') &&\n      (delta.ops[delta.ops.length - 1].attributes == null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  protected normalizeHTML(doc: Document) {\n    normalizeExternalHTML(doc);\n  }\n\n  protected convertHTML(html: string) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    this.normalizeHTML(doc);\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches,\n    );\n    return traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches,\n    );\n  }\n\n  dangerouslyPasteHTML(html: string, source?: EmitterSource): void;\n  dangerouslyPasteHTML(\n    index: number,\n    html: string,\n    source?: EmitterSource,\n  ): void;\n  dangerouslyPasteHTML(\n    index: number | string,\n    html?: string,\n    source: EmitterSource = Quill.sources.API,\n  ) {\n    if (typeof index === 'string') {\n      const delta = this.convert({ html: index, text: '' });\n      // @ts-expect-error\n      this.quill.setContents(delta, html);\n      this.quill.setSelection(0, Quill.sources.SILENT);\n    } else {\n      const paste = this.convert({ html, text: '' });\n      this.quill.updateContents(\n        new Delta().retain(index).concat(paste),\n        source,\n      );\n      this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n    }\n  }\n\n  onCaptureCopy(e: ClipboardEvent, isCut = false) {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n    const [range] = this.quill.selection.getRange();\n    if (range == null) return;\n    const { html, text } = this.onCopy(range, isCut);\n    e.clipboardData?.setData('text/plain', text);\n    e.clipboardData?.setData('text/html', html);\n    if (isCut) {\n      deleteRange({ range, quill: this.quill });\n    }\n  }\n\n  /*\n   * https://www.iana.org/assignments/media-types/text/uri-list\n   */\n  private normalizeURIList(urlList: string) {\n    return (\n      urlList\n        .split(/\\r?\\n/)\n        // Ignore all comments\n        .filter((url) => url[0] !== '#')\n        .join('\\n')\n    );\n  }\n\n  onCapturePaste(e: ClipboardEvent) {\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    e.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range == null) return;\n    const html = e.clipboardData?.getData('text/html');\n    let text = e.clipboardData?.getData('text/plain');\n    if (!html && !text) {\n      const urlList = e.clipboardData?.getData('text/uri-list');\n      if (urlList) {\n        text = this.normalizeURIList(urlList);\n      }\n    }\n    const files = Array.from(e.clipboardData?.files || []);\n    if (!html && files.length > 0) {\n      this.quill.uploader.upload(range, files);\n      return;\n    }\n    if (html && files.length > 0) {\n      const doc = new DOMParser().parseFromString(html, 'text/html');\n      if (\n        doc.body.childElementCount === 1 &&\n        doc.body.firstElementChild?.tagName === 'IMG'\n      ) {\n        this.quill.uploader.upload(range, files);\n        return;\n      }\n    }\n    this.onPaste(range, { html, text });\n  }\n\n  onCopy(range: Range, isCut: boolean): { html: string; text: string };\n  onCopy(range: Range) {\n    const text = this.quill.getText(range);\n    const html = this.quill.getSemanticHTML(range);\n    return { html, text };\n  }\n\n  onPaste(range: Range, { text, html }: { text?: string; html?: string }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convert({ text, html }, formats);\n    debug.log('onPaste', pastedDelta, { text, html });\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollSelectionIntoView();\n  }\n\n  prepareMatching(container: Element, nodeMatches: WeakMap<Node, Matcher[]>) {\n    const elementMatchers: Matcher[] = [];\n    const textMatchers: Matcher[] = [];\n    this.matchers.forEach((pair) => {\n      const [selector, matcher] = pair;\n      switch (selector) {\n        case Node.TEXT_NODE:\n          textMatchers.push(matcher);\n          break;\n        case Node.ELEMENT_NODE:\n          elementMatchers.push(matcher);\n          break;\n        default:\n          Array.from(container.querySelectorAll(selector)).forEach((node) => {\n            if (nodeMatches.has(node)) {\n              const matches = nodeMatches.get(node);\n              matches?.push(matcher);\n            } else {\n              nodeMatches.set(node, [matcher]);\n            }\n          });\n          break;\n      }\n    });\n    return [elementMatchers, textMatchers];\n  }\n}\n\nfunction applyFormat(\n  delta: Delta,\n  format: string,\n  value: unknown,\n  scroll: ScrollBlot,\n): Delta {\n  if (!scroll.query(format)) {\n    return delta;\n  }\n\n  return delta.reduce((newDelta, op) => {\n    if (!op.insert) return newDelta;\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    const formats = value ? { [format]: value } : {};\n    return newDelta.insert(op.insert, { ...formats, ...op.attributes });\n  }, new Delta());\n}\n\nfunction deltaEndsWith(delta: Delta, text: string) {\n  let endText = '';\n  for (\n    let i = delta.ops.length - 1;\n    i >= 0 && endText.length < text.length;\n    --i // eslint-disable-line no-plusplus\n  ) {\n    const op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node: Node, scroll: ScrollBlot) {\n  if (!(node instanceof Element)) return false;\n  const match = scroll.query(node);\n  // @ts-expect-error\n  if (match && match.prototype instanceof EmbedBlot) return false;\n\n  return [\n    'address',\n    'article',\n    'blockquote',\n    'canvas',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'iframe',\n    'li',\n    'main',\n    'nav',\n    'ol',\n    'output',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'td',\n    'tr',\n    'ul',\n    'video',\n  ].includes(node.tagName.toLowerCase());\n}\n\nfunction isBetweenInlineElements(node: HTMLElement, scroll: ScrollBlot) {\n  return (\n    node.previousElementSibling &&\n    node.nextElementSibling &&\n    !isLine(node.previousElementSibling, scroll) &&\n    !isLine(node.nextElementSibling, scroll)\n  );\n}\n\nconst preNodes = new WeakMap();\nfunction isPre(node: Node | null) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    // @ts-expect-error\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\n\nfunction traverse(\n  scroll: ScrollBlot,\n  node: ChildNode,\n  elementMatchers: Matcher[],\n  textMatchers: Matcher[],\n  nodeMatches: WeakMap<Node, Matcher[]>,\n): Delta {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce((delta: Delta, matcher) => {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\n      let childrenDelta = traverse(\n        scroll,\n        childNode,\n        elementMatchers,\n        textMatchers,\n        nodeMatches,\n      );\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\n          return matcher(childNode as HTMLElement, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(\n          (reducedDelta, matcher) => {\n            return matcher(childNode, reducedDelta, scroll);\n          },\n          childrenDelta,\n        );\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\n\nfunction createMatchAlias(format: string) {\n  return (_node: Element, delta: Delta, scroll: ScrollBlot) => {\n    return applyFormat(delta, format, true, scroll);\n  };\n}\n\nfunction matchAttributor(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const attributes = Attributor.keys(node);\n  const classes = ClassAttributor.keys(node);\n  const styles = StyleAttributor.keys(node);\n  const formats: Record<string, string | undefined> = {};\n  attributes\n    .concat(classes)\n    .concat(styles)\n    .forEach((name) => {\n      let attr = scroll.query(name, Scope.ATTRIBUTE) as Attributor;\n      if (attr != null) {\n        formats[attr.attrName] = attr.value(node);\n        if (formats[attr.attrName]) return;\n      }\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n      attr = STYLE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        attr = STYLE_ATTRIBUTORS[name];\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n    });\n\n  return Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n}\n\nfunction matchBlot(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (match == null) return delta;\n  // @ts-expect-error\n  if (match.prototype instanceof EmbedBlot) {\n    const embed = {};\n    // @ts-expect-error\n    const value = match.value(node);\n    if (value != null) {\n      // @ts-expect-error\n      embed[match.blotName] = value;\n      // @ts-expect-error\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    // @ts-expect-error\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if (\n      'blotName' in match &&\n      'formats' in match &&\n      typeof match.formats === 'function'\n    ) {\n      return applyFormat(\n        delta,\n        match.blotName,\n        match.formats(node, scroll),\n        scroll,\n      );\n    }\n  }\n  return delta;\n}\n\nfunction matchBreak(node: Node, delta: Delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchCodeBlock(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query('code-block');\n  const language =\n    match && 'formats' in match && typeof match.formats === 'function'\n      ? match.formats(node, scroll)\n      : true;\n  return applyFormat(delta, 'code-block', language, scroll);\n}\n\nfunction matchIgnore() {\n  return new Delta();\n}\n\nfunction matchIndent(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (\n    match == null ||\n    // @ts-expect-error\n    match.blotName !== 'list' ||\n    !deltaEndsWith(delta, '\\n')\n  ) {\n    return delta;\n  }\n  let indent = -1;\n  let parent = node.parentNode;\n  while (parent != null) {\n    // @ts-expect-error\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce((composed, op) => {\n    if (!op.insert) return composed;\n    if (op.attributes && typeof op.attributes.indent === 'number') {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, { indent, ...(op.attributes || {}) });\n  }, new Delta());\n}\n\nfunction matchList(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const element = node as Element;\n  let list = element.tagName === 'OL' ? 'ordered' : 'bullet';\n\n  const checkedAttr = element.getAttribute('data-checked');\n  if (checkedAttr) {\n    list = checkedAttr === 'true' ? 'checked' : 'unchecked';\n  }\n\n  return applyFormat(delta, 'list', list, scroll);\n}\n\nfunction matchNewline(node: Node, delta: Delta, scroll: ScrollBlot) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (\n      isLine(node, scroll) &&\n      (node.childNodes.length > 0 || node instanceof HTMLParagraphElement)\n    ) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      let nextSibling: Node | null = node.nextSibling;\n      while (nextSibling != null) {\n        if (isLine(nextSibling, scroll)) {\n          return delta.insert('\\n');\n        }\n        const match = scroll.query(nextSibling);\n        // @ts-expect-error\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const formats: Record<string, unknown> = {};\n  const style: Partial<CSSStyleDeclaration> = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.textDecoration === 'underline') {\n    formats.underline = true;\n  }\n  if (style.textDecoration === 'line-through') {\n    formats.strike = true;\n  }\n  if (\n    style.fontWeight?.startsWith('bold') ||\n    // @ts-expect-error Fix me later\n    parseInt(style.fontWeight, 10) >= 700\n  ) {\n    formats.bold = true;\n  }\n  delta = Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n  // @ts-expect-error\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchTable(\n  node: HTMLTableRowElement,\n  delta: Delta,\n  scroll: ScrollBlot,\n) {\n  const table =\n    node.parentElement?.tagName === 'TABLE'\n      ? node.parentElement\n      : node.parentElement?.parentElement;\n  if (table != null) {\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const row = rows.indexOf(node) + 1;\n    return applyFormat(delta, 'table', row, scroll);\n  }\n  return delta;\n}\n\nfunction matchText(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  // @ts-expect-error\n  let text = node.data;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentElement?.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (!isPre(node)) {\n    if (\n      text.trim().length === 0 &&\n      text.includes('\\n') &&\n      !isBetweenInlineElements(node, scroll)\n    ) {\n      return delta;\n    }\n    const replacer = (collapse: unknown, match: string) => {\n      const replaced = match.replace(/[^\\u00a0]/g, ''); // \\u00a0 is nbsp;\n      return replaced.length < 1 && collapse ? ' ' : replaced;\n    };\n    text = text.replace(/\\r\\n/g, ' ').replace(/\\n/g, ' ');\n    text = text.replace(/\\s\\s+/g, replacer.bind(replacer, true)); // collapse whitespace\n    if (\n      (node.previousSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.previousSibling instanceof Element &&\n        isLine(node.previousSibling, scroll))\n    ) {\n      text = text.replace(/^\\s+/, replacer.bind(replacer, false));\n    }\n    if (\n      (node.nextSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.nextSibling instanceof Element && isLine(node.nextSibling, scroll))\n    ) {\n      text = text.replace(/\\s+$/, replacer.bind(replacer, false));\n    }\n  }\n  return delta.insert(text);\n}\n\nexport {\n  Clipboard as default,\n  matchAttributor,\n  matchBlot,\n  matchNewline,\n  matchText,\n  traverse,\n};\n",null,"import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['right', 'center', 'justify'],\n};\n\nconst AlignAttribute = new Attributor('align', 'align', config);\nconst AlignClass = new ClassAttributor('align', 'ql-align', config);\nconst AlignStyle = new StyleAttributor('align', 'text-align', config);\n\nexport { AlignAttribute, AlignClass, AlignStyle };\n",null,"import { ClassAttributor, Scope } from 'parchment';\nimport { ColorAttributor } from './color.js';\n\nconst BackgroundClass = new ClassAttributor('background', 'ql-bg', {\n  scope: Scope.INLINE,\n});\nconst BackgroundStyle = new ColorAttributor('background', 'background-color', {\n  scope: Scope.INLINE,\n});\n\nexport { BackgroundClass, BackgroundStyle };\n",null,"import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nclass ColorAttributor extends StyleAttributor {\n  value(domNode: HTMLElement) {\n    let value = super.value(domNode) as string;\n    if (!value.startsWith('rgb(')) return value;\n    value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n    const hex = value\n      .split(',')\n      .map((component) => `00${parseInt(component, 10).toString(16)}`.slice(-2))\n      .join('');\n    return `#${hex}`;\n  }\n}\n\nconst ColorClass = new ClassAttributor('color', 'ql-color', {\n  scope: Scope.INLINE,\n});\nconst ColorStyle = new ColorAttributor('color', 'color', {\n  scope: Scope.INLINE,\n});\n\nexport { ColorAttributor, ColorClass, ColorStyle };\n",null,"import Block from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport Cursor from '../blots/cursor.js';\nimport Inline from '../blots/inline.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport Container from '../blots/container.js';\nimport Quill from '../core/quill.js';\n\nclass CodeBlockContainer extends Container {\n  static create(value: string) {\n    const domNode = super.create(value) as Element;\n    domNode.setAttribute('spellcheck', 'false');\n    return domNode;\n  }\n\n  code(index: number, length: number) {\n    return (\n      this.children\n        // @ts-expect-error\n        .map((child) => (child.length() <= 1 ? '' : child.domNode.innerText))\n        .join('\\n')\n        .slice(index, index + length)\n    );\n  }\n\n  html(index: number, length: number) {\n    // `\\n`s are needed in order to support empty lines at the beginning and the end.\n    // https://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\n    return `<pre>\\n${escapeText(this.code(index, length))}\\n</pre>`;\n  }\n}\n\nclass CodeBlock extends Block {\n  static TAB = '  ';\n\n  static register() {\n    Quill.register(CodeBlockContainer);\n  }\n}\n\nclass Code extends Inline {}\nCode.blotName = 'code';\nCode.tagName = 'CODE';\n\nCodeBlock.blotName = 'code-block';\nCodeBlock.className = 'ql-code-block';\nCodeBlock.tagName = 'DIV';\nCodeBlockContainer.blotName = 'code-block-container';\nCodeBlockContainer.className = 'ql-code-block-container';\nCodeBlockContainer.tagName = 'DIV';\n\nCodeBlockContainer.allowedChildren = [CodeBlock];\n\nCodeBlock.allowedChildren = [TextBlot, Break, Cursor];\nCodeBlock.requiredContainer = CodeBlockContainer;\n\nexport { Code, CodeBlockContainer, CodeBlock as default };\n",null,"import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['rtl'],\n};\n\nconst DirectionAttribute = new Attributor('direction', 'dir', config);\nconst DirectionClass = new ClassAttributor('direction', 'ql-direction', config);\nconst DirectionStyle = new StyleAttributor('direction', 'direction', config);\n\nexport { DirectionAttribute, DirectionClass, DirectionStyle };\n",null,"import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.INLINE,\n  whitelist: ['serif', 'monospace'],\n};\n\nconst FontClass = new ClassAttributor('font', 'ql-font', config);\n\nclass FontStyleAttributor extends StyleAttributor {\n  value(node: HTMLElement) {\n    return super.value(node).replace(/[\"']/g, '');\n  }\n}\n\nconst FontStyle = new FontStyleAttributor('font', 'font-family', config);\n\nexport { FontStyle, FontClass };\n",null,"import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst SizeClass = new ClassAttributor('size', 'ql-size', {\n  scope: Scope.INLINE,\n  whitelist: ['small', 'large', 'huge'],\n});\nconst SizeStyle = new StyleAttributor('size', 'font-size', {\n  scope: Scope.INLINE,\n  whitelist: ['10px', '18px', '32px'],\n});\n\nexport { SizeClass, SizeStyle };\n",null,"import { cloneDeep, isEqual } from 'lodash-es';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport type { Blot, BlockBlot } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:keyboard');\n\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nexport interface Context {\n  collapsed: boolean;\n  empty: boolean;\n  offset: number;\n  prefix: string;\n  suffix: string;\n  format: Record<string, unknown>;\n  event: KeyboardEvent;\n  line: BlockEmbed | BlockBlot;\n}\n\ninterface BindingObject\n  extends Partial<Omit<Context, 'prefix' | 'suffix' | 'format'>> {\n  key: number | string | string[];\n  shortKey?: boolean | null;\n  shiftKey?: boolean | null;\n  altKey?: boolean | null;\n  metaKey?: boolean | null;\n  ctrlKey?: boolean | null;\n  prefix?: RegExp;\n  suffix?: RegExp;\n  format?: Record<string, unknown> | string[];\n  handler?: (\n    this: { quill: Quill },\n    range: Range,\n    curContext: Context,\n    // eslint-disable-next-line no-use-before-define\n    binding: NormalizedBinding,\n  ) => boolean | void;\n}\n\ntype Binding = BindingObject | string | number;\n\ninterface NormalizedBinding extends Omit<BindingObject, 'key' | 'shortKey'> {\n  key: string | number;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\nclass Keyboard extends Module<KeyboardOptions> {\n  static DEFAULTS: KeyboardOptions;\n\n  static match(evt: KeyboardEvent, binding: BindingObject) {\n    if (\n      (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'] as const).some((key) => {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })\n    ) {\n      return false;\n    }\n    return binding.key === evt.key || binding.key === evt.which;\n  }\n\n  bindings: Record<string, NormalizedBinding[]>;\n\n  constructor(quill: Quill, options: Partial<KeyboardOptions>) {\n    super(quill, options);\n    this.bindings = {};\n    // @ts-expect-error Fix me later\n    Object.keys(this.options.bindings).forEach((name) => {\n      // @ts-expect-error Fix me later\n      if (this.options.bindings[name]) {\n        // @ts-expect-error Fix me later\n        this.addBinding(this.options.bindings[name]);\n      }\n    });\n    this.addBinding({ key: 'Enter', shiftKey: null }, this.handleEnter);\n    this.addBinding(\n      { key: 'Enter', metaKey: null, ctrlKey: null, altKey: null },\n      () => {},\n    );\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true },\n        this.handleDelete,\n      );\n    } else {\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true, prefix: /^.?$/ },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true, suffix: /^.?$/ },\n        this.handleDelete,\n      );\n    }\n    this.addBinding(\n      { key: 'Backspace' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      { key: 'Delete' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      {\n        key: 'Backspace',\n        altKey: null,\n        ctrlKey: null,\n        metaKey: null,\n        shiftKey: null,\n      },\n      { collapsed: true, offset: 0 },\n      this.handleBackspace,\n    );\n    this.listen();\n  }\n\n  addBinding(\n    keyBinding: Binding,\n    context:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n    handler:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n  ) {\n    const binding = normalize(keyBinding);\n    if (binding == null) {\n      debug.warn('Attempted to add invalid keyboard binding', binding);\n      return;\n    }\n    if (typeof context === 'function') {\n      context = { handler: context };\n    }\n    if (typeof handler === 'function') {\n      handler = { handler };\n    }\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n    keys.forEach((key) => {\n      const singleBinding = {\n        ...binding,\n        key,\n        ...context,\n        ...handler,\n      };\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\n      this.bindings[singleBinding.key].push(singleBinding);\n    });\n  }\n\n  listen() {\n    this.quill.root.addEventListener('keydown', (evt) => {\n      if (evt.defaultPrevented || evt.isComposing) return;\n      const bindings = (this.bindings[evt.key] || []).concat(\n        this.bindings[evt.which] || [],\n      );\n      const matches = bindings.filter((binding) =>\n        Keyboard.match(evt, binding),\n      );\n      if (matches.length === 0) return;\n      // @ts-expect-error\n      const blot = Quill.find(evt.target, true);\n      if (blot && blot.scroll !== this.quill.scroll) return;\n      const range = this.quill.getSelection();\n      if (range == null || !this.quill.hasFocus()) return;\n      const [line, offset] = this.quill.getLine(range.index);\n      const [leafStart, offsetStart] = this.quill.getLeaf(range.index);\n      const [leafEnd, offsetEnd] =\n        range.length === 0\n          ? [leafStart, offsetStart]\n          : this.quill.getLeaf(range.index + range.length);\n      const prefixText =\n        leafStart instanceof TextBlot\n          ? leafStart.value().slice(0, offsetStart)\n          : '';\n      const suffixText =\n        leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n      const curContext = {\n        collapsed: range.length === 0,\n        // @ts-expect-error Fix me later\n        empty: range.length === 0 && line.length() <= 1,\n        format: this.quill.getFormat(range),\n        line,\n        offset,\n        prefix: prefixText,\n        suffix: suffixText,\n        event: evt,\n      };\n      const prevented = matches.some((binding) => {\n        if (\n          binding.collapsed != null &&\n          binding.collapsed !== curContext.collapsed\n        ) {\n          return false;\n        }\n        if (binding.empty != null && binding.empty !== curContext.empty) {\n          return false;\n        }\n        if (binding.offset != null && binding.offset !== curContext.offset) {\n          return false;\n        }\n        if (Array.isArray(binding.format)) {\n          // any format is present\n          if (binding.format.every((name) => curContext.format[name] == null)) {\n            return false;\n          }\n        } else if (typeof binding.format === 'object') {\n          // all formats must match\n          if (\n            !Object.keys(binding.format).every((name) => {\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === true)\n                return curContext.format[name] != null;\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === false)\n                return curContext.format[name] == null;\n              // @ts-expect-error Fix me later\n              return isEqual(binding.format[name], curContext.format[name]);\n            })\n          ) {\n            return false;\n          }\n        }\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n          return false;\n        }\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n          return false;\n        }\n        // @ts-expect-error Fix me later\n        return binding.handler.call(this, range, curContext, binding) !== true;\n      });\n      if (prevented) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  handleBackspace(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)\n      ? 2\n      : 1;\n    if (range.index === 0 || this.quill.getLength() <= 1) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 0) {\n      // Always deleting newline here, length always 1\n      const [prev] = this.quill.getLine(range.index - 1);\n      if (prev) {\n        const isPrevLineEmpty =\n          prev.statics.blotName === 'block' && prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          // @ts-expect-error Fix me later\n          const curFormats = line.formats();\n          const prevFormats = this.quill.getFormat(range.index - 1, 1);\n          formats = AttributeMap.diff(curFormats, prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            const formatDelta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - 2)\n              .retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDelete(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix)\n      ? 2\n      : 1;\n    if (range.index >= this.quill.getLength() - length) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index).delete(length);\n    // @ts-expect-error Fix me later\n    if (context.offset >= line.length() - 1) {\n      const [next] = this.quill.getLine(range.index + 1);\n      if (next) {\n        // @ts-expect-error Fix me later\n        const curFormats = line.formats();\n        const nextFormats = this.quill.getFormat(range.index, 1);\n        formats = AttributeMap.diff(curFormats, nextFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          delta = delta.retain(next.length() - 1).retain(1, formats);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDeleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n    this.quill.focus();\n  }\n\n  handleEnter(range: Range, context: Context) {\n    const lineFormats = Object.keys(context.format).reduce(\n      (formats: Record<string, unknown>, format) => {\n        if (\n          this.quill.scroll.query(format, Scope.BLOCK) &&\n          !Array.isArray(context.format[format])\n        ) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      },\n      {},\n    );\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .insert('\\n', lineFormats);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n    this.quill.focus();\n  }\n}\n\nconst defaultOptions: KeyboardOptions = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      },\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      },\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      },\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      },\n    },\n    tab: {\n      key: 'Tab',\n      handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      },\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler(range, context) {\n        const formats: Record<string, unknown> = { list: false };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(\n          range.index,\n          range.length,\n          formats,\n          Quill.sources.USER,\n        );\n      },\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: { list: 'checked' },\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const formats = {\n          // @ts-expect-error Fix me later\n          ...line.formats(),\n          list: 'checked',\n        };\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', formats)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { list: 'unchecked' });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler(range, context) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', context.format)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { header: null });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler() {},\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler() {},\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler(range) {\n        const module = this.quill.getModule('table');\n        if (module) {\n          // @ts-expect-error\n          const [table, row, cell, offset] = module.getTable(range);\n          const shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          let index = table.offset();\n          if (shift < 0) {\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(\n              range.index + 1,\n              range.length,\n              Quill.sources.SILENT,\n            );\n          } else if (shift > 0) {\n            index += table.length();\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      },\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler(range, context) {\n        const { event, line: cell } = context;\n        const offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      },\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        'code-block': false,\n        blockquote: false,\n        table: false,\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        const { length } = context.prefix;\n        const [line, offset] = this.quill.getLine(range.index);\n        if (offset > length) return true;\n        let value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index - offset)\n          .delete(length + 1)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - 2 - offset)\n          .retain(1, { list: value });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        let numLines = 2;\n        let cur = line;\n        while (\n          cur != null &&\n          cur.length() <= 1 &&\n          cur.formats()['code-block']\n        ) {\n          // @ts-expect-error\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            const delta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - offset - 2)\n              .retain(1, { 'code-block': null })\n              .delete(1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true),\n  },\n};\n\nKeyboard.DEFAULTS = defaultOptions;\n\nfunction makeCodeBlockHandler(indent: boolean): BindingObject {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler(range, { event }) {\n      const CodeBlock = this.quill.scroll.query('code-block');\n      // @ts-expect-error\n      const { TAB } = CodeBlock;\n      if (range.length === 0 && !event.shiftKey) {\n        this.quill.insertText(range.index, TAB, Quill.sources.USER);\n        this.quill.setSelection(range.index + TAB.length, Quill.sources.SILENT);\n        return;\n      }\n\n      const lines =\n        range.length === 0\n          ? this.quill.getLines(range.index, 1)\n          : this.quill.getLines(range);\n      let { index, length } = range;\n      lines.forEach((line, i) => {\n        if (indent) {\n          line.insertAt(0, TAB);\n          if (i === 0) {\n            index += TAB.length;\n          } else {\n            length += TAB.length;\n          }\n          // @ts-expect-error Fix me later\n        } else if (line.domNode.textContent.startsWith(TAB)) {\n          line.deleteAt(0, TAB.length);\n          if (i === 0) {\n            index -= TAB.length;\n          } else {\n            length -= TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    },\n  };\n}\n\nfunction makeEmbedArrowHandler(\n  key: string,\n  shiftKey: boolean | null,\n): BindingObject {\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return {\n    key,\n    shiftKey,\n    altKey: null,\n    [where]: /^$/,\n    handler(range) {\n      let { index } = range;\n      if (key === 'ArrowRight') {\n        index += range.length + 1;\n      }\n      const [leaf] = this.quill.getLeaf(index);\n      if (!(leaf instanceof EmbedBlot)) return true;\n      if (key === 'ArrowLeft') {\n        if (shiftKey) {\n          this.quill.setSelection(\n            range.index - 1,\n            range.length + 1,\n            Quill.sources.USER,\n          );\n        } else {\n          this.quill.setSelection(range.index - 1, Quill.sources.USER);\n        }\n      } else if (shiftKey) {\n        this.quill.setSelection(\n          range.index,\n          range.length + 1,\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.setSelection(\n          range.index + range.length + 1,\n          Quill.sources.USER,\n        );\n      }\n      return false;\n    },\n  };\n}\n\nfunction makeFormatHandler(format: string): BindingObject {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    },\n  };\n}\n\nfunction makeTableArrowHandler(up: boolean): BindingObject {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler(range, context) {\n      // TODO move to table module\n      const key = up ? 'prev' : 'next';\n      const cell = context.line;\n      const targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          // @ts-expect-error\n          let targetCell = targetRow.children.head;\n          let cur = cell;\n          while (cur.prev != null) {\n            // @ts-expect-error\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          const index =\n            targetCell.offset(this.quill.scroll) +\n            Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        // @ts-expect-error\n        const targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll) + targetLine.length() - 1,\n              0,\n              Quill.sources.USER,\n            );\n          } else {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll),\n              0,\n              Quill.sources.USER,\n            );\n          }\n        }\n      }\n      return false;\n    },\n  };\n}\n\nfunction normalize(binding: Binding): BindingObject | null {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = { key: binding };\n  } else if (typeof binding === 'object') {\n    binding = cloneDeep(binding);\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\n// TODO: Move into quill.ts or editor.ts\nfunction deleteRange({ quill, range }: { quill: Quill; range: Range }) {\n  const lines = quill.getLines(range);\n  let formats = {};\n  if (lines.length > 1) {\n    const firstFormats = lines[0].formats();\n    const lastFormats = lines[lines.length - 1].formats();\n    formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n  }\n  quill.deleteText(range, Quill.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n  }\n  quill.setSelection(range.index, Quill.sources.SILENT);\n}\n\nfunction tableSide(_table: unknown, row: Blot, cell: Blot, offset: number) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\n\nexport { Keyboard as default, SHORTKEY, normalize, deleteRange };\n",null,"import googleDocs from './normalizers/googleDocs.js';\nimport msWord from './normalizers/msWord.js';\n\nconst NORMALIZERS = [msWord, googleDocs];\n\nconst normalizeExternalHTML = (doc: Document) => {\n  if (doc.documentElement) {\n    NORMALIZERS.forEach((normalize) => {\n      normalize(doc);\n    });\n  }\n};\n\nexport default normalizeExternalHTML;\n",null,"const normalWeightRegexp = /font-weight:\\s*normal/;\nconst blockTagNames = ['P', 'OL', 'UL'];\n\nconst isBlockElement = (element: Element | null) => {\n  return element && blockTagNames.includes(element.tagName);\n};\n\nconst normalizeEmptyLines = (doc: Document) => {\n  Array.from(doc.querySelectorAll('br'))\n    .filter(\n      (br) =>\n        isBlockElement(br.previousElementSibling) &&\n        isBlockElement(br.nextElementSibling),\n    )\n    .forEach((br) => {\n      br.parentNode?.removeChild(br);\n    });\n};\n\nconst normalizeFontWeight = (doc: Document) => {\n  Array.from(doc.querySelectorAll('b[style*=\"font-weight\"]'))\n    .filter((node) => node.getAttribute('style')?.match(normalWeightRegexp))\n    .forEach((node) => {\n      const fragment = doc.createDocumentFragment();\n      fragment.append(...node.childNodes);\n      node.parentNode?.replaceChild(fragment, node);\n    });\n};\n\nexport default function normalize(doc: Document) {\n  if (doc.querySelector('[id^=\"docs-internal-guid-\"]')) {\n    normalizeFontWeight(doc);\n    normalizeEmptyLines(doc);\n  }\n}\n",null,"const ignoreRegexp = /\\bmso-list:[^;]*ignore/i;\nconst idRegexp = /\\bmso-list:[^;]*\\bl(\\d+)/i;\nconst indentRegexp = /\\bmso-list:[^;]*\\blevel(\\d+)/i;\n\nconst parseListItem = (element: Element, html: string) => {\n  const style = element.getAttribute('style');\n  const idMatch = style?.match(idRegexp);\n  if (!idMatch) {\n    return null;\n  }\n  const id = Number(idMatch[1]);\n\n  const indentMatch = style?.match(indentRegexp);\n  const indent = indentMatch ? Number(indentMatch[1]) : 1;\n\n  const typeRegexp = new RegExp(\n    `@list l${id}:level${indent}\\\\s*\\\\{[^\\\\}]*mso-level-number-format:\\\\s*([\\\\w-]+)`,\n    'i',\n  );\n  const typeMatch = html.match(typeRegexp);\n  const type = typeMatch && typeMatch[1] === 'bullet' ? 'bullet' : 'ordered';\n\n  return { id, indent, type, element };\n};\n\n// list items are represented as `p` tags with styles like `mso-list: l0 level1` where:\n// 1. \"0\" in \"l0\" means the list item id;\n// 2. \"1\" in \"level1\" means the indent level, starting from 1.\nconst normalizeListItem = (doc: Document) => {\n  const msoList = Array.from(doc.querySelectorAll('[style*=mso-list]'));\n  const ignored: Element[] = [];\n  const others: Element[] = [];\n  msoList.forEach((node) => {\n    const shouldIgnore = (node.getAttribute('style') || '').match(ignoreRegexp);\n    if (shouldIgnore) {\n      ignored.push(node);\n    } else {\n      others.push(node);\n    }\n  });\n\n  // Each list item contains a marker wrapped with \"mso-list: Ignore\".\n  ignored.forEach((node) => node.parentNode?.removeChild(node));\n\n  // The list stype is not defined inline with the tag, instead, it's in the\n  // style tag so we need to pass the html as a string.\n  const html = doc.documentElement.innerHTML;\n  const listItems = others\n    .map((element) => parseListItem(element, html))\n    .filter((parsed) => parsed);\n\n  while (listItems.length) {\n    const childListItems = [];\n\n    let current = listItems.shift();\n    // Group continuous items into the same group (aka \"ul\")\n    while (current) {\n      childListItems.push(current);\n      current =\n        listItems.length &&\n        listItems[0]?.element === current.element.nextElementSibling &&\n        // Different id means the next item doesn't belong to this group.\n        listItems[0].id === current.id\n          ? listItems.shift()\n          : null;\n    }\n\n    const ul = document.createElement('ul');\n    childListItems.forEach((listItem) => {\n      const li = document.createElement('li');\n      li.setAttribute('data-list', listItem.type);\n      if (listItem.indent > 1) {\n        li.setAttribute('class', `ql-indent-${listItem.indent - 1}`);\n      }\n      li.innerHTML = listItem.element.innerHTML;\n      ul.appendChild(li);\n    });\n\n    const element = childListItems[0]?.element;\n    const { parentNode } = element ?? {};\n    if (element) {\n      parentNode?.replaceChild(ul, element);\n    }\n    childListItems.slice(1).forEach(({ element: e }) => {\n      parentNode?.removeChild(e);\n    });\n  }\n};\n\nexport default function normalize(doc: Document) {\n  if (\n    doc.documentElement.getAttribute('xmlns:w') ===\n    'urn:schemas-microsoft-com:office:word'\n  ) {\n    normalizeListItem(doc);\n  }\n}\n",null,"import { Scope } from 'parchment';\nimport type Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type Scroll from '../blots/scroll.js';\nimport type { Range } from '../core/selection.js';\n\nexport interface HistoryOptions {\n  userOnly: boolean;\n  delay: number;\n  maxStack: number;\n}\n\nexport interface StackItem {\n  delta: Delta;\n  range: Range | null;\n}\n\ninterface Stack {\n  undo: StackItem[];\n  redo: StackItem[];\n}\n\nclass History extends Module<HistoryOptions> {\n  static DEFAULTS: HistoryOptions = {\n    delay: 1000,\n    maxStack: 100,\n    userOnly: false,\n  };\n\n  lastRecorded = 0;\n  ignoreChange = false;\n  stack: Stack = { undo: [], redo: [] };\n  currentRange: Range | null = null;\n\n  constructor(quill: Quill, options: Partial<HistoryOptions>) {\n    super(quill, options);\n    this.quill.on(\n      Quill.events.EDITOR_CHANGE,\n      (eventName, value, oldValue, source) => {\n        if (eventName === Quill.events.SELECTION_CHANGE) {\n          if (value && source !== Quill.sources.SILENT) {\n            this.currentRange = value;\n          }\n        } else if (eventName === Quill.events.TEXT_CHANGE) {\n          if (!this.ignoreChange) {\n            if (!this.options.userOnly || source === Quill.sources.USER) {\n              this.record(value, oldValue);\n            } else {\n              this.transform(value);\n            }\n          }\n\n          this.currentRange = transformRange(this.currentRange, value);\n        }\n      },\n    );\n\n    this.quill.keyboard.addBinding(\n      { key: 'z', shortKey: true },\n      this.undo.bind(this),\n    );\n    this.quill.keyboard.addBinding(\n      { key: ['z', 'Z'], shortKey: true, shiftKey: true },\n      this.redo.bind(this),\n    );\n    if (/Win/i.test(navigator.platform)) {\n      this.quill.keyboard.addBinding(\n        { key: 'y', shortKey: true },\n        this.redo.bind(this),\n      );\n    }\n\n    this.quill.root.addEventListener('beforeinput', (event) => {\n      if (event.inputType === 'historyUndo') {\n        this.undo();\n        event.preventDefault();\n      } else if (event.inputType === 'historyRedo') {\n        this.redo();\n        event.preventDefault();\n      }\n    });\n  }\n\n  change(source: 'undo' | 'redo', dest: 'redo' | 'undo') {\n    if (this.stack[source].length === 0) return;\n    const item = this.stack[source].pop();\n    if (!item) return;\n    const base = this.quill.getContents();\n    const inverseDelta = item.delta.invert(base);\n    this.stack[dest].push({\n      delta: inverseDelta,\n      range: transformRange(item.range, inverseDelta),\n    });\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.updateContents(item.delta, Quill.sources.USER);\n    this.ignoreChange = false;\n\n    this.restoreSelection(item);\n  }\n\n  clear() {\n    this.stack = { undo: [], redo: [] };\n  }\n\n  cutoff() {\n    this.lastRecorded = 0;\n  }\n\n  record(changeDelta: Delta, oldDelta: Delta) {\n    if (changeDelta.ops.length === 0) return;\n    this.stack.redo = [];\n    let undoDelta = changeDelta.invert(oldDelta);\n    let undoRange = this.currentRange;\n    const timestamp = Date.now();\n    if (\n      // @ts-expect-error Fix me later\n      this.lastRecorded + this.options.delay > timestamp &&\n      this.stack.undo.length > 0\n    ) {\n      const item = this.stack.undo.pop();\n      if (item) {\n        undoDelta = undoDelta.compose(item.delta);\n        undoRange = item.range;\n      }\n    } else {\n      this.lastRecorded = timestamp;\n    }\n    if (undoDelta.length() === 0) return;\n    this.stack.undo.push({ delta: undoDelta, range: undoRange });\n    // @ts-expect-error Fix me later\n    if (this.stack.undo.length > this.options.maxStack) {\n      this.stack.undo.shift();\n    }\n  }\n\n  redo() {\n    this.change('redo', 'undo');\n  }\n\n  transform(delta: Delta) {\n    transformStack(this.stack.undo, delta);\n    transformStack(this.stack.redo, delta);\n  }\n\n  undo() {\n    this.change('undo', 'redo');\n  }\n\n  protected restoreSelection(stackItem: StackItem) {\n    if (stackItem.range) {\n      this.quill.setSelection(stackItem.range, Quill.sources.USER);\n    } else {\n      const index = getLastChangeIndex(this.quill.scroll, stackItem.delta);\n      this.quill.setSelection(index, Quill.sources.USER);\n    }\n  }\n}\n\nfunction transformStack(stack: StackItem[], delta: Delta) {\n  let remoteDelta = delta;\n  for (let i = stack.length - 1; i >= 0; i -= 1) {\n    const oldItem = stack[i];\n    stack[i] = {\n      delta: remoteDelta.transform(oldItem.delta, true),\n      range: oldItem.range && transformRange(oldItem.range, remoteDelta),\n    };\n    remoteDelta = oldItem.delta.transform(remoteDelta);\n    if (stack[i].delta.length() === 0) {\n      stack.splice(i, 1);\n    }\n  }\n}\n\nfunction endsWithNewlineChange(scroll: Scroll, delta: Delta) {\n  const lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some((attr) => {\n      return scroll.query(attr, Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nfunction getLastChangeIndex(scroll: Scroll, delta: Delta) {\n  const deleteLength = delta.reduce((length, op) => {\n    return length + (op.delete || 0);\n  }, 0);\n  let changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(scroll, delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\nfunction transformRange(range: Range | null, delta: Delta) {\n  if (!range) return range;\n  const start = delta.transformPosition(range.index);\n  const end = delta.transformPosition(range.index + range.length);\n  return { index: start, length: end - start };\n}\n\nexport { History as default, getLastChangeIndex };\n",null,"import Delta from 'quill-delta';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\ninterface UploaderOptions {\n  mimetypes: string[];\n  handler: (this: { quill: Quill }, range: Range, files: File[]) => void;\n}\n\nclass Uploader extends Module<UploaderOptions> {\n  static DEFAULTS: UploaderOptions;\n\n  constructor(quill: Quill, options: Partial<UploaderOptions>) {\n    super(quill, options);\n    quill.root.addEventListener('drop', (e) => {\n      e.preventDefault();\n      let native: ReturnType<typeof document.createRange> | null = null;\n      if (document.caretRangeFromPoint) {\n        native = document.caretRangeFromPoint(e.clientX, e.clientY);\n        // @ts-expect-error\n      } else if (document.caretPositionFromPoint) {\n        // @ts-expect-error\n        const position = document.caretPositionFromPoint(e.clientX, e.clientY);\n        native = document.createRange();\n        native.setStart(position.offsetNode, position.offset);\n        native.setEnd(position.offsetNode, position.offset);\n      }\n\n      const normalized = native && quill.selection.normalizeNative(native);\n      if (normalized) {\n        const range = quill.selection.normalizedToRange(normalized);\n        if (e.dataTransfer?.files) {\n          this.upload(range, e.dataTransfer.files);\n        }\n      }\n    });\n  }\n\n  upload(range: Range, files: FileList | File[]) {\n    const uploads: File[] = [];\n    Array.from(files).forEach((file) => {\n      if (file && this.options.mimetypes?.includes(file.type)) {\n        uploads.push(file);\n      }\n    });\n    if (uploads.length > 0) {\n      // @ts-expect-error Fix me later\n      this.options.handler.call(this, range, uploads);\n    }\n  }\n}\n\nUploader.DEFAULTS = {\n  mimetypes: ['image/png', 'image/jpeg'],\n  handler(range: Range, files: File[]) {\n    const promises = files.map((file) => {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          // @ts-expect-error Fix me later\n          resolve(e.target.result);\n        };\n        reader.readAsDataURL(file);\n      });\n    });\n    Promise.all(promises).then((images) => {\n      const update = images.reduce((delta: Delta, image) => {\n        return delta.insert({ image });\n      }, new Delta().retain(range.index).delete(range.length)) as Delta;\n      this.quill.updateContents(update, Emitter.sources.USER);\n      this.quill.setSelection(\n        range.index + images.length,\n        Emitter.sources.SILENT,\n      );\n    });\n  },\n};\n\nexport default Uploader;\n",null,"import Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { deleteRange } from './keyboard.js';\n\nconst INSERT_TYPES = ['insertText', 'insertReplacementText'];\n\nclass Input extends Module {\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    quill.root.addEventListener('beforeinput', (event) => {\n      this.handleBeforeInput(event);\n    });\n\n    // Gboard with English input on Android triggers `compositionstart` sometimes even\n    // users are not going to type anything.\n    if (!/Android/i.test(navigator.userAgent)) {\n      quill.on(Quill.events.COMPOSITION_BEFORE_START, () => {\n        this.handleCompositionStart();\n      });\n    }\n  }\n\n  private deleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n  }\n\n  private replaceText(range: Range, text = '') {\n    if (range.length === 0) return false;\n\n    if (text) {\n      // Follow the native behavior that inherits the formats of the first character\n      const formats = this.quill.getFormat(range.index, 1);\n      this.deleteRange(range);\n      this.quill.updateContents(\n        new Delta().retain(range.index).insert(text, formats),\n        Quill.sources.USER,\n      );\n    } else {\n      this.deleteRange(range);\n    }\n\n    this.quill.setSelection(range.index + text.length, 0, Quill.sources.SILENT);\n    return true;\n  }\n\n  private handleBeforeInput(event: InputEvent) {\n    if (\n      this.quill.composition.isComposing ||\n      event.defaultPrevented ||\n      !INSERT_TYPES.includes(event.inputType)\n    ) {\n      return;\n    }\n\n    const staticRange = event.getTargetRanges\n      ? event.getTargetRanges()[0]\n      : null;\n    if (!staticRange || staticRange.collapsed === true) {\n      return;\n    }\n\n    const text = getPlainTextFromInputEvent(event);\n    if (text == null) {\n      return;\n    }\n    const normalized = this.quill.selection.normalizeNative(staticRange);\n    const range = normalized\n      ? this.quill.selection.normalizedToRange(normalized)\n      : null;\n    if (range && this.replaceText(range, text)) {\n      event.preventDefault();\n    }\n  }\n\n  private handleCompositionStart() {\n    const range = this.quill.getSelection();\n    if (range) {\n      this.replaceText(range);\n    }\n  }\n}\n\nfunction getPlainTextFromInputEvent(event: InputEvent) {\n  // When `inputType` is \"insertText\":\n  // - `event.data` should be string (Safari uses `event.dataTransfer`).\n  // - `event.dataTransfer` should be null.\n  // When `inputType` is \"insertReplacementText\":\n  // - `event.data` should be null.\n  // - `event.dataTransfer` should contain \"text/plain\" data.\n\n  if (typeof event.data === 'string') {\n    return event.data;\n  }\n  if (event.dataTransfer?.types.includes('text/plain')) {\n    return event.dataTransfer.getData('text/plain');\n  }\n  return null;\n}\n\nexport default Input;\n",null,"import { ParentBlot } from 'parchment';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\n\nconst isMac = /Mac/i.test(navigator.platform);\n\n// Export for testing\nexport const TTL_FOR_VALID_SELECTION_CHANGE = 100;\n\n// A loose check to determine if the shortcut can move the caret before a UI node:\n// <ANY_PARENT>[CARET]<div class=\"ql-ui\"></div>[CONTENT]</ANY_PARENT>\nconst canMoveCaretBeforeUINode = (event: KeyboardEvent) => {\n  if (\n    event.key === 'ArrowLeft' ||\n    event.key === 'ArrowRight' || // RTL scripts or moving from the end of the previous line\n    event.key === 'ArrowUp' ||\n    event.key === 'ArrowDown' ||\n    event.key === 'Home'\n  ) {\n    return true;\n  }\n\n  if (isMac && event.key === 'a' && event.ctrlKey === true) {\n    return true;\n  }\n\n  return false;\n};\n\nclass UINode extends Module {\n  isListening = false;\n  selectionChangeDeadline = 0;\n\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    this.handleArrowKeys();\n    this.handleNavigationShortcuts();\n  }\n\n  private handleArrowKeys() {\n    this.quill.keyboard.addBinding({\n      key: ['ArrowLeft', 'ArrowRight'],\n      offset: 0,\n      shiftKey: null,\n      handler(range, { line, event }) {\n        if (!(line instanceof ParentBlot) || !line.uiNode) {\n          return true;\n        }\n\n        const isRTL = getComputedStyle(line.domNode)['direction'] === 'rtl';\n        if (\n          (isRTL && event.key !== 'ArrowRight') ||\n          (!isRTL && event.key !== 'ArrowLeft')\n        ) {\n          return true;\n        }\n\n        this.quill.setSelection(\n          range.index - 1,\n          range.length + (event.shiftKey ? 1 : 0),\n          Quill.sources.USER,\n        );\n        return false;\n      },\n    });\n  }\n\n  private handleNavigationShortcuts() {\n    this.quill.root.addEventListener('keydown', (event) => {\n      if (!event.defaultPrevented && canMoveCaretBeforeUINode(event)) {\n        this.ensureListeningToSelectionChange();\n      }\n    });\n  }\n\n  /**\n   * We only listen to the `selectionchange` event when\n   * there is an intention of moving the caret to the beginning using shortcuts.\n   * This is primarily implemented to prevent infinite loops, as we are changing\n   * the selection within the handler of a `selectionchange` event.\n   */\n  private ensureListeningToSelectionChange() {\n    this.selectionChangeDeadline = Date.now() + TTL_FOR_VALID_SELECTION_CHANGE;\n\n    if (this.isListening) return;\n    this.isListening = true;\n\n    const listener = () => {\n      this.isListening = false;\n\n      if (Date.now() <= this.selectionChangeDeadline) {\n        this.handleSelectionChange();\n      }\n    };\n\n    document.addEventListener('selectionchange', listener, {\n      once: true,\n    });\n  }\n\n  private handleSelectionChange() {\n    const selection = document.getSelection();\n    if (!selection) return;\n    const range = selection.getRangeAt(0);\n    if (range.collapsed !== true || range.startOffset !== 0) return;\n\n    const line = this.quill.scroll.find(range.startContainer);\n    if (!(line instanceof ParentBlot) || !line.uiNode) return;\n\n    const newRange = document.createRange();\n    newRange.setStartAfter(line.uiNode);\n    newRange.setEndAfter(line.uiNode);\n    selection.removeAllRanges();\n    selection.addRange(newRange);\n  }\n}\n\nexport default UINode;\n",null,"import { ClassAttributor, Scope } from 'parchment';\n\nclass IndentAttributor extends ClassAttributor {\n  add(node: HTMLElement, value: string | number) {\n    let normalizedValue = 0;\n    if (value === '+1' || value === '-1') {\n      const indent = this.value(node) || 0;\n      normalizedValue = value === '+1' ? indent + 1 : indent - 1;\n    } else if (typeof value === 'number') {\n      normalizedValue = value;\n    }\n    if (normalizedValue === 0) {\n      this.remove(node);\n      return true;\n    }\n    return super.add(node, normalizedValue.toString());\n  }\n\n  canAdd(node: HTMLElement, value: string) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\n  }\n\n  value(node: HTMLElement) {\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\n  }\n}\n\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  // @ts-expect-error\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8],\n});\n\nexport default IndentClass;\n",null,"import Block from '../blots/block.js';\n\nclass Blockquote extends Block {\n  static blotName = 'blockquote';\n  static tagName = 'blockquote';\n}\n\nexport default Blockquote;\n",null,"import Block from '../blots/block.js';\n\nclass Header extends Block {\n  static blotName = 'header';\n  static tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n\n  static formats(domNode: Element) {\n    return this.tagName.indexOf(domNode.tagName) + 1;\n  }\n}\n\nexport default Header;\n",null,"import Block from '../blots/block.js';\nimport Container from '../blots/container.js';\nimport type Scroll from '../blots/scroll.js';\nimport Quill from '../core/quill.js';\n\nclass ListContainer extends Container {}\nListContainer.blotName = 'list-container';\nListContainer.tagName = 'OL';\n\nclass ListItem extends Block {\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    node.setAttribute('data-list', value);\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('data-list') || undefined;\n  }\n\n  static register() {\n    Quill.register(ListContainer);\n  }\n\n  constructor(scroll: Scroll, domNode: HTMLElement) {\n    super(scroll, domNode);\n    const ui = domNode.ownerDocument.createElement('span');\n    const listEventHandler = (e: Event) => {\n      if (!scroll.isEnabled()) return;\n      const format = this.statics.formats(domNode, scroll);\n      if (format === 'checked') {\n        this.format('list', 'unchecked');\n        e.preventDefault();\n      } else if (format === 'unchecked') {\n        this.format('list', 'checked');\n        e.preventDefault();\n      }\n    };\n    ui.addEventListener('mousedown', listEventHandler);\n    ui.addEventListener('touchstart', listEventHandler);\n    this.attachUI(ui);\n  }\n\n  format(name: string, value: string) {\n    if (name === this.statics.blotName && value) {\n      this.domNode.setAttribute('data-list', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nListItem.blotName = 'list';\nListItem.tagName = 'LI';\n\nListContainer.allowedChildren = [ListItem];\nListItem.requiredContainer = ListContainer;\n\nexport { ListContainer, ListItem as default };\n",null,"import Inline from '../blots/inline.js';\n\nclass Bold extends Inline {\n  static blotName = 'bold';\n  static tagName = ['STRONG', 'B'];\n\n  static create() {\n    return super.create();\n  }\n\n  static formats() {\n    return true;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (this.domNode.tagName !== this.statics.tagName[0]) {\n      this.replaceWith(this.statics.blotName);\n    }\n  }\n}\n\nexport default Bold;\n",null,"import Bold from './bold.js';\n\nclass Italic extends Bold {\n  static blotName = 'italic';\n  static tagName = ['EM', 'I'];\n}\n\nexport default Italic;\n",null,"import Inline from '../blots/inline.js';\n\nclass Link extends Inline {\n  static blotName = 'link';\n  static tagName = 'A';\n  static SANITIZED_URL = 'about:blank';\n  static PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel', 'sms'];\n\n  static create(value: string) {\n    const node = super.create(value) as HTMLElement;\n    node.setAttribute('href', this.sanitize(value));\n    node.setAttribute('rel', 'noopener noreferrer');\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name: string, value: unknown) {\n    if (name !== this.statics.blotName || !value) {\n      super.format(name, value);\n    } else {\n      // @ts-expect-error\n      this.domNode.setAttribute('href', this.constructor.sanitize(value));\n    }\n  }\n}\n\nfunction sanitize(url: string, protocols: string[]) {\n  const anchor = document.createElement('a');\n  anchor.href = url;\n  const protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexport { Link as default, sanitize };\n",null,"import Inline from '../blots/inline.js';\n\nclass Script extends Inline {\n  static blotName = 'script';\n  static tagName = ['SUB', 'SUP'];\n\n  static create(value: 'super' | 'sub' | (string & {})) {\n    if (value === 'super') {\n      return document.createElement('sup');\n    }\n    if (value === 'sub') {\n      return document.createElement('sub');\n    }\n    return super.create(value);\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.tagName === 'SUB') return 'sub';\n    if (domNode.tagName === 'SUP') return 'super';\n    return undefined;\n  }\n}\n\nexport default Script;\n",null,"import Bold from './bold.js';\n\nclass Strike extends Bold {\n  static blotName = 'strike';\n  static tagName = ['S', 'STRIKE'];\n}\n\nexport default Strike;\n",null,"import Inline from '../blots/inline.js';\n\nclass Underline extends Inline {\n  static blotName = 'underline';\n  static tagName = 'U';\n}\n\nexport default Underline;\n",null,"import Embed from '../blots/embed.js';\n\nclass Formula extends Embed {\n  static blotName = 'formula';\n  static className = 'ql-formula';\n  static tagName = 'SPAN';\n\n  static create(value: string) {\n    // @ts-expect-error\n    if (window.katex == null) {\n      throw new Error('Formula module requires KaTeX.');\n    }\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      // @ts-expect-error\n      window.katex.render(value, node, {\n        throwOnError: false,\n        errorColor: '#f00',\n      });\n      node.setAttribute('data-value', value);\n    }\n    return node;\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('data-value');\n  }\n\n  html() {\n    const { formula } = this.value();\n    return `<span>${formula}</span>`;\n  }\n}\n\nexport default Formula;\n",null,"import { EmbedBlot } from 'parchment';\nimport { sanitize } from './link.js';\n\nconst ATTRIBUTES = ['alt', 'height', 'width'];\n\nclass Image extends EmbedBlot {\n  static blotName = 'image';\n  static tagName = 'IMG';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      node.setAttribute('src', this.sanitize(value));\n    }\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static match(url: string) {\n    return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url);\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLImageElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n}\n\nexport default Image;\n",null,"import { BlockEmbed } from '../blots/block.js';\nimport Link from './link.js';\n\nconst ATTRIBUTES = ['height', 'width'];\n\nclass Video extends BlockEmbed {\n  static blotName = 'video';\n  static className = 'ql-video';\n  static tagName = 'IFRAME';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    node.setAttribute('frameborder', '0');\n    node.setAttribute('allowfullscreen', 'true');\n    node.setAttribute('src', this.sanitize(value));\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static sanitize(url: string) {\n    return Link.sanitize(url);\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLVideoElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  html() {\n    const { video } = this.value();\n    return `<a href=\"${video}\">${video}</a>`;\n  }\n}\n\nexport default Video;\n",null,"import Delta from 'quill-delta';\nimport { ClassAttributor, Scope } from 'parchment';\nimport type { Blot, ScrollBlot } from 'parchment';\nimport Inline from '../blots/inline.js';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport { blockDelta } from '../blots/block.js';\nimport BreakBlot from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport CodeBlock, { CodeBlockContainer } from '../formats/code.js';\nimport { traverse } from './clipboard.js';\n\nconst TokenAttributor = new ClassAttributor('code-token', 'hljs', {\n  scope: Scope.INLINE,\n});\nclass CodeToken extends Inline {\n  static formats(node: Element, scroll: ScrollBlot) {\n    while (node != null && node !== scroll.domNode) {\n      if (node.classList && node.classList.contains(CodeBlock.className)) {\n        // @ts-expect-error\n        return super.formats(node, scroll);\n      }\n      // @ts-expect-error\n      node = node.parentNode;\n    }\n    return undefined;\n  }\n\n  constructor(scroll: ScrollBlot, domNode: Node, value: unknown) {\n    // @ts-expect-error\n    super(scroll, domNode, value);\n    TokenAttributor.add(this.domNode, value);\n  }\n\n  format(format: string, value: unknown) {\n    if (format !== CodeToken.blotName) {\n      super.format(format, value);\n    } else if (value) {\n      TokenAttributor.add(this.domNode, value);\n    } else {\n      TokenAttributor.remove(this.domNode);\n      this.domNode.classList.remove(this.statics.className);\n    }\n  }\n\n  optimize(...args: unknown[]) {\n    // @ts-expect-error\n    super.optimize(...args);\n    if (!TokenAttributor.value(this.domNode)) {\n      this.unwrap();\n    }\n  }\n}\nCodeToken.blotName = 'code-token';\nCodeToken.className = 'ql-token';\n\nclass SyntaxCodeBlock extends CodeBlock {\n  static create(value: unknown) {\n    const domNode = super.create(value);\n    if (typeof value === 'string') {\n      domNode.setAttribute('data-language', value);\n    }\n    return domNode;\n  }\n\n  static formats(domNode: Node) {\n    // @ts-expect-error\n    return domNode.getAttribute('data-language') || 'plain';\n  }\n\n  static register() {} // Syntax module will register\n\n  format(name: string, value: unknown) {\n    if (name === this.statics.blotName && value) {\n      // @ts-expect-error\n      this.domNode.setAttribute('data-language', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  replaceWith(name: string, value: unknown) {\n    this.formatAt(0, this.length(), CodeToken.blotName, false);\n    return super.replaceWith(name, value);\n  }\n}\n\nclass SyntaxCodeBlockContainer extends CodeBlockContainer {\n  forceNext?: boolean;\n  cachedText?: string | null;\n\n  attach() {\n    super.attach();\n    this.forceNext = false;\n    // @ts-expect-error\n    this.scroll.emitMount(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n      this.children.forEach((child) => {\n        // @ts-expect-error\n        child.format(name, value);\n      });\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n    }\n    super.formatAt(index, length, name, value);\n  }\n\n  highlight(\n    highlight: (text: string, language: string) => Delta,\n    forced = false,\n  ) {\n    if (this.children.head == null) return;\n    const nodes = Array.from(this.domNode.childNodes).filter(\n      (node) => node !== this.uiNode,\n    );\n    const text = `${nodes.map((node) => node.textContent).join('\\n')}\\n`;\n    const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n    if (forced || this.forceNext || this.cachedText !== text) {\n      if (text.trim().length > 0 || this.cachedText == null) {\n        const oldDelta = this.children.reduce((delta, child) => {\n          // @ts-expect-error\n          return delta.concat(blockDelta(child, false));\n        }, new Delta());\n        const delta = highlight(text, language);\n        oldDelta.diff(delta).reduce((index, { retain, attributes }) => {\n          // Should be all retains\n          if (!retain) return index;\n          if (attributes) {\n            Object.keys(attributes).forEach((format) => {\n              if (\n                [SyntaxCodeBlock.blotName, CodeToken.blotName].includes(format)\n              ) {\n                // @ts-expect-error\n                this.formatAt(index, retain, format, attributes[format]);\n              }\n            });\n          }\n          // @ts-expect-error\n          return index + retain;\n        }, 0);\n      }\n      this.cachedText = text;\n      this.forceNext = false;\n    }\n  }\n\n  html(index: number, length: number) {\n    const [codeBlock] = this.children.find(index);\n    const language = codeBlock\n      ? SyntaxCodeBlock.formats(codeBlock.domNode)\n      : 'plain';\n\n    return `<pre data-language=\"${language}\">\\n${escapeText(\n      this.code(index, length),\n    )}\\n</pre>`;\n  }\n\n  optimize(context: Record<string, any>) {\n    super.optimize(context);\n    if (\n      this.parent != null &&\n      this.children.head != null &&\n      this.uiNode != null\n    ) {\n      const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n      // @ts-expect-error\n      if (language !== this.uiNode.value) {\n        // @ts-expect-error\n        this.uiNode.value = language;\n      }\n    }\n  }\n}\n// @ts-expect-error\nSyntaxCodeBlockContainer.allowedChildren = [SyntaxCodeBlock];\nSyntaxCodeBlock.requiredContainer = SyntaxCodeBlockContainer;\nSyntaxCodeBlock.allowedChildren = [CodeToken, CursorBlot, TextBlot, BreakBlot];\n\ninterface SyntaxOptions {\n  interval: number;\n  languages: { key: string; label: string }[];\n  hljs: any;\n}\n\nconst highlight = (lib: any, language: string, text: string) => {\n  if (typeof lib.versionString === 'string') {\n    const majorVersion = lib.versionString.split('.')[0];\n    if (parseInt(majorVersion, 10) >= 11) {\n      return lib.highlight(text, { language }).value;\n    }\n  }\n  return lib.highlight(language, text).value;\n};\n\nclass Syntax extends Module<SyntaxOptions> {\n  static DEFAULTS: SyntaxOptions & { hljs: any };\n\n  static register() {\n    Quill.register(CodeToken, true);\n    // @ts-expect-error\n    Quill.register(SyntaxCodeBlock, true);\n    Quill.register(SyntaxCodeBlockContainer, true);\n  }\n\n  languages: Record<string, true>;\n\n  constructor(quill: Quill, options: Partial<SyntaxOptions>) {\n    super(quill, options);\n    if (this.options.hljs == null) {\n      throw new Error(\n        'Syntax module requires highlight.js. Please include the library on the page before Quill.',\n      );\n    }\n    // @ts-expect-error Fix me later\n    this.languages = this.options.languages.reduce(\n      (memo: Record<string, unknown>, { key }) => {\n        memo[key] = true;\n        return memo;\n      },\n      {},\n    );\n    this.highlightBlot = this.highlightBlot.bind(this);\n    this.initListener();\n    this.initTimer();\n  }\n\n  initListener() {\n    this.quill.on(Quill.events.SCROLL_BLOT_MOUNT, (blot: Blot) => {\n      if (!(blot instanceof SyntaxCodeBlockContainer)) return;\n      const select = this.quill.root.ownerDocument.createElement('select');\n      // @ts-expect-error Fix me later\n      this.options.languages.forEach(({ key, label }) => {\n        const option = select.ownerDocument.createElement('option');\n        option.textContent = label;\n        option.setAttribute('value', key);\n        select.appendChild(option);\n      });\n      select.addEventListener('change', () => {\n        blot.format(SyntaxCodeBlock.blotName, select.value);\n        this.quill.root.focus(); // Prevent scrolling\n        this.highlight(blot, true);\n      });\n      if (blot.uiNode == null) {\n        blot.attachUI(select);\n        if (blot.children.head) {\n          select.value = SyntaxCodeBlock.formats(blot.children.head.domNode);\n        }\n      }\n    });\n  }\n\n  initTimer() {\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        this.highlight();\n        timer = null;\n      }, this.options.interval);\n    });\n  }\n\n  highlight(blot: SyntaxCodeBlockContainer | null = null, force = false) {\n    if (this.quill.selection.composing) return;\n    this.quill.update(Quill.sources.USER);\n    const range = this.quill.getSelection();\n    const blots =\n      blot == null\n        ? this.quill.scroll.descendants(SyntaxCodeBlockContainer)\n        : [blot];\n    blots.forEach((container) => {\n      container.highlight(this.highlightBlot, force);\n    });\n    this.quill.update(Quill.sources.SILENT);\n    if (range != null) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    }\n  }\n\n  highlightBlot(text: string, language = 'plain') {\n    language = this.languages[language] ? language : 'plain';\n    if (language === 'plain') {\n      return escapeText(text)\n        .split('\\n')\n        .reduce((delta, line, i) => {\n          if (i !== 0) {\n            delta.insert('\\n', { [CodeBlock.blotName]: language });\n          }\n          return delta.insert(line);\n        }, new Delta());\n    }\n    const container = this.quill.root.ownerDocument.createElement('div');\n    container.classList.add(CodeBlock.className);\n    container.innerHTML = highlight(this.options.hljs, language, text);\n    return traverse(\n      this.quill.scroll,\n      container,\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          const value = TokenAttributor.value(node);\n          if (value) {\n            return delta.compose(\n              new Delta().retain(delta.length(), {\n                [CodeToken.blotName]: value,\n              }),\n            );\n          }\n          return delta;\n        },\n      ],\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          return node.data.split('\\n').reduce((memo, nodeText, i) => {\n            if (i !== 0) memo.insert('\\n', { [CodeBlock.blotName]: language });\n            return memo.insert(nodeText);\n          }, delta);\n        },\n      ],\n      new WeakMap(),\n    );\n  }\n}\nSyntax.DEFAULTS = {\n  hljs: (() => {\n    return window.hljs;\n  })(),\n  interval: 1000,\n  languages: [\n    { key: 'plain', label: 'Plain' },\n    { key: 'bash', label: 'Bash' },\n    { key: 'cpp', label: 'C++' },\n    { key: 'cs', label: 'C#' },\n    { key: 'css', label: 'CSS' },\n    { key: 'diff', label: 'Diff' },\n    { key: 'xml', label: 'HTML/XML' },\n    { key: 'java', label: 'Java' },\n    { key: 'javascript', label: 'JavaScript' },\n    { key: 'markdown', label: 'Markdown' },\n    { key: 'php', label: 'PHP' },\n    { key: 'python', label: 'Python' },\n    { key: 'ruby', label: 'Ruby' },\n    { key: 'sql', label: 'SQL' },\n  ],\n};\n\nexport { SyntaxCodeBlock as CodeBlock, CodeToken, Syntax as default };\n",null,"import Delta from 'quill-delta';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport {\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  tableId,\n} from '../formats/table.js';\n\nclass Table extends Module {\n  static register() {\n    Quill.register(TableCell);\n    Quill.register(TableRow);\n    Quill.register(TableBody);\n    Quill.register(TableContainer);\n  }\n\n  constructor(...args: ConstructorParameters<typeof Module>) {\n    super(...args);\n    this.listenBalanceCells();\n  }\n\n  balanceTables() {\n    this.quill.scroll.descendants(TableContainer).forEach((table) => {\n      table.balanceCells();\n    });\n  }\n\n  deleteColumn() {\n    const [table, , cell] = this.getTable();\n    if (cell == null) return;\n    // @ts-expect-error\n    table.deleteColumn(cell.cellOffset());\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteRow() {\n    const [, row] = this.getTable();\n    if (row == null) return;\n    row.remove();\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteTable() {\n    const [table] = this.getTable();\n    if (table == null) return;\n    // @ts-expect-error\n    const offset = table.offset();\n    // @ts-expect-error\n    table.remove();\n    this.quill.update(Quill.sources.USER);\n    this.quill.setSelection(offset, Quill.sources.SILENT);\n  }\n\n  getTable(\n    range = this.quill.getSelection(),\n  ): [null, null, null, -1] | [Table, TableRow, TableCell, number] {\n    if (range == null) return [null, null, null, -1];\n    const [cell, offset] = this.quill.getLine(range.index);\n    if (cell == null || cell.statics.blotName !== TableCell.blotName) {\n      return [null, null, null, -1];\n    }\n    const row = cell.parent;\n    const table = row.parent.parent;\n    // @ts-expect-error\n    return [table, row, cell, offset];\n  }\n\n  insertColumn(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const column = cell.cellOffset();\n    table.insertColumn(column + offset);\n    this.quill.update(Quill.sources.USER);\n    let shift = row.rowOffset();\n    if (offset === 0) {\n      shift += 1;\n    }\n    this.quill.setSelection(\n      range.index + shift,\n      range.length,\n      Quill.sources.SILENT,\n    );\n  }\n\n  insertColumnLeft() {\n    this.insertColumn(0);\n  }\n\n  insertColumnRight() {\n    this.insertColumn(1);\n  }\n\n  insertRow(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const index = row.rowOffset();\n    table.insertRow(index + offset);\n    this.quill.update(Quill.sources.USER);\n    if (offset > 0) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    } else {\n      this.quill.setSelection(\n        range.index + row.children.length,\n        range.length,\n        Quill.sources.SILENT,\n      );\n    }\n  }\n\n  insertRowAbove() {\n    this.insertRow(0);\n  }\n\n  insertRowBelow() {\n    this.insertRow(1);\n  }\n\n  insertTable(rows: number, columns: number) {\n    const range = this.quill.getSelection();\n    if (range == null) return;\n    const delta = new Array(rows).fill(0).reduce((memo) => {\n      const text = new Array(columns).fill('\\n').join('');\n      return memo.insert(text, { table: tableId() });\n    }, new Delta().retain(range.index));\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index, Quill.sources.SILENT);\n    this.balanceTables();\n  }\n\n  listenBalanceCells() {\n    this.quill.on(\n      Quill.events.SCROLL_OPTIMIZE,\n      (mutations: MutationRecord[]) => {\n        mutations.some((mutation) => {\n          if (\n            ['TD', 'TR', 'TBODY', 'TABLE'].includes(\n              (mutation.target as HTMLElement).tagName,\n            )\n          ) {\n            this.quill.once(Quill.events.TEXT_CHANGE, (delta, old, source) => {\n              if (source !== Quill.sources.USER) return;\n              this.balanceTables();\n            });\n            return true;\n          }\n          return false;\n        });\n      },\n    );\n  }\n}\n\nexport default Table;\n",null,"import type { LinkedList } from 'parchment';\nimport Block from '../blots/block.js';\nimport Container from '../blots/container.js';\n\nclass TableCell extends Block {\n  static blotName = 'table';\n  static tagName = 'TD';\n\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    if (value) {\n      node.setAttribute('data-row', value);\n    } else {\n      node.setAttribute('data-row', tableId());\n    }\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.hasAttribute('data-row')) {\n      return domNode.getAttribute('data-row');\n    }\n    return undefined;\n  }\n\n  next: this | null;\n\n  cellOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  format(name: string, value: string) {\n    if (name === TableCell.blotName && value) {\n      this.domNode.setAttribute('data-row', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  row(): TableRow {\n    return this.parent as TableRow;\n  }\n\n  rowOffset() {\n    if (this.row()) {\n      return this.row().rowOffset();\n    }\n    return -1;\n  }\n\n  table() {\n    return this.row() && this.row().table();\n  }\n}\n\nclass TableRow extends Container {\n  static blotName = 'table-row';\n  static tagName = 'TR';\n\n  children: LinkedList<TableCell>;\n  next: this | null;\n\n  checkMerge() {\n    // @ts-expect-error\n    if (super.checkMerge() && this.next.children.head != null) {\n      // @ts-expect-error\n      const thisHead = this.children.head.formats();\n      // @ts-expect-error\n      const thisTail = this.children.tail.formats();\n      // @ts-expect-error\n      const nextHead = this.next.children.head.formats();\n      // @ts-expect-error\n      const nextTail = this.next.children.tail.formats();\n      return (\n        thisHead.table === thisTail.table &&\n        thisHead.table === nextHead.table &&\n        thisHead.table === nextTail.table\n      );\n    }\n    return false;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.children.forEach((child) => {\n      if (child.next == null) return;\n      const childFormats = child.formats();\n      const nextFormats = child.next.formats();\n      if (childFormats.table !== nextFormats.table) {\n        const next = this.splitAfter(child);\n        if (next) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          next.optimize();\n        }\n        // We might be able to merge with prev now\n        if (this.prev) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          this.prev.optimize();\n        }\n      }\n    });\n  }\n\n  rowOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  table() {\n    return this.parent && this.parent.parent;\n  }\n}\n\nclass TableBody extends Container {\n  static blotName = 'table-body';\n  static tagName = 'TBODY';\n\n  children: LinkedList<TableRow>;\n}\n\nclass TableContainer extends Container {\n  static blotName = 'table-container';\n  static tagName = 'TABLE';\n\n  children: LinkedList<TableBody>;\n\n  balanceCells() {\n    const rows = this.descendants(TableRow);\n    const maxColumns = rows.reduce((max, row) => {\n      return Math.max(row.children.length, max);\n    }, 0);\n    rows.forEach((row) => {\n      new Array(maxColumns - row.children.length).fill(0).forEach(() => {\n        let value;\n        if (row.children.head != null) {\n          value = TableCell.formats(row.children.head.domNode);\n        }\n        const blot = this.scroll.create(TableCell.blotName, value);\n        row.appendChild(blot);\n        // @ts-expect-error TODO: parameters of optimize() should be a optional\n        blot.optimize(); // Add break blot\n      });\n    });\n  }\n\n  cells(column: number) {\n    return this.rows().map((row) => row.children.at(column));\n  }\n\n  deleteColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const cell = row.children.at(index);\n      if (cell != null) {\n        cell.remove();\n      }\n    });\n  }\n\n  insertColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const ref = row.children.at(index);\n      // @ts-expect-error\n      const value = TableCell.formats(row.children.head.domNode);\n      const cell = this.scroll.create(TableCell.blotName, value);\n      row.insertBefore(cell, ref);\n    });\n  }\n\n  insertRow(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    const id = tableId();\n    const row = this.scroll.create(TableRow.blotName) as TableRow;\n    body.children.head.children.forEach(() => {\n      const cell = this.scroll.create(TableCell.blotName, id);\n      row.appendChild(cell);\n    });\n    const ref = body.children.at(index);\n    body.insertBefore(row, ref);\n  }\n\n  rows() {\n    const body = this.children.head;\n    if (body == null) return [];\n    return body.children.map((row) => row);\n  }\n}\n\nTableContainer.allowedChildren = [TableBody];\nTableBody.requiredContainer = TableContainer;\n\nTableBody.allowedChildren = [TableRow];\nTableRow.requiredContainer = TableBody;\n\nTableRow.allowedChildren = [TableCell];\nTableCell.requiredContainer = TableRow;\n\nfunction tableId() {\n  const id = Math.random().toString(36).slice(2, 6);\n  return `row-${id}`;\n}\n\nexport { TableCell, TableRow, TableBody, TableContainer, tableId };\n",null,"import Delta from 'quill-delta';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:toolbar');\n\ntype Handler = (value: any) => void;\n\nexport type ToolbarConfig = Array<\n  string[] | Array<string | Record<string, unknown>>\n>;\nexport interface ToolbarProps {\n  container?: HTMLElement | ToolbarConfig | null;\n  handlers?: Record<string, Handler>;\n  option?: number;\n  module?: boolean;\n  theme?: boolean;\n}\n\nclass Toolbar extends Module<ToolbarProps> {\n  static DEFAULTS: ToolbarProps;\n\n  container?: HTMLElement | null;\n  controls: [string, HTMLElement][];\n  handlers: Record<string, Handler>;\n\n  constructor(quill: Quill, options: Partial<ToolbarProps>) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      const container = document.createElement('div');\n      container.setAttribute('role', 'toolbar');\n      addControls(container, this.options.container);\n      quill.container?.parentNode?.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      this.container = document.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      debug.error('Container required for toolbar', this.options);\n      return;\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    if (this.options.handlers) {\n      Object.keys(this.options.handlers).forEach((format) => {\n        const handler = this.options.handlers?.[format];\n        if (handler) {\n          this.addHandler(format, handler);\n        }\n      });\n    }\n    Array.from(this.container.querySelectorAll('button, select')).forEach(\n      (input) => {\n        // @ts-expect-error\n        this.attach(input);\n      },\n    );\n    this.quill.on(Quill.events.EDITOR_CHANGE, () => {\n      const [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format: string, handler: Handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input: HTMLElement) {\n    let format = Array.from(input.classList).find((className) => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (\n      this.handlers[format] == null &&\n      this.quill.scroll.query(format) == null\n    ) {\n      debug.warn('ignoring attaching to nonexistent format', format, input);\n      return;\n    }\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, (e) => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        // @ts-expect-error\n        if (input.selectedIndex < 0) return;\n        // @ts-expect-error\n        const selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          // @ts-expect-error\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      const [range] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (\n        // @ts-expect-error\n        this.quill.scroll.query(format).prototype instanceof EmbedBlot\n      ) {\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\n        if (!value) return;\n        this.quill.updateContents(\n          new Delta()\n            // @ts-expect-error Fix me later\n            .retain(range.index)\n            // @ts-expect-error Fix me later\n            .delete(range.length)\n            .insert({ [format]: value }),\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    this.controls.push([format, input]);\n  }\n\n  update(range: Range | null) {\n    const formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach((pair) => {\n      const [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option: HTMLOptionElement | null = null;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          // @ts-expect-error TODO fix me later\n          input.value = ''; // TODO make configurable?\n          // @ts-expect-error TODO fix me later\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else if (range == null) {\n        input.classList.remove('ql-active');\n        input.setAttribute('aria-pressed', 'false');\n      } else if (input.hasAttribute('value')) {\n        // both being null should match (default values)\n        // '1' should match with 1 (headers)\n        const value = formats[format] as boolean | number | string | object;\n        const isActive =\n          value === input.getAttribute('value') ||\n          (value != null && value.toString() === input.getAttribute('value')) ||\n          (value == null && !input.getAttribute('value'));\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      } else {\n        const isActive = formats[format] != null;\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\nfunction addButton(container: HTMLElement, format: string, value?: string) {\n  const input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(`ql-${format}`);\n  input.setAttribute('aria-pressed', 'false');\n  if (value != null) {\n    input.value = value;\n    input.setAttribute('aria-label', `${format}: ${value}`);\n  } else {\n    input.setAttribute('aria-label', format);\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(\n  container: HTMLElement,\n  groups:\n    | (string | Record<string, unknown>)[][]\n    | (string | Record<string, unknown>)[],\n) {\n  if (!Array.isArray(groups[0])) {\n    // @ts-expect-error\n    groups = [groups];\n  }\n  groups.forEach((controls: any) => {\n    const group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach((control: any) => {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        const format = Object.keys(control)[0];\n        const value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(\n  container: HTMLElement,\n  format: string,\n  values: Array<string | boolean>,\n) {\n  const input = document.createElement('select');\n  input.classList.add(`ql-${format}`);\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', String(value));\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean() {\n      const range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        const formats = this.quill.getFormat();\n        Object.keys(formats).forEach((name) => {\n          // Clean functionality in existing apps only clean inline formats\n          if (this.quill.scroll.query(name, Scope.INLINE) != null) {\n            this.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range, Quill.sources.USER);\n      }\n    },\n    direction(value) {\n      const { align } = this.quill.getFormat();\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent(value) {\n      const range = this.quill.getSelection();\n      const formats = this.quill.getFormat(range);\n      const indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list(value) {\n      const range = this.quill.getSelection();\n      const formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    },\n  },\n};\n\nexport { Toolbar as default, addControls };\n",null,"import alignLeftIcon from '../assets/icons/align-left.svg';\nimport alignCenterIcon from '../assets/icons/align-center.svg';\nimport alignRightIcon from '../assets/icons/align-right.svg';\nimport alignJustifyIcon from '../assets/icons/align-justify.svg';\nimport backgroundIcon from '../assets/icons/background.svg';\nimport blockquoteIcon from '../assets/icons/blockquote.svg';\nimport boldIcon from '../assets/icons/bold.svg';\nimport cleanIcon from '../assets/icons/clean.svg';\nimport codeIcon from '../assets/icons/code.svg';\nimport colorIcon from '../assets/icons/color.svg';\nimport directionLeftToRightIcon from '../assets/icons/direction-ltr.svg';\nimport directionRightToLeftIcon from '../assets/icons/direction-rtl.svg';\nimport formulaIcon from '../assets/icons/formula.svg';\nimport headerIcon from '../assets/icons/header.svg';\nimport header2Icon from '../assets/icons/header-2.svg';\nimport header3Icon from '../assets/icons/header-3.svg';\nimport header4Icon from '../assets/icons/header-4.svg';\nimport header5Icon from '../assets/icons/header-5.svg';\nimport header6Icon from '../assets/icons/header-6.svg';\nimport italicIcon from '../assets/icons/italic.svg';\nimport imageIcon from '../assets/icons/image.svg';\nimport indentIcon from '../assets/icons/indent.svg';\nimport outdentIcon from '../assets/icons/outdent.svg';\nimport linkIcon from '../assets/icons/link.svg';\nimport listBulletIcon from '../assets/icons/list-bullet.svg';\nimport listCheckIcon from '../assets/icons/list-check.svg';\nimport listOrderedIcon from '../assets/icons/list-ordered.svg';\nimport subscriptIcon from '../assets/icons/subscript.svg';\nimport superscriptIcon from '../assets/icons/superscript.svg';\nimport strikeIcon from '../assets/icons/strike.svg';\nimport tableIcon from '../assets/icons/table.svg';\nimport underlineIcon from '../assets/icons/underline.svg';\nimport videoIcon from '../assets/icons/video.svg';\n\nexport default {\n  align: {\n    '': alignLeftIcon,\n    center: alignCenterIcon,\n    right: alignRightIcon,\n    justify: alignJustifyIcon,\n  },\n  background: backgroundIcon,\n  blockquote: blockquoteIcon,\n  bold: boldIcon,\n  clean: cleanIcon,\n  code: codeIcon,\n  'code-block': codeIcon,\n  color: colorIcon,\n  direction: {\n    '': directionLeftToRightIcon,\n    rtl: directionRightToLeftIcon,\n  },\n  formula: formulaIcon,\n  header: {\n    '1': headerIcon,\n    '2': header2Icon,\n    '3': header3Icon,\n    '4': header4Icon,\n    '5': header5Icon,\n    '6': header6Icon,\n  },\n  italic: italicIcon,\n  image: imageIcon,\n  indent: {\n    '+1': indentIcon,\n    '-1': outdentIcon,\n  },\n  link: linkIcon,\n  list: {\n    bullet: listBulletIcon,\n    check: listCheckIcon,\n    ordered: listOrderedIcon,\n  },\n  script: {\n    sub: subscriptIcon,\n    super: superscriptIcon,\n  },\n  strike: strikeIcon,\n  table: tableIcon,\n  underline: underlineIcon,\n  video: videoIcon,\n};\n",null,"import DropdownIcon from '../assets/icons/dropdown.svg';\n\nlet optionsCounter = 0;\n\nfunction toggleAriaAttribute(element: HTMLElement, attribute: string) {\n  element.setAttribute(\n    attribute,\n    `${!(element.getAttribute(attribute) === 'true')}`,\n  );\n}\n\nclass Picker {\n  select: HTMLSelectElement;\n  container: HTMLElement;\n  label: HTMLElement;\n\n  constructor(select: HTMLSelectElement) {\n    this.select = select;\n    this.container = document.createElement('span');\n    this.buildPicker();\n    this.select.style.display = 'none';\n    // @ts-expect-error Fix me later\n    this.select.parentNode.insertBefore(this.container, this.select);\n\n    this.label.addEventListener('mousedown', () => {\n      this.togglePicker();\n    });\n    this.label.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.togglePicker();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n    this.select.addEventListener('change', this.update.bind(this));\n  }\n\n  togglePicker() {\n    this.container.classList.toggle('ql-expanded');\n    // Toggle aria-expanded and aria-hidden to make the picker accessible\n    toggleAriaAttribute(this.label, 'aria-expanded');\n    // @ts-expect-error\n    toggleAriaAttribute(this.options, 'aria-hidden');\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = document.createElement('span');\n    // @ts-expect-error\n    item.tabIndex = '0';\n    item.setAttribute('role', 'button');\n    item.classList.add('ql-picker-item');\n    const value = option.getAttribute('value');\n    if (value) {\n      item.setAttribute('data-value', value);\n    }\n    if (option.textContent) {\n      item.setAttribute('data-label', option.textContent);\n    }\n    item.addEventListener('click', () => {\n      this.selectItem(item, true);\n    });\n    item.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.selectItem(item, true);\n          event.preventDefault();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n\n    return item;\n  }\n\n  buildLabel() {\n    const label = document.createElement('span');\n    label.classList.add('ql-picker-label');\n    label.innerHTML = DropdownIcon;\n    // @ts-expect-error\n    label.tabIndex = '0';\n    label.setAttribute('role', 'button');\n    label.setAttribute('aria-expanded', 'false');\n    this.container.appendChild(label);\n    return label;\n  }\n\n  buildOptions() {\n    const options = document.createElement('span');\n    options.classList.add('ql-picker-options');\n\n    // Don't want screen readers to read this until options are visible\n    options.setAttribute('aria-hidden', 'true');\n    // @ts-expect-error\n    options.tabIndex = '-1';\n\n    // Need a unique id for aria-controls\n    options.id = `ql-picker-options-${optionsCounter}`;\n    optionsCounter += 1;\n    this.label.setAttribute('aria-controls', options.id);\n\n    // @ts-expect-error\n    this.options = options;\n\n    Array.from(this.select.options).forEach((option) => {\n      const item = this.buildItem(option);\n      options.appendChild(item);\n      if (option.selected === true) {\n        this.selectItem(item);\n      }\n    });\n    this.container.appendChild(options);\n  }\n\n  buildPicker() {\n    Array.from(this.select.attributes).forEach((item) => {\n      this.container.setAttribute(item.name, item.value);\n    });\n    this.container.classList.add('ql-picker');\n    this.label = this.buildLabel();\n    this.buildOptions();\n  }\n\n  escape() {\n    // Close menu and return focus to trigger label\n    this.close();\n    // Need setTimeout for accessibility to ensure that the browser executes\n    // focus on the next process thread and after any DOM content changes\n    setTimeout(() => this.label.focus(), 1);\n  }\n\n  close() {\n    this.container.classList.remove('ql-expanded');\n    this.label.setAttribute('aria-expanded', 'false');\n    // @ts-expect-error\n    this.options.setAttribute('aria-hidden', 'true');\n  }\n\n  selectItem(item: HTMLElement | null, trigger = false) {\n    const selected = this.container.querySelector('.ql-selected');\n    if (item === selected) return;\n    if (selected != null) {\n      selected.classList.remove('ql-selected');\n    }\n    if (item == null) return;\n    item.classList.add('ql-selected');\n    // @ts-expect-error Fix me later\n    this.select.selectedIndex = Array.from(item.parentNode.children).indexOf(\n      item,\n    );\n    if (item.hasAttribute('data-value')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-value', item.getAttribute('data-value'));\n    } else {\n      this.label.removeAttribute('data-value');\n    }\n    if (item.hasAttribute('data-label')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-label', item.getAttribute('data-label'));\n    } else {\n      this.label.removeAttribute('data-label');\n    }\n    if (trigger) {\n      this.select.dispatchEvent(new Event('change'));\n      this.close();\n    }\n  }\n\n  update() {\n    let option;\n    if (this.select.selectedIndex > -1) {\n      const item =\n        // @ts-expect-error Fix me later\n        this.container.querySelector('.ql-picker-options').children[\n          this.select.selectedIndex\n        ];\n      option = this.select.options[this.select.selectedIndex];\n      // @ts-expect-error\n      this.selectItem(item);\n    } else {\n      this.selectItem(null);\n    }\n    const isActive =\n      option != null &&\n      option !== this.select.querySelector('option[selected]');\n    this.label.classList.toggle('ql-active', isActive);\n  }\n}\n\nexport default Picker;\n",null,"import Picker from './picker.js';\n\nclass ColorPicker extends Picker {\n  constructor(select: HTMLSelectElement, label: string) {\n    super(select);\n    this.label.innerHTML = label;\n    this.container.classList.add('ql-color-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item'))\n      .slice(0, 7)\n      .forEach((item) => {\n        item.classList.add('ql-primary');\n      });\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = super.buildItem(option);\n    item.style.backgroundColor = option.getAttribute('value') || '';\n    return item;\n  }\n\n  selectItem(item: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(item, trigger);\n    const colorLabel = this.label.querySelector<HTMLElement>('.ql-color-label');\n    const value = item ? item.getAttribute('data-value') || '' : '';\n    if (colorLabel) {\n      if (colorLabel.tagName === 'line') {\n        colorLabel.style.stroke = value;\n      } else {\n        colorLabel.style.fill = value;\n      }\n    }\n  }\n}\n\nexport default ColorPicker;\n",null,"import Picker from './picker.js';\n\nclass IconPicker extends Picker {\n  defaultItem: HTMLElement | null;\n\n  constructor(select: HTMLSelectElement, icons: Record<string, string>) {\n    super(select);\n    this.container.classList.add('ql-icon-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item')).forEach(\n      (item) => {\n        item.innerHTML = icons[item.getAttribute('data-value') || ''];\n      },\n    );\n    this.defaultItem = this.container.querySelector('.ql-selected');\n    this.selectItem(this.defaultItem);\n  }\n\n  selectItem(target: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(target, trigger);\n    const item = target || this.defaultItem;\n    if (item != null) {\n      if (this.label.innerHTML === item.innerHTML) return;\n      this.label.innerHTML = item.innerHTML;\n    }\n  }\n}\n\nexport default IconPicker;\n",null,"import type Quill from '../core.js';\nimport type { Bounds } from '../core/selection.js';\n\nconst isScrollable = (el: Element) => {\n  const { overflowY } = getComputedStyle(el, null);\n  return overflowY !== 'visible' && overflowY !== 'clip';\n};\n\nclass Tooltip {\n  quill: Quill;\n  boundsContainer: HTMLElement;\n  root: HTMLDivElement;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    this.quill = quill;\n    this.boundsContainer = boundsContainer || document.body;\n    this.root = quill.addContainer('ql-tooltip');\n    // @ts-expect-error\n    this.root.innerHTML = this.constructor.TEMPLATE;\n    if (isScrollable(this.quill.root)) {\n      this.quill.root.addEventListener('scroll', () => {\n        this.root.style.marginTop = `${-1 * this.quill.root.scrollTop}px`;\n      });\n    }\n    this.hide();\n  }\n\n  hide() {\n    this.root.classList.add('ql-hidden');\n  }\n\n  position(reference: Bounds) {\n    const left =\n      reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n    // root.scrollTop should be 0 if scrollContainer !== root\n    const top = reference.bottom + this.quill.root.scrollTop;\n    this.root.style.left = `${left}px`;\n    this.root.style.top = `${top}px`;\n    this.root.classList.remove('ql-flip');\n    const containerBounds = this.boundsContainer.getBoundingClientRect();\n    const rootBounds = this.root.getBoundingClientRect();\n    let shift = 0;\n    if (rootBounds.right > containerBounds.right) {\n      shift = containerBounds.right - rootBounds.right;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.left < containerBounds.left) {\n      shift = containerBounds.left - rootBounds.left;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.bottom > containerBounds.bottom) {\n      const height = rootBounds.bottom - rootBounds.top;\n      const verticalShift = reference.bottom - reference.top + height;\n      this.root.style.top = `${top - verticalShift}px`;\n      this.root.classList.add('ql-flip');\n    }\n    return shift;\n  }\n\n  show() {\n    this.root.classList.remove('ql-editing');\n    this.root.classList.remove('ql-hidden');\n  }\n}\n\nexport default Tooltip;\n",null,"import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport { Range } from '../core/selection.js';\nimport type { Bounds } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport type Quill from '../core.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  ['bold', 'italic', 'link'],\n  [{ header: 1 }, { header: 2 }, 'blockquote'],\n];\n\nclass BubbleTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<span class=\"ql-tooltip-arrow\"></span>',\n    '<div class=\"ql-tooltip-editor\">',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-close\"></a>',\n    '</div>',\n  ].join('');\n\n  constructor(quill: Quill, bounds?: HTMLElement) {\n    super(quill, bounds);\n    this.quill.on(\n      Emitter.events.EDITOR_CHANGE,\n      (type, range, oldRange, source) => {\n        if (type !== Emitter.events.SELECTION_CHANGE) return;\n        if (\n          range != null &&\n          range.length > 0 &&\n          source === Emitter.sources.USER\n        ) {\n          this.show();\n          // Lock our width so we will expand beyond our offsetParent boundaries\n          this.root.style.left = '0px';\n          this.root.style.width = '';\n          this.root.style.width = `${this.root.offsetWidth}px`;\n          const lines = this.quill.getLines(range.index, range.length);\n          if (lines.length === 1) {\n            const bounds = this.quill.getBounds(range);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n          } else {\n            const lastLine = lines[lines.length - 1];\n            const index = this.quill.getIndex(lastLine);\n            const length = Math.min(\n              lastLine.length() - 1,\n              range.index + range.length - index,\n            );\n            const indexBounds = this.quill.getBounds(new Range(index, length));\n            if (indexBounds != null) {\n              this.position(indexBounds);\n            }\n          }\n        } else if (\n          document.activeElement !== this.textbox &&\n          this.quill.hasFocus()\n        ) {\n          this.hide();\n        }\n      },\n    );\n  }\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root.querySelector('.ql-close').addEventListener('click', () => {\n      this.root.classList.remove('ql-editing');\n    });\n    this.quill.on(Emitter.events.SCROLL_OPTIMIZE, () => {\n      // Let selection be restored by toolbar handlers before repositioning\n      setTimeout(() => {\n        if (this.root.classList.contains('ql-hidden')) return;\n        const range = this.quill.getSelection();\n        if (range != null) {\n          const bounds = this.quill.getBounds(range);\n          if (bounds != null) {\n            this.position(bounds);\n          }\n        }\n      }, 1);\n    });\n  }\n\n  cancel() {\n    this.show();\n  }\n\n  position(reference: Bounds) {\n    const shift = super.position(reference);\n    const arrow = this.root.querySelector('.ql-tooltip-arrow');\n    // @ts-expect-error\n    arrow.style.marginLeft = '';\n    if (shift !== 0) {\n      // @ts-expect-error\n      arrow.style.marginLeft = `${-1 * shift - arrow.offsetWidth / 2}px`;\n    }\n    return shift;\n  }\n}\n\nclass BubbleTheme extends BaseTheme {\n  tooltip: BubbleTooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-bubble');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    // @ts-expect-error\n    this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\n    if (toolbar.container != null) {\n      this.tooltip.root.appendChild<HTMLElement>(toolbar.container);\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n    }\n  }\n}\nBubbleTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (!value) {\n            this.quill.format('link', false);\n          } else {\n            this.quill.theme.tooltip.edit();\n          }\n        },\n      },\n    },\n  },\n});\n\nexport { BubbleTooltip, BubbleTheme as default };\n",null,"import { merge } from 'lodash-es';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Theme from '../core/theme.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport ColorPicker from '../ui/color-picker.js';\nimport IconPicker from '../ui/icon-picker.js';\nimport Picker from '../ui/picker.js';\nimport Tooltip from '../ui/tooltip.js';\nimport type { Range } from '../core/selection.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport type Selection from '../core/selection.js';\n\nconst ALIGNS = [false, 'center', 'right', 'justify'];\n\nconst COLORS = [\n  '#000000',\n  '#e60000',\n  '#ff9900',\n  '#ffff00',\n  '#008a00',\n  '#0066cc',\n  '#9933ff',\n  '#ffffff',\n  '#facccc',\n  '#ffebcc',\n  '#ffffcc',\n  '#cce8cc',\n  '#cce0f5',\n  '#ebd6ff',\n  '#bbbbbb',\n  '#f06666',\n  '#ffc266',\n  '#ffff66',\n  '#66b966',\n  '#66a3e0',\n  '#c285ff',\n  '#888888',\n  '#a10000',\n  '#b26b00',\n  '#b2b200',\n  '#006100',\n  '#0047b2',\n  '#6b24b2',\n  '#444444',\n  '#5c0000',\n  '#663d00',\n  '#666600',\n  '#003700',\n  '#002966',\n  '#3d1466',\n];\n\nconst FONTS = [false, 'serif', 'monospace'];\n\nconst HEADERS = ['1', '2', '3', false];\n\nconst SIZES = ['small', false, 'large', 'huge'];\n\nclass BaseTheme extends Theme {\n  pickers: Picker[];\n  tooltip?: Tooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    super(quill, options);\n    const listener = (e: MouseEvent) => {\n      if (!document.body.contains(quill.root)) {\n        document.body.removeEventListener('click', listener);\n        return;\n      }\n      if (\n        this.tooltip != null &&\n        // @ts-expect-error\n        !this.tooltip.root.contains(e.target) &&\n        // @ts-expect-error\n        document.activeElement !== this.tooltip.textbox &&\n        !this.quill.hasFocus()\n      ) {\n        this.tooltip.hide();\n      }\n      if (this.pickers != null) {\n        this.pickers.forEach((picker) => {\n          // @ts-expect-error\n          if (!picker.container.contains(e.target)) {\n            picker.close();\n          }\n        });\n      }\n    };\n    quill.emitter.listenDOM('click', document.body, listener);\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: 'selection'): Selection;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    const module = super.addModule(name);\n    if (name === 'toolbar') {\n      // @ts-expect-error\n      this.extendToolbar(module);\n    }\n    return module;\n  }\n\n  buildButtons(\n    buttons: NodeListOf<HTMLElement>,\n    icons: Record<string, Record<string, string> | string>,\n  ) {\n    Array.from(buttons).forEach((button) => {\n      const className = button.getAttribute('class') || '';\n      className.split(/\\s+/).forEach((name) => {\n        if (!name.startsWith('ql-')) return;\n        name = name.slice('ql-'.length);\n        if (icons[name] == null) return;\n        if (name === 'direction') {\n          // @ts-expect-error\n          button.innerHTML = icons[name][''] + icons[name].rtl;\n        } else if (typeof icons[name] === 'string') {\n          // @ts-expect-error\n          button.innerHTML = icons[name];\n        } else {\n          // @ts-expect-error\n          const value = button.value || '';\n          // @ts-expect-error\n          if (value != null && icons[name][value]) {\n            // @ts-expect-error\n            button.innerHTML = icons[name][value];\n          }\n        }\n      });\n    });\n  }\n\n  buildPickers(\n    selects: NodeListOf<HTMLSelectElement>,\n    icons: Record<string, string | Record<string, string>>,\n  ) {\n    this.pickers = Array.from(selects).map((select) => {\n      if (select.classList.contains('ql-align')) {\n        if (select.querySelector('option') == null) {\n          fillSelect(select, ALIGNS);\n        }\n        if (typeof icons.align === 'object') {\n          return new IconPicker(select, icons.align);\n        }\n      }\n      if (\n        select.classList.contains('ql-background') ||\n        select.classList.contains('ql-color')\n      ) {\n        const format = select.classList.contains('ql-background')\n          ? 'background'\n          : 'color';\n        if (select.querySelector('option') == null) {\n          fillSelect(\n            select,\n            COLORS,\n            format === 'background' ? '#ffffff' : '#000000',\n          );\n        }\n        return new ColorPicker(select, icons[format] as string);\n      }\n      if (select.querySelector('option') == null) {\n        if (select.classList.contains('ql-font')) {\n          fillSelect(select, FONTS);\n        } else if (select.classList.contains('ql-header')) {\n          fillSelect(select, HEADERS);\n        } else if (select.classList.contains('ql-size')) {\n          fillSelect(select, SIZES);\n        }\n      }\n      return new Picker(select);\n    });\n    const update = () => {\n      this.pickers.forEach((picker) => {\n        picker.update();\n      });\n    };\n    this.quill.on(Emitter.events.EDITOR_CHANGE, update);\n  }\n}\nBaseTheme.DEFAULTS = merge({}, Theme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        formula() {\n          this.quill.theme.tooltip.edit('formula');\n        },\n        image() {\n          let fileInput = this.container.querySelector(\n            'input.ql-image[type=file]',\n          );\n          if (fileInput == null) {\n            fileInput = document.createElement('input');\n            fileInput.setAttribute('type', 'file');\n            fileInput.setAttribute(\n              'accept',\n              this.quill.uploader.options.mimetypes.join(', '),\n            );\n            fileInput.classList.add('ql-image');\n            fileInput.addEventListener('change', () => {\n              const range = this.quill.getSelection(true);\n              this.quill.uploader.upload(range, fileInput.files);\n              fileInput.value = '';\n            });\n            this.container.appendChild(fileInput);\n          }\n          fileInput.click();\n        },\n        video() {\n          this.quill.theme.tooltip.edit('video');\n        },\n      },\n    },\n  },\n});\n\nclass BaseTooltip extends Tooltip {\n  textbox: HTMLInputElement | null;\n  linkRange?: Range;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    super(quill, boundsContainer);\n    this.textbox = this.root.querySelector('input[type=\"text\"]');\n    this.listen();\n  }\n\n  listen() {\n    // @ts-expect-error Fix me later\n    this.textbox.addEventListener('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.save();\n        event.preventDefault();\n      } else if (event.key === 'Escape') {\n        this.cancel();\n        event.preventDefault();\n      }\n    });\n  }\n\n  cancel() {\n    this.hide();\n    this.restoreFocus();\n  }\n\n  edit(mode = 'link', preview: string | null = null) {\n    this.root.classList.remove('ql-hidden');\n    this.root.classList.add('ql-editing');\n    if (this.textbox == null) return;\n\n    if (preview != null) {\n      this.textbox.value = preview;\n    } else if (mode !== this.root.getAttribute('data-mode')) {\n      this.textbox.value = '';\n    }\n    const bounds = this.quill.getBounds(this.quill.selection.savedRange);\n    if (bounds != null) {\n      this.position(bounds);\n    }\n    this.textbox.select();\n    this.textbox.setAttribute(\n      'placeholder',\n      this.textbox.getAttribute(`data-${mode}`) || '',\n    );\n    this.root.setAttribute('data-mode', mode);\n  }\n\n  restoreFocus() {\n    this.quill.focus({ preventScroll: true });\n  }\n\n  save() {\n    // @ts-expect-error Fix me later\n    let { value } = this.textbox;\n    switch (this.root.getAttribute('data-mode')) {\n      case 'link': {\n        const { scrollTop } = this.quill.root;\n        if (this.linkRange) {\n          this.quill.formatText(\n            this.linkRange,\n            'link',\n            value,\n            Emitter.sources.USER,\n          );\n          delete this.linkRange;\n        } else {\n          this.restoreFocus();\n          this.quill.format('link', value, Emitter.sources.USER);\n        }\n        this.quill.root.scrollTop = scrollTop;\n        break;\n      }\n      case 'video': {\n        value = extractVideoUrl(value);\n      } // eslint-disable-next-line no-fallthrough\n      case 'formula': {\n        if (!value) break;\n        const range = this.quill.getSelection(true);\n        if (range != null) {\n          const index = range.index + range.length;\n          this.quill.insertEmbed(\n            index,\n            // @ts-expect-error Fix me later\n            this.root.getAttribute('data-mode'),\n            value,\n            Emitter.sources.USER,\n          );\n          if (this.root.getAttribute('data-mode') === 'formula') {\n            this.quill.insertText(index + 1, ' ', Emitter.sources.USER);\n          }\n          this.quill.setSelection(index + 2, Emitter.sources.USER);\n        }\n        break;\n      }\n      default:\n    }\n    // @ts-expect-error Fix me later\n    this.textbox.value = '';\n    this.hide();\n  }\n}\n\nfunction extractVideoUrl(url: string) {\n  let match =\n    url.match(\n      /^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtube\\.com\\/watch.*v=([a-zA-Z0-9_-]+)/,\n    ) ||\n    url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/);\n  if (match) {\n    return `${match[1] || 'https'}://www.youtube.com/embed/${\n      match[2]\n    }?showinfo=0`;\n  }\n  // eslint-disable-next-line no-cond-assign\n  if ((match = url.match(/^(?:(https?):\\/\\/)?(?:www\\.)?vimeo\\.com\\/(\\d+)/))) {\n    return `${match[1] || 'https'}://player.vimeo.com/video/${match[2]}/`;\n  }\n  return url;\n}\n\nfunction fillSelect(\n  select: HTMLSelectElement,\n  values: Array<string | boolean>,\n  defaultValue: unknown = false,\n) {\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value === defaultValue) {\n      option.setAttribute('selected', 'selected');\n    } else {\n      option.setAttribute('value', String(value));\n    }\n    select.appendChild(option);\n  });\n}\n\nexport { BaseTooltip, BaseTheme as default };\n",null,"import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport LinkBlot from '../formats/link.js';\nimport { Range } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport type Quill from '../core.js';\nimport type { Context } from '../modules/keyboard.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\nimport type { ThemeOptions } from '../core/theme.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  [{ header: ['1', '2', '3', false] }],\n  ['bold', 'italic', 'underline', 'link'],\n  [{ list: 'ordered' }, { list: 'bullet' }],\n  ['clean'],\n];\n\nclass SnowTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<a class=\"ql-preview\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"about:blank\"></a>',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-action\"></a>',\n    '<a class=\"ql-remove\"></a>',\n  ].join('');\n\n  preview = this.root.querySelector('a.ql-preview');\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-action')\n      .addEventListener('click', (event) => {\n        if (this.root.classList.contains('ql-editing')) {\n          this.save();\n        } else {\n          // @ts-expect-error Fix me later\n          this.edit('link', this.preview.textContent);\n        }\n        event.preventDefault();\n      });\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-remove')\n      .addEventListener('click', (event) => {\n        if (this.linkRange != null) {\n          const range = this.linkRange;\n          this.restoreFocus();\n          this.quill.formatText(range, 'link', false, Emitter.sources.USER);\n          delete this.linkRange;\n        }\n        event.preventDefault();\n        this.hide();\n      });\n    this.quill.on(\n      Emitter.events.SELECTION_CHANGE,\n      (range, oldRange, source) => {\n        if (range == null) return;\n        if (range.length === 0 && source === Emitter.sources.USER) {\n          const [link, offset] = this.quill.scroll.descendant(\n            LinkBlot,\n            range.index,\n          );\n          if (link != null) {\n            this.linkRange = new Range(range.index - offset, link.length());\n            const preview = LinkBlot.formats(link.domNode);\n            // @ts-expect-error Fix me later\n            this.preview.textContent = preview;\n            // @ts-expect-error Fix me later\n            this.preview.setAttribute('href', preview);\n            this.show();\n            const bounds = this.quill.getBounds(this.linkRange);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n            return;\n          }\n        } else {\n          delete this.linkRange;\n        }\n        this.hide();\n      },\n    );\n  }\n\n  show() {\n    super.show();\n    this.root.removeAttribute('data-mode');\n  }\n}\n\nclass SnowTheme extends BaseTheme {\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-snow');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    if (toolbar.container != null) {\n      toolbar.container.classList.add('ql-snow');\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n      // @ts-expect-error\n      this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n      if (toolbar.container.querySelector('.ql-link')) {\n        this.quill.keyboard.addBinding(\n          { key: 'k', shortKey: true },\n          (_range: Range, context: Context) => {\n            toolbar.handlers.link.call(toolbar, !context.format.link);\n          },\n        );\n      }\n    }\n  }\n}\nSnowTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (value) {\n            const range = this.quill.getSelection();\n            if (range == null || range.length === 0) return;\n            let preview = this.quill.getText(range);\n            if (\n              /^\\S+@\\S+\\.\\S+$/.test(preview) &&\n              preview.indexOf('mailto:') !== 0\n            ) {\n              preview = `mailto:${preview}`;\n            }\n            const { tooltip } = this.quill.theme;\n            tooltip.edit('link', preview);\n          } else {\n            this.quill.format('link', false);\n          }\n        },\n      },\n    },\n  },\n});\n\nexport default SnowTheme;\n"],"names":["_isReactComponent","require","_isCompatTag","_buildChildren","_assertNode","_index","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_createTypeAnnotationBasedOnTypeof","_createFlowUnionType","_createTSUnionType","_index2","_uppercase","_productions","_cloneNode","_clone","_cloneDeep","_cloneDeepWithoutLoc","_cloneWithoutLoc","_addComment","_addComments","_inheritInnerComments","_inheritLeadingComments","_inheritsComments","_inheritTrailingComments","_removeComments","_index3","_index4","_ensureBlock","_toBindingIdentifierName","_toBlock","_toComputedKey","_toExpression","_toIdentifier","_toKeyAlias","_toStatement","_valueToNode","_index5","_appendToMemberExpression","_inherits","_prependToMemberExpression","_removeProperties","_removePropertiesDeep","_removeTypeDuplicates","_getBindingIdentifiers","_getOuterBindingIdentifiers","_traverse","_traverseFast","_shallowEqual","_is","_isBinding","_isBlockScoped","_isImmutable","_isLet","_isNode","_isNodesEquivalent","_isPlaceholderType","_isReferenced","_isScope","_isSpecifierDefault","_isType","_isValidES3Identifier","_isValidIdentifier","_isVar","_matchesPattern","_validate","_buildMatchMemberExpression","_index6","_deprecationWarning","react","isReactComponent","isCompatTag","buildChildren","toSequenceExpression","default","buildMatchMemberExpression","_default","match","allowPartial","parts","split","member","matchesPattern","isMemberExpression","Array","isArray","nodes","node","object","push","property","length","i","j","value","isIdentifier","name","isStringLiteral","isThisExpression","isArrayExpression","opts","type","shallowEqual","isAssignmentExpression","isBinaryExpression","isInterpreterDirective","isDirective","isDirectiveLiteral","isBlockStatement","isBreakStatement","isCallExpression","isCatchClause","isConditionalExpression","isContinueStatement","isDebuggerStatement","isDoWhileStatement","isEmptyStatement","isExpressionStatement","isFile","isForInStatement","isForStatement","isFunctionDeclaration","isFunctionExpression","isIfStatement","isLabeledStatement","isNumericLiteral","isNullLiteral","isBooleanLiteral","isRegExpLiteral","isLogicalExpression","isNewExpression","isProgram","isObjectExpression","isObjectMethod","isObjectProperty","isRestElement","isReturnStatement","isSequenceExpression","isParenthesizedExpression","isSwitchCase","isSwitchStatement","isThrowStatement","isTryStatement","isUnaryExpression","isUpdateExpression","isVariableDeclaration","isVariableDeclarator","isWhileStatement","isWithStatement","isAssignmentPattern","isArrayPattern","isArrowFunctionExpression","isClassBody","isClassExpression","isClassDeclaration","isExportAllDeclaration","isExportDefaultDeclaration","isExportNamedDeclaration","isExportSpecifier","isForOfStatement","isImportDeclaration","isImportDefaultSpecifier","isImportNamespaceSpecifier","isImportSpecifier","isImportExpression","isMetaProperty","isClassMethod","isObjectPattern","isSpreadElement","isSuper","isTaggedTemplateExpression","isTemplateElement","isTemplateLiteral","isYieldExpression","isAwaitExpression","isImport","isBigIntLiteral","isExportNamespaceSpecifier","isOptionalMemberExpression","isOptionalCallExpression","isClassProperty","isClassAccessorProperty","isClassPrivateProperty","isClassPrivateMethod","isPrivateName","isStaticBlock","isAnyTypeAnnotation","isArrayTypeAnnotation","isBooleanTypeAnnotation","isBooleanLiteralTypeAnnotation","isNullLiteralTypeAnnotation","isClassImplements","isDeclareClass","isDeclareFunction","isDeclareInterface","isDeclareModule","isDeclareModuleExports","isDeclareTypeAlias","isDeclareOpaqueType","isDeclareVariable","isDeclareExportDeclaration","isDeclareExportAllDeclaration","isDeclaredPredicate","isExistsTypeAnnotation","isFunctionTypeAnnotation","isFunctionTypeParam","isGenericTypeAnnotation","isInferredPredicate","isInterfaceExtends","isInterfaceDeclaration","isInterfaceTypeAnnotation","isIntersectionTypeAnnotation","isMixedTypeAnnotation","isEmptyTypeAnnotation","isNullableTypeAnnotation","isNumberLiteralTypeAnnotation","isNumberTypeAnnotation","isObjectTypeAnnotation","isObjectTypeInternalSlot","isObjectTypeCallProperty","isObjectTypeIndexer","isObjectTypeProperty","isObjectTypeSpreadProperty","isOpaqueType","isQualifiedTypeIdentifier","isStringLiteralTypeAnnotation","isStringTypeAnnotation","isSymbolTypeAnnotation","isThisTypeAnnotation","isTupleTypeAnnotation","isTypeofTypeAnnotation","isTypeAlias","isTypeAnnotation","isTypeCastExpression","isTypeParameter","isTypeParameterDeclaration","isTypeParameterInstantiation","isUnionTypeAnnotation","isVariance","isVoidTypeAnnotation","isEnumDeclaration","isEnumBooleanBody","isEnumNumberBody","isEnumStringBody","isEnumSymbolBody","isEnumBooleanMember","isEnumNumberMember","isEnumStringMember","isEnumDefaultedMember","isIndexedAccessType","isOptionalIndexedAccessType","isJSXAttribute","isJSXClosingElement","isJSXElement","isJSXEmptyExpression","isJSXExpressionContainer","isJSXSpreadChild","isJSXIdentifier","isJSXMemberExpression","isJSXNamespacedName","isJSXOpeningElement","isJSXSpreadAttribute","isJSXText","isJSXFragment","isJSXOpeningFragment","isJSXClosingFragment","isNoop","isPlaceholder","isV8IntrinsicIdentifier","isArgumentPlaceholder","isBindExpression","isImportAttribute","isDecorator","isDoExpression","isExportDefaultSpecifier","isRecordExpression","isTupleExpression","isDecimalLiteral","isModuleExpression","isTopicReference","isPipelineTopicExpression","isPipelineBareFunction","isPipelinePrimaryTopicReference","isTSParameterProperty","isTSDeclareFunction","isTSDeclareMethod","isTSQualifiedName","isTSCallSignatureDeclaration","isTSConstructSignatureDeclaration","isTSPropertySignature","isTSMethodSignature","isTSIndexSignature","isTSAnyKeyword","isTSBooleanKeyword","isTSBigIntKeyword","isTSIntrinsicKeyword","isTSNeverKeyword","isTSNullKeyword","isTSNumberKeyword","isTSObjectKeyword","isTSStringKeyword","isTSSymbolKeyword","isTSUndefinedKeyword","isTSUnknownKeyword","isTSVoidKeyword","isTSThisType","isTSFunctionType","isTSConstructorType","isTSTypeReference","isTSTypePredicate","isTSTypeQuery","isTSTypeLiteral","isTSArrayType","isTSTupleType","isTSOptionalType","isTSRestType","isTSNamedTupleMember","isTSUnionType","isTSIntersectionType","isTSConditionalType","isTSInferType","isTSParenthesizedType","isTSTypeOperator","isTSIndexedAccessType","isTSMappedType","isTSLiteralType","isTSExpressionWithTypeArguments","isTSInterfaceDeclaration","isTSInterfaceBody","isTSTypeAliasDeclaration","isTSInstantiationExpression","isTSAsExpression","isTSSatisfiesExpression","isTSTypeAssertion","isTSEnumDeclaration","isTSEnumMember","isTSModuleDeclaration","isTSModuleBlock","isTSImportType","isTSImportEqualsDeclaration","isTSExternalModuleReference","isTSNonNullExpression","isTSExportAssignment","isTSNamespaceExportDeclaration","isTSTypeAnnotation","isTSTypeParameterInstantiation","isTSTypeParameterDeclaration","isTSTypeParameter","isStandardized","expectedNode","isExpression","isBinary","isScopable","isBlockParent","isBlock","isStatement","isTerminatorless","isCompletionStatement","isConditional","isLoop","isWhile","isExpressionWrapper","isFor","isForXStatement","isFunction","isFunctionParent","isPureish","isDeclaration","isPatternLike","isLVal","isTSEntityName","isLiteral","isImmutable","isUserWhitespacable","isMethod","isObjectMember","isProperty","isUnaryLike","isPattern","isClass","isImportOrExportDeclaration","isExportDeclaration","isModuleSpecifier","isAccessor","isPrivate","isFlow","isFlowType","isFlowBaseAnnotation","isFlowDeclaration","isFlowPredicate","isEnumBody","isEnumMember","isJSX","isMiscellaneous","isTypeScript","isTSTypeElement","isTSType","isTSBaseType","isNumberLiteral","deprecationWarning","isRegexLiteral","isRestProperty","isSpreadProperty","isModuleDeclaration","actual","expected","warnings","Set","oldName","newName","prefix","has","add","internal","trace","captureShortStackTrace","console","warn","skip","stackTraceLimit","prepareStackTrace","Error","stackTrace","err","stack","shortStackTrace","slice","test","getFileName","map","frame","join","tagName","_cleanJSXElementLiteralChild","elements","children","child","cleanJSXElementLiteralChild","expression","args","lines","lastNonEmptyLine","str","line","isFirstLine","isLastLine","isLastNonEmptyLine","trimmedLine","replace","inherits","stringLiteral","_validateNode","arrayExpression","validateNode","assignmentExpression","operator","left","right","binaryExpression","interpreterDirective","directive","directiveLiteral","blockStatement","body","directives","breakStatement","label","callExpression","callee","_arguments","arguments","catchClause","param","conditionalExpression","consequent","alternate","continueStatement","debuggerStatement","doWhileStatement","emptyStatement","expressionStatement","file","program","comments","tokens","forInStatement","forStatement","init","update","functionDeclaration","id","params","generator","async","functionExpression","identifier","ifStatement","labeledStatement","numericLiteral","nullLiteral","booleanLiteral","regExpLiteral","pattern","flags","logicalExpression","memberExpression","computed","optional","newExpression","sourceType","interpreter","objectExpression","properties","objectMethod","kind","objectProperty","shorthand","decorators","restElement","argument","returnStatement","sequenceExpression","expressions","parenthesizedExpression","switchCase","switchStatement","discriminant","cases","thisExpression","throwStatement","tryStatement","block","handler","finalizer","unaryExpression","updateExpression","variableDeclaration","declarations","variableDeclarator","whileStatement","withStatement","assignmentPattern","arrayPattern","arrowFunctionExpression","classBody","classExpression","superClass","classDeclaration","exportAllDeclaration","source","exportDefaultDeclaration","declaration","exportNamedDeclaration","specifiers","exportSpecifier","local","exported","forOfStatement","_await","await","importDeclaration","importDefaultSpecifier","importNamespaceSpecifier","importSpecifier","imported","importExpression","options","metaProperty","meta","classMethod","_static","static","objectPattern","spreadElement","_super","taggedTemplateExpression","tag","quasi","templateElement","tail","templateLiteral","quasis","yieldExpression","delegate","awaitExpression","_import","bigIntLiteral","exportNamespaceSpecifier","optionalMemberExpression","optionalCallExpression","classProperty","typeAnnotation","classAccessorProperty","classPrivateProperty","classPrivateMethod","privateName","staticBlock","anyTypeAnnotation","arrayTypeAnnotation","elementType","booleanTypeAnnotation","booleanLiteralTypeAnnotation","nullLiteralTypeAnnotation","classImplements","typeParameters","declareClass","_extends","extends","declareFunction","declareInterface","declareModule","declareModuleExports","declareTypeAlias","declareOpaqueType","supertype","declareVariable","declareExportDeclaration","declareExportAllDeclaration","declaredPredicate","existsTypeAnnotation","functionTypeAnnotation","rest","returnType","functionTypeParam","genericTypeAnnotation","inferredPredicate","interfaceExtends","interfaceDeclaration","interfaceTypeAnnotation","intersectionTypeAnnotation","types","mixedTypeAnnotation","emptyTypeAnnotation","nullableTypeAnnotation","numberLiteralTypeAnnotation","numberTypeAnnotation","objectTypeAnnotation","indexers","callProperties","internalSlots","exact","objectTypeInternalSlot","method","objectTypeCallProperty","objectTypeIndexer","variance","objectTypeProperty","proto","objectTypeSpreadProperty","opaqueType","impltype","qualifiedTypeIdentifier","qualification","stringLiteralTypeAnnotation","stringTypeAnnotation","symbolTypeAnnotation","thisTypeAnnotation","tupleTypeAnnotation","typeofTypeAnnotation","typeAlias","typeCastExpression","typeParameter","bound","typeParameterDeclaration","typeParameterInstantiation","unionTypeAnnotation","voidTypeAnnotation","enumDeclaration","enumBooleanBody","members","explicitType","hasUnknownMembers","enumNumberBody","enumStringBody","enumSymbolBody","enumBooleanMember","enumNumberMember","enumStringMember","enumDefaultedMember","indexedAccessType","objectType","indexType","optionalIndexedAccessType","jsxAttribute","jsxClosingElement","jsxElement","openingElement","closingElement","selfClosing","jsxEmptyExpression","jsxExpressionContainer","jsxSpreadChild","jsxIdentifier","jsxMemberExpression","jsxNamespacedName","namespace","jsxOpeningElement","attributes","jsxSpreadAttribute","jsxText","jsxFragment","openingFragment","closingFragment","jsxOpeningFragment","jsxClosingFragment","noop","placeholder","v8IntrinsicIdentifier","argumentPlaceholder","bindExpression","importAttribute","decorator","doExpression","exportDefaultSpecifier","recordExpression","tupleExpression","decimalLiteral","moduleExpression","topicReference","pipelineTopicExpression","pipelineBareFunction","pipelinePrimaryTopicReference","tsParameterProperty","parameter","tsDeclareFunction","tsDeclareMethod","tsQualifiedName","tsCallSignatureDeclaration","parameters","tsConstructSignatureDeclaration","tsPropertySignature","tsMethodSignature","tsIndexSignature","tsAnyKeyword","tsBooleanKeyword","tsBigIntKeyword","tsIntrinsicKeyword","tsNeverKeyword","tsNullKeyword","tsNumberKeyword","tsObjectKeyword","tsStringKeyword","tsSymbolKeyword","tsUndefinedKeyword","tsUnknownKeyword","tsVoidKeyword","tsThisType","tsFunctionType","tsConstructorType","tsTypeReference","typeName","tsTypePredicate","parameterName","asserts","tsTypeQuery","exprName","tsTypeLiteral","tsArrayType","tsTupleType","elementTypes","tsOptionalType","tsRestType","tsNamedTupleMember","tsUnionType","tsIntersectionType","tsConditionalType","checkType","extendsType","trueType","falseType","tsInferType","tsParenthesizedType","tsTypeOperator","tsIndexedAccessType","tsMappedType","nameType","tsLiteralType","literal","tsExpressionWithTypeArguments","tsInterfaceDeclaration","tsInterfaceBody","tsTypeAliasDeclaration","tsInstantiationExpression","tsAsExpression","tsSatisfiesExpression","tsTypeAssertion","tsEnumDeclaration","tsEnumMember","initializer","tsModuleDeclaration","tsModuleBlock","tsImportType","qualifier","tsImportEqualsDeclaration","moduleReference","isExport","tsExternalModuleReference","tsNonNullExpression","tsExportAssignment","tsNamespaceExportDeclaration","tsTypeAnnotation","tsTypeParameterInstantiation","tsTypeParameterDeclaration","tsTypeParameter","constraint","NumberLiteral","RegexLiteral","RestProperty","SpreadProperty","BUILDER_KEYS","validate","val","fields","NODE_FIELDS","field","validateField","validateChild","NODE_PARENT_VALIDATIONS","_toFastProperties","_utils","_placeholders","_deprecatedAliases","DEPRECATED_ALIASES","deprecatedAlias","FLIPPED_ALIAS_KEYS","toFastProperties","VISITOR_KEYS","ALIAS_KEYS","DEPRECATED_KEYS","PLACEHOLDERS_ALIAS","PLACEHOLDERS_FLIPPED_ALIAS","TYPES","concat","_helperValidatorIdentifier","_helperStringParser","defineType","defineAliasedType","chain","assertValueType","assertEach","assertNodeOrValueType","process","env","BABEL_TYPES_8_BREAKING","undefined","visitor","aliases","assertOneOf","ASSIGNMENT_OPERATORS","validator","is","assertNodeType","builder","BINARY_OPERATORS","inOp","assign","oneOfNodeTypes","typeArguments","each","functionCommon","functionTypeAnnotationCommon","functionDeclarationCommon","declare","predicate","parent","patternLikeCommon","isValidIdentifier","TypeError","exec","parentKey","nonComp","isKeyword","isReservedWord","Number","isFinite","error","invalid","LOGICAL_OPERATORS","normal","listKey","index","UNARY_OPERATORS","UPDATE_OPERATORS","without","definite","superTypeParameters","implements","mixins","abstract","exportKind","validateOptional","assertions","sourced","sourceless","lval","module","phase","importKind","classMethodOrPropertyCommon","accessibility","override","classMethodOrDeclareMethodCommon","access","assertShape","raw","cooked","templateElementCookedValidator","unterminatedCalled","firstInvalidLoc","readStringContents","unterminated","strictNumericEscape","invalidEscapeSequence","numericSeparatorInEscapeSequence","unexpectedNumericSeparator","invalidDigit","invalidCodePoint","assertOptionalChainStart","readonly","matches","isType","isPlaceholderType","nodeType","targetType","alias","placeholderType","reserved","isStrictReservedWord","isIdentifierName","_identifier","_keyword","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","isIdentifierStart","String","fromCharCode","isIdentifierChar","isFirst","cp","charCodeAt","trail","reservedWords","keyword","strict","strictBind","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isDigit","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","input","lineStart","curLine","errors","initialPos","initialLineStart","initialCurLine","out","chunkStart","isStringEnd","res","readEscapedChar","containsInvalid","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","startPos","octalStr","octal","parseInt","next","len","forceLen","n","readInt","radix","allowNumSeparator","bailOnError","start","forbiddenSiblings","isAllowedSibling","total","e","Infinity","prev","isNaN","_isDigit","indexOf","STATEMENT_OR_BLOCK_KEYS","FLATTENABLE_KEYS","FOR_INIT_KEYS","COMMENT_KEYS","BOOLEAN_NUMBER_BINARY_OPERATORS","EQUALITY_BINARY_OPERATORS","COMPARISON_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","NUMBER_BINARY_OPERATORS","op","BOOLEAN_UNARY_OPERATORS","NUMBER_UNARY_OPERATORS","STRING_UNARY_OPERATORS","INHERIT_KEYS","force","BLOCK_SCOPED_SYMBOL","Symbol","for","NOT_LOCAL_BINDING","getType","typeIs","validateType","validateOptionalType","arrayOf","arrayOfType","validateArrayOfType","callback","subkey","v","values","JSON","stringify","oneOf","oneOfNodeOrValueTypes","valid","shape","message","shapeOf","_current","current","fns","fn","chainOf","validTypeOpts","validFieldKeys","store","defined","_store$opts$inherits$","_defined","additional","filter","a","includes","unshift","getOwnPropertyNames","def","deprecated","k","defineInterfaceishType","this","inexact","PLACEHOLDERS","Declaration","Pattern","_core","bool","tSFunctionTypeAnnotationCommon","signatureDeclarationCommon","callConstructSignatureDeclaration","namedTypeElementCommon","tsKeywordTypes","fnOrCtrBase","unionOrIntersection","unaryOperator","TSTypeExpression","const","global","in","ModuleDeclaration","assertNode","isNode","_node$type","assert","assertArrayExpression","assertAssignmentExpression","assertBinaryExpression","assertInterpreterDirective","assertDirective","assertDirectiveLiteral","assertBlockStatement","assertBreakStatement","assertCallExpression","assertCatchClause","assertConditionalExpression","assertContinueStatement","assertDebuggerStatement","assertDoWhileStatement","assertEmptyStatement","assertExpressionStatement","assertFile","assertForInStatement","assertForStatement","assertFunctionDeclaration","assertFunctionExpression","assertIdentifier","assertIfStatement","assertLabeledStatement","assertStringLiteral","assertNumericLiteral","assertNullLiteral","assertBooleanLiteral","assertRegExpLiteral","assertLogicalExpression","assertMemberExpression","assertNewExpression","assertProgram","assertObjectExpression","assertObjectMethod","assertObjectProperty","assertRestElement","assertReturnStatement","assertSequenceExpression","assertParenthesizedExpression","assertSwitchCase","assertSwitchStatement","assertThisExpression","assertThrowStatement","assertTryStatement","assertUnaryExpression","assertUpdateExpression","assertVariableDeclaration","assertVariableDeclarator","assertWhileStatement","assertWithStatement","assertAssignmentPattern","assertArrayPattern","assertArrowFunctionExpression","assertClassBody","assertClassExpression","assertClassDeclaration","assertExportAllDeclaration","assertExportDefaultDeclaration","assertExportNamedDeclaration","assertExportSpecifier","assertForOfStatement","assertImportDeclaration","assertImportDefaultSpecifier","assertImportNamespaceSpecifier","assertImportSpecifier","assertImportExpression","assertMetaProperty","assertClassMethod","assertObjectPattern","assertSpreadElement","assertSuper","assertTaggedTemplateExpression","assertTemplateElement","assertTemplateLiteral","assertYieldExpression","assertAwaitExpression","assertImport","assertBigIntLiteral","assertExportNamespaceSpecifier","assertOptionalMemberExpression","assertOptionalCallExpression","assertClassProperty","assertClassAccessorProperty","assertClassPrivateProperty","assertClassPrivateMethod","assertPrivateName","assertStaticBlock","assertAnyTypeAnnotation","assertArrayTypeAnnotation","assertBooleanTypeAnnotation","assertBooleanLiteralTypeAnnotation","assertNullLiteralTypeAnnotation","assertClassImplements","assertDeclareClass","assertDeclareFunction","assertDeclareInterface","assertDeclareModule","assertDeclareModuleExports","assertDeclareTypeAlias","assertDeclareOpaqueType","assertDeclareVariable","assertDeclareExportDeclaration","assertDeclareExportAllDeclaration","assertDeclaredPredicate","assertExistsTypeAnnotation","assertFunctionTypeAnnotation","assertFunctionTypeParam","assertGenericTypeAnnotation","assertInferredPredicate","assertInterfaceExtends","assertInterfaceDeclaration","assertInterfaceTypeAnnotation","assertIntersectionTypeAnnotation","assertMixedTypeAnnotation","assertEmptyTypeAnnotation","assertNullableTypeAnnotation","assertNumberLiteralTypeAnnotation","assertNumberTypeAnnotation","assertObjectTypeAnnotation","assertObjectTypeInternalSlot","assertObjectTypeCallProperty","assertObjectTypeIndexer","assertObjectTypeProperty","assertObjectTypeSpreadProperty","assertOpaqueType","assertQualifiedTypeIdentifier","assertStringLiteralTypeAnnotation","assertStringTypeAnnotation","assertSymbolTypeAnnotation","assertThisTypeAnnotation","assertTupleTypeAnnotation","assertTypeofTypeAnnotation","assertTypeAlias","assertTypeAnnotation","assertTypeCastExpression","assertTypeParameter","assertTypeParameterDeclaration","assertTypeParameterInstantiation","assertUnionTypeAnnotation","assertVariance","assertVoidTypeAnnotation","assertEnumDeclaration","assertEnumBooleanBody","assertEnumNumberBody","assertEnumStringBody","assertEnumSymbolBody","assertEnumBooleanMember","assertEnumNumberMember","assertEnumStringMember","assertEnumDefaultedMember","assertIndexedAccessType","assertOptionalIndexedAccessType","assertJSXAttribute","assertJSXClosingElement","assertJSXElement","assertJSXEmptyExpression","assertJSXExpressionContainer","assertJSXSpreadChild","assertJSXIdentifier","assertJSXMemberExpression","assertJSXNamespacedName","assertJSXOpeningElement","assertJSXSpreadAttribute","assertJSXText","assertJSXFragment","assertJSXOpeningFragment","assertJSXClosingFragment","assertNoop","assertPlaceholder","assertV8IntrinsicIdentifier","assertArgumentPlaceholder","assertBindExpression","assertImportAttribute","assertDecorator","assertDoExpression","assertExportDefaultSpecifier","assertRecordExpression","assertTupleExpression","assertDecimalLiteral","assertModuleExpression","assertTopicReference","assertPipelineTopicExpression","assertPipelineBareFunction","assertPipelinePrimaryTopicReference","assertTSParameterProperty","assertTSDeclareFunction","assertTSDeclareMethod","assertTSQualifiedName","assertTSCallSignatureDeclaration","assertTSConstructSignatureDeclaration","assertTSPropertySignature","assertTSMethodSignature","assertTSIndexSignature","assertTSAnyKeyword","assertTSBooleanKeyword","assertTSBigIntKeyword","assertTSIntrinsicKeyword","assertTSNeverKeyword","assertTSNullKeyword","assertTSNumberKeyword","assertTSObjectKeyword","assertTSStringKeyword","assertTSSymbolKeyword","assertTSUndefinedKeyword","assertTSUnknownKeyword","assertTSVoidKeyword","assertTSThisType","assertTSFunctionType","assertTSConstructorType","assertTSTypeReference","assertTSTypePredicate","assertTSTypeQuery","assertTSTypeLiteral","assertTSArrayType","assertTSTupleType","assertTSOptionalType","assertTSRestType","assertTSNamedTupleMember","assertTSUnionType","assertTSIntersectionType","assertTSConditionalType","assertTSInferType","assertTSParenthesizedType","assertTSTypeOperator","assertTSIndexedAccessType","assertTSMappedType","assertTSLiteralType","assertTSExpressionWithTypeArguments","assertTSInterfaceDeclaration","assertTSInterfaceBody","assertTSTypeAliasDeclaration","assertTSInstantiationExpression","assertTSAsExpression","assertTSSatisfiesExpression","assertTSTypeAssertion","assertTSEnumDeclaration","assertTSEnumMember","assertTSModuleDeclaration","assertTSModuleBlock","assertTSImportType","assertTSImportEqualsDeclaration","assertTSExternalModuleReference","assertTSNonNullExpression","assertTSExportAssignment","assertTSNamespaceExportDeclaration","assertTSTypeAnnotation","assertTSTypeParameterInstantiation","assertTSTypeParameterDeclaration","assertTSTypeParameter","assertStandardized","assertExpression","assertBinary","assertScopable","assertBlockParent","assertBlock","assertStatement","assertTerminatorless","assertCompletionStatement","assertConditional","assertLoop","assertWhile","assertExpressionWrapper","assertFor","assertForXStatement","assertFunction","assertFunctionParent","assertPureish","assertDeclaration","assertPatternLike","assertLVal","assertTSEntityName","assertLiteral","assertImmutable","assertUserWhitespacable","assertMethod","assertObjectMember","assertProperty","assertUnaryLike","assertPattern","assertClass","assertImportOrExportDeclaration","assertExportDeclaration","assertModuleSpecifier","assertAccessor","assertPrivate","assertFlow","assertFlowType","assertFlowBaseAnnotation","assertFlowDeclaration","assertFlowPredicate","assertEnumBody","assertEnumMember","assertJSX","assertMiscellaneous","assertTypeScript","assertTSTypeElement","assertTSType","assertTSBaseType","assertNumberLiteral","assertRegexLiteral","assertRestProperty","assertSpreadProperty","assertModuleDeclaration","createTypeAnnotationBasedOnTypeof","createFlowUnionType","flattened","removeTypeDuplicates","getQualifiedName","nodesIn","from","generics","Map","bases","typeGroups","existing","baseType","genericName","createTSUnionType","typeAnnotations","buildUndefinedNode","hasOwn","Function","bind","cloneIfNode","obj","deep","withoutLoc","commentsCache","cloneNodeInternal","cloneIfNodeOrArray","cloneNode","newNode","maybeCloneComments","loc","leadingComments","innerComments","trailingComments","extra","comment","cache","ret","clone","cloneDeep","cloneDeepWithoutLoc","cloneWithoutLoc","addComment","content","addComments","_inherit","inheritInnerComments","inherit","Boolean","inheritLeadingComments","inheritsComments","inheritTrailingComments","removeComments","STANDARDIZED_TYPES","EXPRESSION_TYPES","BINARY_TYPES","SCOPABLE_TYPES","BLOCKPARENT_TYPES","BLOCK_TYPES","STATEMENT_TYPES","TERMINATORLESS_TYPES","COMPLETIONSTATEMENT_TYPES","CONDITIONAL_TYPES","LOOP_TYPES","WHILE_TYPES","EXPRESSIONWRAPPER_TYPES","FOR_TYPES","FORXSTATEMENT_TYPES","FUNCTION_TYPES","FUNCTIONPARENT_TYPES","PUREISH_TYPES","DECLARATION_TYPES","PATTERNLIKE_TYPES","LVAL_TYPES","TSENTITYNAME_TYPES","LITERAL_TYPES","IMMUTABLE_TYPES","USERWHITESPACABLE_TYPES","METHOD_TYPES","OBJECTMEMBER_TYPES","PROPERTY_TYPES","UNARYLIKE_TYPES","PATTERN_TYPES","CLASS_TYPES","IMPORTOREXPORTDECLARATION_TYPES","EXPORTDECLARATION_TYPES","MODULESPECIFIER_TYPES","ACCESSOR_TYPES","PRIVATE_TYPES","FLOW_TYPES","FLOWTYPE_TYPES","FLOWBASEANNOTATION_TYPES","FLOWDECLARATION_TYPES","FLOWPREDICATE_TYPES","ENUMBODY_TYPES","ENUMMEMBER_TYPES","JSX_TYPES","MISCELLANEOUS_TYPES","TYPESCRIPT_TYPES","TSTYPEELEMENT_TYPES","TSTYPE_TYPES","TSBASETYPE_TYPES","MODULEDECLARATION_TYPES","ensureBlock","result","toBlock","blockNodes","toBindingIdentifierName","toIdentifier","c","codePointAt","toUpperCase","toComputedKey","toExpression","toKeyAlias","increment","removePropertiesDeep","uid","MAX_SAFE_INTEGER","tree","traverseFast","removeProperties","enter","subNode","CLEAR_KEYS","CLEAR_KEYS_PLUS_COMMENTS","preserveComments","symbols","getOwnPropertySymbols","sym","toStatement","ignore","mustHaveId","newType","valueToNode","objectToString","toString","isRegExp","isPlainObject","getPrototypeOf","Math","abs","numerator","props","nodeKey","appendToMemberExpression","append","prependToMemberExpression","prepend","getBindingIdentifiers","duplicates","outerOnly","newBindingsOnly","search","ids","create","shift","_ids","DeclareClass","DeclareFunction","DeclareModule","DeclareVariable","DeclareInterface","DeclareTypeAlias","DeclareOpaqueType","InterfaceDeclaration","TypeAlias","OpaqueType","CatchClause","LabeledStatement","UnaryExpression","AssignmentExpression","ImportSpecifier","ImportNamespaceSpecifier","ImportDefaultSpecifier","ImportDeclaration","ExportSpecifier","ExportNamespaceSpecifier","ExportDefaultSpecifier","FunctionDeclaration","FunctionExpression","ArrowFunctionExpression","ObjectMethod","ClassMethod","ClassPrivateMethod","ForInStatement","ForOfStatement","ClassDeclaration","ClassExpression","RestElement","UpdateExpression","ObjectProperty","AssignmentPattern","ArrayPattern","ObjectPattern","VariableDeclaration","VariableDeclarator","getOuterBindingIdentifiers","traverse","handlers","state","exit","traverseSimpleImpl","ancestors","pop","isBinding","grandparent","isBlockScoped","isLet","isNodesEquivalent","b","visitorKeys","val_a","val_b","isReferenced","isScope","isSpecifierDefault","specifier","RESERVED_WORDS_ES3_ONLY","isValidES3Identifier","isVar","_gatherSequenceExpressions","scope","declars","gatherSequenceExpressions","declar","exprs","ensureLastUndefined","bindings","Quill","Parchment","Range","AlignClass","AlignStyle","DirectionAttribute","DirectionClass","DirectionStyle","Indent","Blockquote","Header","List","BackgroundClass","BackgroundStyle","ColorClass","ColorStyle","FontClass","FontStyle","SizeClass","SizeStyle","Bold","Italic","Link","Script","Strike","Underline","Formula","Image","Video","CodeBlock","Code","InlineCode","Syntax","Table","Toolbar","Icons","Picker","ColorPicker","IconPicker","Tooltip","BubbleTheme","SnowTheme","register","Block","BlockEmbed","Break","Container","Cursor","Embed","Inline","Scroll","TextBlot","Clipboard","History","Keyboard","Uploader","Delta","Op","OpIterator","AttributeMap","Input","UINode","merge","Editor","Emitter","instances","logger","Module","Selection","Composition","Theme","scrollRectIntoView","createRegistryWithFormats","debug","globalRegistry","Registry","ParentBlot","uiClass","DEFAULTS","bounds","modules","clipboard","keyboard","history","uploader","readOnly","registry","theme","events","sources","version","imports","delta","parchment","limit","level","find","bubble","import","path","target","overwrite","attrName","blotName","startsWith","constructor","container","expandConfig","html","innerHTML","trim","classList","root","addContainer","emitter","scrollBlotName","ScrollBlot","query","scroll","editor","selection","composition","addModule","on","EDITOR_CHANGE","TEXT_CHANGE","toggle","isBlank","SCROLL_UPDATE","mutations","oldRange","lastRange","newRange","getRange","selectionInfo","modify","SCROLL_EMBED_UPDATE","blot","change","retain","offset","statics","USER","contents","convert","text","setContents","clear","setAttribute","disable","allowReadOnlyEdits","refNode","className","document","createElement","insertBefore","blur","setRange","deleteText","overload","enable","editReadOnly","modifier","enabled","focus","preventScroll","scrollSelectionIntoView","format","API","range","getSelection","Scope","BLOCK","formatLine","formatText","setSelection","SILENT","formats","getBounds","containerBounds","getBoundingClientRect","bottom","top","height","width","getContents","getLength","getFormat","getIndex","getLeaf","leaf","getLine","getLines","MAX_VALUE","getModule","getSemanticHTML","getHTML","getText","hasFocus","insertEmbed","embed","insertText","isEnabled","off","once","removeFormat","rect","scrollIntoView","delete1","applied","insertContents","delete2","compose","max","setText","insert","updateContents","applyDelta","resolveSelector","selector","querySelector","expandModuleConfig","config","entries","reduce","expanded","_ref","omitUndefinedValuesFromOptions","fromEntries","entry","containerOrSelector","shouldUseDefaultTheme","quillModuleDefaults","quillDefaults","themeModuleDefaults","themeDefaults","userModuleOptions","toolbar","modulesWithDefaults","_ref2","moduleClass","oldDelta","shiftRange","emit","lengthOrSource","end","transformPosition","ClassAttributor","StyleAttributor","AttributorStore","LeafBlot","InlineBlot","BlockBlot","ContainerBlot","isEqual","EmbedBlot","bubbleFormats","CursorBlot","escapeText","ASCII","getDelta","scrollLength","batchStart","normalizedDelta","normalizeDelta","deleteDelta","normalizedOps","splitOpLines","ops","isImplicitNewlinePrepended","isImplicitNewlineAppended","endsWith","descendant","insertAt","diff","isInlineEmbed","INLINE","INLINE_BLOT","updateEmbedAt","formatAt","prependedLength","addedLength","delete","deleteAt","batchEnd","optimize","leaves","descendants","lineFormats","leafFormats","blots","combineFormats","lineOffset","lineLength","isWithinLine","convertHTML","head","suffixLength","suffix","data","textBlot","oldValue","CONTENTS","oldText","newText","relativeSelectionInfo","diffDelta","convertListHTML","items","lastIndent","endTag","getListType","indent","attribute","previousType","isRoot","forEachAt","childLength","list","outerHTML","domNode","Element","combined","merged","combinedValue","amount","NEWLINE_LENGTH","blockDelta","min","lineIndex","ref","remove","moveChildren","context","removeChild","defaultChild","allowedChildren","attach","BLOCK_ATTRIBUTE","blocks","BLOCK_BLOT","Text","order","compare","self","other","selfIndex","otherIndex","BLOT","isolate","wrap","s","entityMap","textNode","createTextNode","appendChild","savedLength","detach","position","restore","composing","getNativeRange","lastChild","parentNode","prevTextBlot","prevTextLength","nextTextBlot","nextText","mergedTextBlot","newTextNode","remapOffset","startNode","startOffset","endNode","endOffset","some","mutation","unwrap","mouseDown","cursor","savedRange","lastNative","handleComposition","handleDragging","listenDOM","setTimeout","SCROLL_BEFORE_UPDATE","native","contains","setNativeRange","triggeredByTyping","ignored","SCROLL_OPTIMIZE","COMPOSITION_BEFORE_START","COMPOSITION_END","nativeRange","collapsed","after","nextLine","createRange","setStart","setEnd","side","rangeCount","getRangeAt","normalizeNative","info","isConnected","normalized","normalizedToRange","activeElement","positions","indexes","startContainer","endContainer","childNodes","rangeToNative","getPosition","inclusive","leafOffset","removeAllRanges","addRange","SELECTION_CHANGE","EventEmitter","EVENTS","eventName","addEventListener","_len","_key","querySelectorAll","quill","handleDOM","SCROLL_BLOT_MOUNT","SCROLL_BLOT_UNMOUNT","COMPOSITION_START","COMPOSITION_BEFORE_END","domListeners","_len2","_key2","log","event","_len3","_key3","WeakMap","levels","ns","newLevel","isComposing","setupListeners","handleCompositionStart","queueMicrotask","handleCompositionEnd","Node","GUARD_TEXT","contentNode","childNode","leftGuard","rightGuard","prevLength","themes","ModuleClass","getParentElement","element","parentElement","getRootNode","host","getElementRect","scaleX","offsetWidth","scaleY","offsetHeight","clientWidth","clientHeight","paddingValueToInt","number","getScrollDistance","targetStart","targetEnd","scrollStart","scrollEnd","scrollPaddingStart","scrollPaddingEnd","targetRect","ownerDocument","isDocumentBody","bounding","window","visualViewport","documentElement","style","getComputedStyle","scrollDistanceX","scrollPaddingLeft","scrollPaddingRight","scrollDistanceY","scrollPaddingTop","scrollPaddingBottom","defaultView","scrollBy","scrollLeft","scrollTop","scrolledLeft","scrolledTop","MAX_REGISTER_ITERATIONS","CORE_FORMATS","sourceRegistry","coreBlot","iterations","requiredContainer","isLine","isUpdatable","updateContent","batch","handleDragStart","emitMount","emitUnmount","emitEmbedUpdate","first","last","wrapper","renderBlocks","deltaToRenderBlocks","shouldInsertNewlineChar","insertInlineContents","newlineCharLength","lineEndIndex","refBlot","refBlotOffset","renderBlock","createBlock","blockEmbed","getAttribute","blotIndex","blotLength","lengthLeft","childIndex","observer","takeRecords","preventDefault","currentBlockDelta","splitted","_ref3","isBlockBlot","_ref4","inlineContents","Attributor","AlignAttribute","deleteRange","normalizeExternalHTML","CLIPBOARD_CONFIG","TEXT_NODE","matchText","matchNewline","matchBreak","ELEMENT_NODE","matchBlot","matchAttributor","matchStyles","matchIndent","matchList","matchCodeBlock","matchTable","createMatchAlias","matchIgnore","ATTRIBUTE_ATTRIBUTORS","memo","attr","keyName","STYLE_ATTRIBUTORS","matchers","onCaptureCopy","onCapturePaste","matcher","addMatcher","deltaEndsWith","table","normalizeHTML","doc","DOMParser","parseFromString","nodeMatches","elementMatchers","textMatchers","prepareMatching","dangerouslyPasteHTML","paste","isCut","defaultPrevented","onCopy","clipboardData","setData","normalizeURIList","urlList","url","getData","files","upload","childElementCount","firstElementChild","onPaste","pastedDelta","pair","applyFormat","newDelta","endText","toLowerCase","isBetweenInlineElements","previousElementSibling","nextElementSibling","preNodes","isPre","childrenDelta","reducedDelta","_node","classes","styles","ATTRIBUTE","language","composed","checkedAttr","HTMLParagraphElement","nextSibling","firstChild","fontStyle","italic","textDecoration","underline","strike","fontWeight","bold","_ref5","parseFloat","textIndent","rows","row","replacer","collapse","replaced","previousSibling","whitelist","ColorAttributor","component","CodeBlockContainer","innerText","TAB","FontStyleAttributor","SHORTKEY","navigator","platform","evt","binding","which","addBinding","shiftKey","handleEnter","metaKey","ctrlKey","altKey","userAgent","handleBackspace","handleDelete","handleDeleteRange","listen","keyBinding","normalize","singleBinding","leafStart","offsetStart","leafEnd","offsetEnd","prefixText","suffixText","curContext","empty","prevented","every","isPrevLineEmpty","curFormats","prevFormats","formatDelta","nextFormats","defaultOptions","makeFormatHandler","outdent","makeCodeBlockHandler","tab","cutoff","header","cell","getTable","tableSide","blockquote","numLines","cur","makeEmbedArrowHandler","makeTableArrowHandler","textContent","where","shortKey","up","targetRow","targetCell","targetLine","firstFormats","lastFormats","_table","googleDocs","msWord","NORMALIZERS","normalWeightRegexp","blockTagNames","isBlockElement","normalizeEmptyLines","br","normalizeFontWeight","fragment","createDocumentFragment","replaceChild","ignoreRegexp","idRegexp","indentRegexp","parseListItem","idMatch","indentMatch","typeRegexp","typeMatch","normalizeListItem","msoList","others","shouldIgnore","listItems","parsed","childListItems","ul","listItem","li","delay","maxStack","userOnly","lastRecorded","ignoreChange","undo","redo","currentRange","record","transform","transformRange","inputType","dest","item","base","inverseDelta","invert","restoreSelection","changeDelta","undoDelta","undoRange","timestamp","Date","now","transformStack","stackItem","getLastChangeIndex","remoteDelta","oldItem","splice","endsWithNewlineChange","lastOp","deleteLength","changeIndex","caretRangeFromPoint","clientX","clientY","caretPositionFromPoint","offsetNode","dataTransfer","uploads","mimetypes","promises","Promise","resolve","reader","FileReader","onload","readAsDataURL","all","then","images","image","INSERT_TYPES","handleBeforeInput","replaceText","staticRange","getTargetRanges","getPlainTextFromInputEvent","isMac","TTL_FOR_VALID_SELECTION_CHANGE","canMoveCaretBeforeUINode","isListening","selectionChangeDeadline","handleArrowKeys","handleNavigationShortcuts","uiNode","isRTL","ensureListeningToSelectionChange","listener","handleSelectionChange","setStartAfter","setEndAfter","IndentAttributor","normalizedValue","canAdd","IndentClass","ListContainer","ListItem","ui","listEventHandler","attachUI","replaceWith","SANITIZED_URL","PROTOCOL_WHITELIST","sanitize","protocols","anchor","href","protocol","katex","render","throwOnError","errorColor","formula","ATTRIBUTES","hasAttribute","removeAttribute","video","BreakBlot","TokenAttributor","CodeToken","SyntaxCodeBlock","SyntaxCodeBlockContainer","forceNext","highlight","forced","cachedText","codeBlock","lib","versionString","majorVersion","hljs","languages","highlightBlot","initListener","initTimer","select","option","timer","clearTimeout","interval","nodeText","TableCell","TableRow","TableBody","TableContainer","tableId","listenBalanceCells","balanceTables","balanceCells","deleteColumn","cellOffset","deleteRow","deleteTable","insertColumn","column","rowOffset","insertColumnLeft","insertColumnRight","insertRow","insertRowAbove","insertRowBelow","insertTable","columns","fill","old","checkMerge","thisHead","thisTail","nextHead","nextTail","childFormats","splitAfter","maxColumns","cells","at","random","addControls","HTMLElement","controls","addHandler","selectedIndex","selected","prompt","isActive","addButton","groups","group","control","addSelect","clean","direction","align","link","alignLeftIcon","center","alignCenterIcon","alignRightIcon","justify","alignJustifyIcon","background","backgroundIcon","blockquoteIcon","boldIcon","cleanIcon","codeIcon","color","colorIcon","directionLeftToRightIcon","rtl","directionRightToLeftIcon","formulaIcon","headerIcon","header2Icon","header3Icon","header4Icon","header5Icon","header6Icon","italicIcon","imageIcon","indentIcon","outdentIcon","linkIcon","bullet","listBulletIcon","check","listCheckIcon","ordered","listOrderedIcon","script","sub","subscriptIcon","super","superscriptIcon","strikeIcon","tableIcon","underlineIcon","videoIcon","optionsCounter","toggleAriaAttribute","buildPicker","display","togglePicker","escape","buildItem","tabIndex","selectItem","buildLabel","DropdownIcon","buildOptions","close","trigger","dispatchEvent","Event","backgroundColor","colorLabel","stroke","icons","defaultItem","isScrollable","el","overflowY","boundsContainer","TEMPLATE","marginTop","hide","reference","rootBounds","verticalShift","show","BaseTheme","BaseTooltip","TOOLBAR_CONFIG","BubbleTooltip","lastLine","indexBounds","textbox","cancel","arrow","marginLeft","extendToolbar","tooltip","buildButtons","buildPickers","edit","ALIGNS","COLORS","FONTS","HEADERS","SIZES","removeEventListener","pickers","picker","buttons","button","selects","fillSelect","fileInput","click","save","restoreFocus","mode","preview","linkRange","extractVideoUrl","defaultValue","LinkBlot","SnowTooltip","_range"],"version":3,"file":"index.59a40e7a.js.map","sourceRoot":"/__parcel_source_root/"}